{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3","program":"/home/web-developer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","surf","--edition=2018","/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"curl-client\"","--cfg","feature=\"default\"","--cfg","feature=\"isahc\"","--cfg","feature=\"js-sys\"","--cfg","feature=\"middleware-logger\"","--cfg","feature=\"native-client\"","--cfg","feature=\"wasm-bindgen\"","--cfg","feature=\"wasm-bindgen-futures\"","--cfg","feature=\"wasm-client\"","--cfg","feature=\"web-sys\"","-C","metadata=baa7b996490dcecf","-C","extra-filename=-baa7b996490dcecf","--out-dir","/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps","-L","dependency=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps","--extern","futures=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libfutures-25ceef436bbbe587.rmeta","--extern","http=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libhttp-48e3aef6e1b2b80e.rmeta","--extern","isahc=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libisahc-978e136f16509118.rmeta","--extern","log=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/liblog-140fd9dd59717c26.rmeta","--extern","mime=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libmime-72a6dc4097256e4f.rmeta","--extern","mime_guess=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libmime_guess-eaef56e0a6ac77bd.rmeta","--extern","serde=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libserde-f3807e377b5dadff.rmeta","--extern","serde_json=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libserde_json-a574024251341551.rmeta","--extern","serde_urlencoded=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libserde_urlencoded-f0bc32c5218dea02.rmeta","--extern","url=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/liburl-1b807fa4cacda07f.rmeta","--cap-lints","allow","-L","native=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/build/curl-sys-d846edb385887ad3/out/build","-L","native=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/build/libnghttp2-sys-aacc4ff2cdfa4016/out/i/lib","-L","native=/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/build/libz-sys-42873072eb0eb22a/out/build","--error-format=json","--sysroot","/home/web-developer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/web-developer/Documents/PIAIC IOT FACULTY TEST PRPRATION CODE/async_web_request/target/rls/debug/deps/libsurf-baa7b996490dcecf.rmeta"},"prelude":{"crate_id":{"name":"surf","disambiguator":[9057688156606788377,749070395732131911]},"crate_root":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src","external_crates":[{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15682290646506683676,14718567046286836371]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13518982493124233533,12391336102434922224]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7248215118149796407,5784829660206374225]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17708477222956396348,13233362623726710952]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8402686647371542786,4893528090212846480]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12429915295247123903,16936150619785298801]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3561444793845825560,808161116134598189]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15626283292208498598,10979253865745053481]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9878202165149462890,17449959146959421140]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[749461474745232681,11698756817203002328]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3051499033766592682,13434072314992821142]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5967091660134880975,16425511823645009085]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10102111148853945701,5773407069226950463]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7496764460755907832,13683447438519276603]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":15,"id":{"name":"futures","disambiguator":[4819438423082522471,7647265285854853290]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":16,"id":{"name":"futures_core","disambiguator":[7536919091991368262,16104083443941246931]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":17,"id":{"name":"futures_util","disambiguator":[4660612666644961377,11842974058603500563]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":18,"id":{"name":"pin_utils","disambiguator":[8387619956116884623,7116796865736624713]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":19,"id":{"name":"futures_sink","disambiguator":[3218923681907105655,1646941519702786950]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":20,"id":{"name":"futures_io","disambiguator":[218265504202454739,5001824308088924678]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":21,"id":{"name":"futures_channel","disambiguator":[820419886148235,17037631664749559460]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":22,"id":{"name":"slab","disambiguator":[4089959928925939311,368198836259449931]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":23,"id":{"name":"futures","disambiguator":[1165739897139441005,14946377557727309364]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":24,"id":{"name":"tokio_io","disambiguator":[7086352903796761937,2616683118173066349]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","num":25,"id":{"name":"log","disambiguator":[9541114241915749863,16033895491588922705]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":26,"id":{"name":"cfg_if","disambiguator":[4905666532161475415,4099639827115812845]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":27,"id":{"name":"bytes","disambiguator":[15127962783562726314,8062891156198212722]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":28,"id":{"name":"byteorder","disambiguator":[970988585348595796,1177814344496890913]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":29,"id":{"name":"iovec","disambiguator":[2007371067735487488,17665608354280563981]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":30,"id":{"name":"libc","disambiguator":[18413172672036941195,1437997761674503886]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":31,"id":{"name":"memchr","disambiguator":[10424658742243726858,12785040814111731563]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":32,"id":{"name":"futures_executor","disambiguator":[11325190298593292969,2260561345061244465]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","num":33,"id":{"name":"num_cpus","disambiguator":[12843388257469107210,8809634508511813538]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":34,"id":{"name":"http","disambiguator":[7727630294985968922,16526724567119581289]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":35,"id":{"name":"fnv","disambiguator":[10414235421359724897,6354208008253563174]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":36,"id":{"name":"itoa","disambiguator":[3923071008817568736,13861034835034651217]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":37,"id":{"name":"mime","disambiguator":[4893944649749127556,1455368012307744611]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":38,"id":{"name":"serde","disambiguator":[4692950712511754749,4585076813803615431]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":39,"id":{"name":"url","disambiguator":[11928326711142271229,12473861911396929488]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":40,"id":{"name":"matches","disambiguator":[8724539314964635124,3117568813519857338]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":41,"id":{"name":"idna","disambiguator":[5594373016117245634,10511584879910966575]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":42,"id":{"name":"unicode_bidi","disambiguator":[9062583614311076147,18259350138672803729]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":43,"id":{"name":"unicode_normalization","disambiguator":[4664101024270985444,8019021921189087097]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":44,"id":{"name":"tinyvec","disambiguator":[6663821826883149913,3536941699721240438]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":45,"id":{"name":"percent_encoding","disambiguator":[15567083549401699614,13189555710013108765]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":46,"id":{"name":"isahc","disambiguator":[5938959223840526200,711376170576701078]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":47,"id":{"name":"lazy_static","disambiguator":[12264926433258315083,12214580925603842165]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":48,"id":{"name":"crossbeam_channel","disambiguator":[8176073913932327091,5527239194636824102]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":49,"id":{"name":"crossbeam_utils","disambiguator":[13472694710306376238,6816322346321189875]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":50,"id":{"name":"curl","disambiguator":[11172877356549552650,8815675467698067362]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":51,"id":{"name":"curl_sys","disambiguator":[12066524685426340454,11300223856402359155]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":52,"id":{"name":"libnghttp2_sys","disambiguator":[6243724073048547385,12183374713857225901]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":53,"id":{"name":"libz_sys","disambiguator":[13691072092710464493,16525516476693966384]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":54,"id":{"name":"openssl_sys","disambiguator":[9609461338871804834,1595919759181582241]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":55,"id":{"name":"socket2","disambiguator":[1168516255634213864,11227699353985944272]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":56,"id":{"name":"openssl_probe","disambiguator":[12741126369628024683,16051598365866462967]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","num":57,"id":{"name":"sluice","disambiguator":[2067459083019522461,18332784339336885337]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":58,"id":{"name":"serde_urlencoded","disambiguator":[14634157242279491732,5953710319638651684]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":59,"id":{"name":"dtoa","disambiguator":[3414104139099840376,9129812371397159882]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":60,"id":{"name":"serde_json","disambiguator":[852737479278955603,11744431652075994248]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":61,"id":{"name":"ryu","disambiguator":[18403074432588567627,15939930351987959716]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":62,"id":{"name":"mime_guess","disambiguator":[9534134052246768868,6019109609679847645]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","num":63,"id":{"name":"unicase","disambiguator":[12213054111813563602,7139635151937721031]}}],"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":0,"byte_end":3355,"line_start":1,"line_end":99,"column_start":1,"column_end":73}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47452,"byte_end":47456,"line_start":50,"line_end":50,"column_start":30,"column_end":34},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":255}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47458,"byte_end":47468,"line_start":50,"line_end":50,"column_start":36,"column_end":46},"alias_span":null,"name":"HttpClient","value":"","parent":{"krate":0,"index":255}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47470,"byte_end":47477,"line_start":50,"line_end":50,"column_start":48,"column_end":55},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":255}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47479,"byte_end":47487,"line_start":50,"line_end":50,"column_start":57,"column_end":65},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":255}},{"kind":"Use","ref_id":{"krate":34,"index":0},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2981,"byte_end":2985,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":0},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2995,"byte_end":2999,"line_start":86,"line_end":86,"column_start":9,"column_end":13},"alias_span":null,"name":"mime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":39,"index":0},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3009,"byte_end":3012,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"alias_span":null,"name":"url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3031,"byte_end":3037,"line_start":89,"line_end":89,"column_start":17,"column_end":23},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3056,"byte_end":3063,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3083,"byte_end":3091,"line_start":91,"line_end":91,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3193,"byte_end":3200,"line_start":96,"line_end":96,"column_start":19,"column_end":26},"alias_span":null,"name":"connect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":350},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3202,"byte_end":3208,"line_start":96,"line_end":96,"column_start":28,"column_end":34},"alias_span":null,"name":"delete","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3210,"byte_end":3213,"line_start":96,"line_end":96,"column_start":36,"column_end":39},"alias_span":null,"name":"get","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3215,"byte_end":3219,"line_start":96,"line_end":96,"column_start":41,"column_end":45},"alias_span":null,"name":"head","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3221,"byte_end":3228,"line_start":96,"line_end":96,"column_start":47,"column_end":54},"alias_span":null,"name":"options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3230,"byte_end":3235,"line_start":96,"line_end":96,"column_start":56,"column_end":61},"alias_span":null,"name":"patch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3237,"byte_end":3241,"line_start":96,"line_end":96,"column_start":63,"column_end":67},"alias_span":null,"name":"post","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3243,"byte_end":3246,"line_start":96,"line_end":96,"column_start":69,"column_end":72},"alias_span":null,"name":"put","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3248,"byte_end":3253,"line_start":96,"line_end":96,"column_start":74,"column_end":79},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":0,"byte_end":3355,"line_start":1,"line_end":99,"column_start":1,"column_end":73},"name":"","qualname":"::","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":30},{"krate":0,"index":82},{"krate":0,"index":187},{"krate":0,"index":232},{"krate":0,"index":255},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":360},{"krate":0,"index":370}],"decl_id":null,"docs":" ## surf the web.","sig":null,"attributes":[{"value":"! ## surf the web.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":21,"byte_end":24,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Surf is a friendly HTTP client built for casual Rustaceans and veterans alike.  It's completely","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":25,"byte_end":124,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! modular, and built directly for `async/await`. Whether it's a quick script, or a cross-platform","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":125,"byte_end":224,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"! SDK, Surf will make it work.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":225,"byte_end":257,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":258,"byte_end":261,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! - Multi-platform out of the box","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":262,"byte_end":297,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"! - Extensible through a powerful middleware system","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":298,"byte_end":351,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"! - Reuses connections through the `Client` interface","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":352,"byte_end":407,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"! - Fully streaming requests and responses","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":408,"byte_end":452,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"! - TLS/SSL enabled by default","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":453,"byte_end":485,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"! - Swappable HTTP backends","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":486,"byte_end":515,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"! - HTTP/2 enabled by default","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":516,"byte_end":547,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":548,"byte_end":551,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":552,"byte_end":566,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"! ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":567,"byte_end":580,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"! # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":581,"byte_end":603,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"! # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":604,"byte_end":693,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"! let mut res = surf::get(\"https://httpbin.org/get\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":694,"byte_end":756,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"! dbg!(res.body_string().await?);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":757,"byte_end":792,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"! # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":793,"byte_end":807,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":808,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":816,"byte_end":819,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! It's also possible to skip the intermediate `Response`, and access the response type directly.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":820,"byte_end":918,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"! ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":919,"byte_end":932,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"! # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":933,"byte_end":955,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"! # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":956,"byte_end":1045,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"! dbg!(surf::get(\"https://httpbin.org/get\").recv_string().await?);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1046,"byte_end":1114,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"! # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1115,"byte_end":1129,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1130,"byte_end":1137,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1138,"byte_end":1141,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! Both sending and receiving JSON is real easy too.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1142,"byte_end":1195,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"! ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1196,"byte_end":1209,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"! # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1210,"byte_end":1252,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"! # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1253,"byte_end":1275,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"! # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1276,"byte_end":1365,"line_start":36,"line_end":36,"column_start":1,"column_end":90}},{"value":"! #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1366,"byte_end":1403,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"! struct Ip {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1404,"byte_end":1419,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"!     ip: String","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1420,"byte_end":1438,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"! }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1439,"byte_end":1444,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1445,"byte_end":1448,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! let uri = \"https://httpbin.org/post\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1449,"byte_end":1490,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"! let data = &Ip { ip: \"129.0.0.1\".into() };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1491,"byte_end":1537,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"! let res = surf::post(uri).body_json(data)?.await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1538,"byte_end":1592,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"! assert_eq!(res.status(), 200);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1593,"byte_end":1627,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1628,"byte_end":1631,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! let uri = \"https://api.ipify.org?format=json\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1632,"byte_end":1682,"line_start":47,"line_end":47,"column_start":1,"column_end":51}},{"value":"! let Ip { ip } = surf::get(uri).recv_json().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1683,"byte_end":1737,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"! assert!(ip.len() > 10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1738,"byte_end":1765,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"! # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1766,"byte_end":1780,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1781,"byte_end":1788,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1789,"byte_end":1792,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! And even creating streaming proxies is no trouble at all.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1793,"byte_end":1854,"line_start":53,"line_end":53,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1855,"byte_end":1858,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1859,"byte_end":1872,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"! # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1873,"byte_end":1895,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"! # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1896,"byte_end":1985,"line_start":57,"line_end":57,"column_start":1,"column_end":90}},{"value":"! let reader = surf::get(\"https://img.fyi/q6YvNqP\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":1986,"byte_end":2047,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"! let res = surf::post(\"https://box.rs/upload\").body(reader).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2048,"byte_end":2118,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"! # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2119,"byte_end":2133,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2134,"byte_end":2141,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2142,"byte_end":2145,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! # Features","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2146,"byte_end":2160,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"! The following features are available.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2161,"byte_end":2202,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"! - __`native-client` (default):__ use `curl` on the server and `window.fetch` in the browser.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2203,"byte_end":2299,"line_start":65,"line_end":65,"column_start":1,"column_end":97}},{"value":"! - __`middleware-logger` (default):__ enables logging requests and responses using a middleware.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2300,"byte_end":2399,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"! - __`curl-client`:__ use `curl` (through `isahc`) as the HTTP backend.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2400,"byte_end":2474,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"! - __`hyper-client`:__ use `hyper` as the HTTP backend.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2475,"byte_end":2533,"line_start":68,"line_end":68,"column_start":1,"column_end":59}},{"value":"! - __`wasm-client`:__ use `window.fetch` as the HTTP backend.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2534,"byte_end":2598,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"forbid(future_incompatible, rust_2018_idioms)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2600,"byte_end":2649,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"deny(missing_debug_implementations, nonstandard_style)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2650,"byte_end":2708,"line_start":72,"line_end":72,"column_start":1,"column_end":59}},{"value":"warn(missing_docs, unreachable_pub)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2709,"byte_end":2748,"line_start":73,"line_end":73,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4004,"byte_end":4010,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":373}],"decl_id":null,"docs":" An HTTP client, capable of creating new `Request`s.","sig":null,"attributes":[{"value":"/ An HTTP client, capable of creating new `Request`s.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3495,"byte_end":3550,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3551,"byte_end":3554,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3555,"byte_end":3569,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3570,"byte_end":3573,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3574,"byte_end":3587,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3588,"byte_end":3610,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3611,"byte_end":3700,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3701,"byte_end":3738,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ let req1 = client.get(\"https://httpbin.org/get\").recv_string();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3739,"byte_end":3806,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ let req2 = client.get(\"https://httpbin.org/get\").recv_string();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3807,"byte_end":3874,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/ let (str1, str2) = futures::future::try_join(req1, req2).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3875,"byte_end":3943,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3944,"byte_end":3958,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":3959,"byte_end":3966,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4397,"byte_end":4400,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Client<NativeClient>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4112,"byte_end":4138,"line_start":27,"line_end":27,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4143,"byte_end":4146,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4151,"byte_end":4165,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4170,"byte_end":4173,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4178,"byte_end":4191,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4196,"byte_end":4218,"line_start":32,"line_end":32,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4223,"byte_end":4312,"line_start":33,"line_end":33,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4317,"byte_end":4354,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4359,"byte_end":4373,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4378,"byte_end":4385,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4712,"byte_end":4723,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"with_client","qualname":"<Client<C>>::with_client","value":"fn (client: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance with an `http_client::HttpClient` instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance with an `http_client::HttpClient` instance.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4505,"byte_end":4574,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4665,"byte_end":4700,"line_start":46,"line_end":46,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5412,"byte_end":5415,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"get","qualname":"<Client<C>>::get","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `GET` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `GET` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4809,"byte_end":4873,"line_start":52,"line_end":52,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4878,"byte_end":4881,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4886,"byte_end":4898,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4903,"byte_end":4906,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4911,"byte_end":4960,"line_start":56,"line_end":56,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4965,"byte_end":4968,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4973,"byte_end":4985,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4990,"byte_end":4993,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4998,"byte_end":5072,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5077,"byte_end":5080,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5085,"byte_end":5099,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5104,"byte_end":5107,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5112,"byte_end":5125,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5130,"byte_end":5152,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5157,"byte_end":5246,"line_start":66,"line_end":66,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5251,"byte_end":5288,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ let string = client.get(\"https://httpbin.org/get\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5293,"byte_end":5369,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5374,"byte_end":5388,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5393,"byte_end":5400,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6212,"byte_end":6216,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"head","qualname":"<Client<C>>::head","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `HEAD` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `HEAD` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5606,"byte_end":5671,"line_start":76,"line_end":76,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5676,"byte_end":5679,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5684,"byte_end":5696,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5701,"byte_end":5704,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5709,"byte_end":5758,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5763,"byte_end":5766,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5771,"byte_end":5783,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5788,"byte_end":5791,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5796,"byte_end":5870,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5875,"byte_end":5878,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5883,"byte_end":5897,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5902,"byte_end":5905,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5910,"byte_end":5923,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5928,"byte_end":5950,"line_start":89,"line_end":89,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":5955,"byte_end":6044,"line_start":90,"line_end":90,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6049,"byte_end":6086,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ let string = client.head(\"https://httpbin.org/head\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6091,"byte_end":6169,"line_start":92,"line_end":92,"column_start":5,"column_end":83}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6174,"byte_end":6188,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6193,"byte_end":6200,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7014,"byte_end":7018,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"name":"post","qualname":"<Client<C>>::post","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `POST` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `POST` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6408,"byte_end":6473,"line_start":100,"line_end":100,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6478,"byte_end":6481,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6486,"byte_end":6498,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6503,"byte_end":6506,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6511,"byte_end":6560,"line_start":104,"line_end":104,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6565,"byte_end":6568,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6573,"byte_end":6585,"line_start":106,"line_end":106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6590,"byte_end":6593,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6598,"byte_end":6672,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6677,"byte_end":6680,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6685,"byte_end":6699,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6704,"byte_end":6707,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6712,"byte_end":6725,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6730,"byte_end":6752,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6757,"byte_end":6846,"line_start":114,"line_end":114,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6851,"byte_end":6888,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/ let string = client.post(\"https://httpbin.org/post\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6893,"byte_end":6971,"line_start":116,"line_end":116,"column_start":5,"column_end":83}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6976,"byte_end":6990,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":6995,"byte_end":7002,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7813,"byte_end":7816,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"put","qualname":"<Client<C>>::put","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `PUT` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `PUT` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7210,"byte_end":7274,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7279,"byte_end":7282,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7287,"byte_end":7299,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7304,"byte_end":7307,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7312,"byte_end":7361,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7366,"byte_end":7369,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7374,"byte_end":7386,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7391,"byte_end":7394,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7399,"byte_end":7473,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7478,"byte_end":7481,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7486,"byte_end":7500,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7505,"byte_end":7508,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7513,"byte_end":7526,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7531,"byte_end":7553,"line_start":137,"line_end":137,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7558,"byte_end":7647,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7652,"byte_end":7689,"line_start":139,"line_end":139,"column_start":5,"column_end":42}},{"value":"/ let string = client.put(\"https://httpbin.org/put\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7694,"byte_end":7770,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7775,"byte_end":7789,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":7794,"byte_end":7801,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8619,"byte_end":8625,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"delete","qualname":"<Client<C>>::delete","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `DELETE` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `DELETE` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8007,"byte_end":8074,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8079,"byte_end":8082,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8087,"byte_end":8099,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8104,"byte_end":8107,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8112,"byte_end":8161,"line_start":152,"line_end":152,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8166,"byte_end":8169,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8174,"byte_end":8186,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8191,"byte_end":8194,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8199,"byte_end":8273,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8278,"byte_end":8281,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8286,"byte_end":8300,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8305,"byte_end":8308,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8313,"byte_end":8326,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8331,"byte_end":8353,"line_start":161,"line_end":161,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8358,"byte_end":8447,"line_start":162,"line_end":162,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8452,"byte_end":8489,"line_start":163,"line_end":163,"column_start":5,"column_end":42}},{"value":"/ let string = client.delete(\"https://httpbin.org/delete\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8494,"byte_end":8576,"line_start":164,"line_end":164,"column_start":5,"column_end":87}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8581,"byte_end":8595,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8600,"byte_end":8607,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9434,"byte_end":9441,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"connect","qualname":"<Client<C>>::connect","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `CONNECT` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `CONNECT` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8819,"byte_end":8887,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8892,"byte_end":8895,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8900,"byte_end":8912,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8917,"byte_end":8920,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8925,"byte_end":8974,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8979,"byte_end":8982,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":8987,"byte_end":8999,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9004,"byte_end":9007,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9012,"byte_end":9086,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9091,"byte_end":9094,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9099,"byte_end":9113,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9118,"byte_end":9121,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9126,"byte_end":9139,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9144,"byte_end":9166,"line_start":185,"line_end":185,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9171,"byte_end":9260,"line_start":186,"line_end":186,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9265,"byte_end":9302,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ let string = client.connect(\"https://httpbin.org/connect\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9307,"byte_end":9391,"line_start":188,"line_end":188,"column_start":5,"column_end":89}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9396,"byte_end":9410,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9415,"byte_end":9422,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10251,"byte_end":10258,"line_start":215,"line_end":215,"column_start":12,"column_end":19},"name":"options","qualname":"<Client<C>>::options","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `OPTIONS` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `OPTIONS` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9636,"byte_end":9704,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9709,"byte_end":9712,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9717,"byte_end":9729,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9734,"byte_end":9737,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9742,"byte_end":9791,"line_start":200,"line_end":200,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9796,"byte_end":9799,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9804,"byte_end":9816,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9821,"byte_end":9824,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9829,"byte_end":9903,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9908,"byte_end":9911,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9916,"byte_end":9930,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9935,"byte_end":9938,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9943,"byte_end":9956,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9961,"byte_end":9983,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":9988,"byte_end":10077,"line_start":210,"line_end":210,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10082,"byte_end":10119,"line_start":211,"line_end":211,"column_start":5,"column_end":42}},{"value":"/ let string = client.options(\"https://httpbin.org/options\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10124,"byte_end":10208,"line_start":212,"line_end":212,"column_start":5,"column_end":89}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10213,"byte_end":10227,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10232,"byte_end":10239,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11062,"byte_end":11067,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"name":"trace","qualname":"<Client<C>>::trace","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `TRACE` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `TRACE` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10453,"byte_end":10519,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10524,"byte_end":10527,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10532,"byte_end":10544,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10549,"byte_end":10552,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10557,"byte_end":10606,"line_start":224,"line_end":224,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10611,"byte_end":10614,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10619,"byte_end":10631,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10636,"byte_end":10639,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10644,"byte_end":10718,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10723,"byte_end":10726,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10731,"byte_end":10745,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10750,"byte_end":10753,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10758,"byte_end":10771,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10776,"byte_end":10798,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10803,"byte_end":10892,"line_start":234,"line_end":234,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10897,"byte_end":10934,"line_start":235,"line_end":235,"column_start":5,"column_end":42}},{"value":"/ let string = client.trace(\"https://httpbin.org/trace\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":10939,"byte_end":11019,"line_start":236,"line_end":236,"column_start":5,"column_end":85}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11024,"byte_end":11038,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11043,"byte_end":11050,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11869,"byte_end":11874,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"patch","qualname":"<Client<C>>::patch","value":"fn (&self, uri: impl AsRef<str>) -> Request<C>","parent":null,"children":[],"decl_id":null,"docs":" Perform an HTTP `PATCH` request using the `Client` connection.","sig":null,"attributes":[{"value":"/ Perform an HTTP `PATCH` request using the `Client` connection.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11260,"byte_end":11326,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11331,"byte_end":11334,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11339,"byte_end":11351,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11356,"byte_end":11359,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11364,"byte_end":11413,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11418,"byte_end":11421,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11426,"byte_end":11438,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11443,"byte_end":11446,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11451,"byte_end":11525,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11530,"byte_end":11533,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11538,"byte_end":11552,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11557,"byte_end":11560,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11565,"byte_end":11578,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11583,"byte_end":11605,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11610,"byte_end":11699,"line_start":258,"line_end":258,"column_start":5,"column_end":94}},{"value":"/ let client = surf::Client::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11704,"byte_end":11741,"line_start":259,"line_end":259,"column_start":5,"column_end":42}},{"value":"/ let string = client.patch(\"https://httpbin.org/patch\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11746,"byte_end":11826,"line_start":260,"line_end":260,"column_start":5,"column_end":85}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11831,"byte_end":11845,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":11850,"byte_end":11857,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":15702,"byte_end":15713,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"IsahcClient","qualname":"::http_client::isahc::IsahcClient","value":"IsahcClient {  }","parent":null,"children":[{"krate":0,"index":381}],"decl_id":null,"docs":" Curl-based HTTP Client.\n","sig":null,"attributes":[{"value":"/ Curl-based HTTP Client.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":15646,"byte_end":15673,"line_start":7,"line_end":7,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":15903,"byte_end":15906,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<IsahcClient>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":15865,"byte_end":15891,"line_start":20,"line_end":20,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":62},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":12646,"byte_end":12653,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"Request","qualname":"::http_client::Request","value":"http::Request<Body>","parent":null,"children":[],"decl_id":null,"docs":" An HTTP Request type with a streaming body.\n","sig":null,"attributes":[{"value":"/ An HTTP Request type with a streaming body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":12589,"byte_end":12636,"line_start":23,"line_end":23,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":63},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":12736,"byte_end":12744,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"name":"Response","qualname":"::http_client::Response","value":"http::Response<Body>","parent":null,"children":[],"decl_id":null,"docs":" An HTTP Response type with a streaming body.\n","sig":null,"attributes":[{"value":"/ An HTTP Response type with a streaming body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":12678,"byte_end":12726,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13660,"byte_end":13670,"line_start":43,"line_end":43,"column_start":11,"column_end":21},"name":"HttpClient","qualname":"::http_client::HttpClient","value":"HttpClient: Debug + Unpin + Send + Sync + Clone + 'static","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" __\\[unstable\\]__ An abstract HTTP client.","sig":null,"attributes":[{"value":"/ __\\[unstable\\]__ An abstract HTTP client.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":12770,"byte_end":12815,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":12816,"byte_end":12819,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ __note that this is only exposed for use in middleware. Building new backing clients is not","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":12820,"byte_end":12915,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ recommended yet. Once it is we'll likely publish a new `http-client` crate, and re-export this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":12916,"byte_end":13014,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ trait from there together with all existing HTTP client implementations.__","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13015,"byte_end":13093,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13094,"byte_end":13097,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Spawning new request from middleware","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13098,"byte_end":13141,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/ When threading the trait through a layer of middleware, the middleware must be able to perform","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13142,"byte_end":13240,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ new requests. In order to enable this we pass an `HttpClient` instance through the middleware,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13241,"byte_end":13339,"line_start":37,"line_end":37,"column_start":1,"column_end":99}},{"value":"/ with a `Clone` implementation. In order to spawn a new request, `clone` is called, and a new","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13340,"byte_end":13436,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ request is enabled.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13437,"byte_end":13460,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13461,"byte_end":13464,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ How `Clone` is implemented is up to the implementors, but in an ideal scenario combining this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13465,"byte_end":13562,"line_start":41,"line_end":41,"column_start":1,"column_end":98}},{"value":"/ with the `Client` builder will allow for high connection reuse, improving latency.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13563,"byte_end":13649,"line_start":42,"line_end":42,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13764,"byte_end":13769,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Error","qualname":"::http_client::HttpClient::Error","value":"type Error: Error + Send + Sync;","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" The associated error type.\n","sig":null,"attributes":[{"value":"/ The associated error type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13724,"byte_end":13754,"line_start":44,"line_end":44,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13827,"byte_end":13831,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"send","qualname":"::http_client::HttpClient::send","value":"fn (&self, req: Request) -> BoxFuture<'static, Result<Response, Self::Error>>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Perform a request.\n","sig":null,"attributes":[{"value":"/ Perform a request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13797,"byte_end":13819,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14209,"byte_end":14213,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"Body","qualname":"::http_client::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":68}],"decl_id":null,"docs":" The raw body of an http request or response.","sig":null,"attributes":[{"value":"/ The raw body of an http request or response.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13910,"byte_end":13958,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13959,"byte_end":13962,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A body is a stream of `Bytes` values, which are shared handles to byte buffers.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13963,"byte_end":14046,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/ Both `Body` and `Bytes` values can be easily created from standard owned byte buffer types","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14047,"byte_end":14141,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/ like `Vec<u8>` or `String`, using the `From` trait.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14142,"byte_end":14197,"line_start":55,"line_end":55,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14332,"byte_end":14337,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"empty","qualname":"<Body>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty body.\n","sig":null,"attributes":[{"value":"/ Create a new empty body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14292,"byte_end":14320,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14490,"byte_end":14501,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Body>::from_reader","value":"fn (reader: impl AsyncRead + Unpin + Send + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from a reader.\n","sig":null,"attributes":[{"value":"/ Create a new instance from a reader.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14438,"byte_end":14478,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":17736,"byte_end":17743,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" An HTTP request, returns a `Response`.\n","sig":null,"attributes":[{"value":"/ An HTTP request, returns a `Response`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":17682,"byte_end":17724,"line_start":29,"line_end":29,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18996,"byte_end":18999,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Request<NativeClient>>::new","value":"fn (method: http::Method, url: Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18273,"byte_end":18299,"line_start":45,"line_end":45,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18304,"byte_end":18307,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This method is particularly useful when input URLs might be passed by third parties, and","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18312,"byte_end":18404,"line_start":47,"line_end":47,"column_start":5,"column_end":97}},{"value":"/ you don't want to panic if they're malformed. If URLs are statically encoded, it might be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18409,"byte_end":18502,"line_start":48,"line_end":48,"column_start":5,"column_end":98}},{"value":"/ easier to use one of the shorthand methods instead.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18507,"byte_end":18562,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18567,"byte_end":18570,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18575,"byte_end":18589,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18594,"byte_end":18597,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18602,"byte_end":18615,"line_start":53,"line_end":53,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18620,"byte_end":18642,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18647,"byte_end":18736,"line_start":55,"line_end":55,"column_start":5,"column_end":94}},{"value":"/ use surf::{http, url};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18741,"byte_end":18767,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18772,"byte_end":18775,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let method = http::Method::GET;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18780,"byte_end":18815,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ let url = url::Url::parse(\"https://httpbin.org/get\")?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18820,"byte_end":18878,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/ let string = surf::Request::new(method, url).recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18883,"byte_end":18953,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18958,"byte_end":18972,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18977,"byte_end":18984,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":19342,"byte_end":19353,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"with_client","qualname":"<Request<C>>::with_client","value":"fn (method: http::Method, url: Url, client: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance with an `HttpClient` instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance with an `HttpClient` instance.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":19148,"byte_end":19204,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":19295,"byte_end":19330,"line_start":72,"line_end":72,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20424,"byte_end":20434,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"middleware","qualname":"<Request<C>>::middleware","value":"fn (mut self, mw: impl Middleware<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Push middleware onto the middleware stack.","sig":null,"attributes":[{"value":"/ Push middleware onto the middleware stack.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":19890,"byte_end":19936,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":19941,"byte_end":19944,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [middleware] submodule for more information on middleware.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":19949,"byte_end":20019,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20024,"byte_end":20027,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [middleware]: ../middleware/index.html","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20032,"byte_end":20074,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20079,"byte_end":20082,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20087,"byte_end":20101,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20106,"byte_end":20109,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20114,"byte_end":20127,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20132,"byte_end":20154,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20159,"byte_end":20248,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ let res = surf::get(\"https://httpbin.org/get\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20253,"byte_end":20303,"line_start":102,"line_end":102,"column_start":5,"column_end":55}},{"value":"/     .middleware(surf::middleware::logger::new())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20308,"byte_end":20360,"line_start":103,"line_end":103,"column_start":5,"column_end":57}},{"value":"/     .await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20365,"byte_end":20381,"line_start":104,"line_end":104,"column_start":5,"column_end":21}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20386,"byte_end":20400,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20405,"byte_end":20412,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21091,"byte_end":21096,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"query","qualname":"<Request<C>>::query","value":"fn <T> (&self) -> Result<T, Exception>","parent":null,"children":[],"decl_id":null,"docs":" Get the URL querystring.","sig":null,"attributes":[{"value":"/ Get the URL querystring.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20565,"byte_end":20593,"line_start":112,"line_end":112,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20598,"byte_end":20601,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20606,"byte_end":20620,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20625,"byte_end":20628,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20633,"byte_end":20640,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20645,"byte_end":20687,"line_start":117,"line_end":117,"column_start":5,"column_end":47}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20692,"byte_end":20714,"line_start":118,"line_end":118,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20719,"byte_end":20808,"line_start":119,"line_end":119,"column_start":5,"column_end":94}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20813,"byte_end":20850,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ struct Index {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20855,"byte_end":20873,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/     page: u32","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20878,"byte_end":20895,"line_start":122,"line_end":122,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20900,"byte_end":20905,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20910,"byte_end":20913,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let req = surf::get(\"https://httpbin.org/get?page=2\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20918,"byte_end":20976,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/ let Index { page } = req.query()?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":20981,"byte_end":21019,"line_start":126,"line_end":126,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(page, 2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21024,"byte_end":21048,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21053,"byte_end":21067,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21072,"byte_end":21079,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22049,"byte_end":22058,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"set_query","qualname":"<Request<C>>::set_query","value":"fn (mut self, query: &impl Serialize) -> Result<Self, serde_urlencoded::ser::Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the URL querystring.","sig":null,"attributes":[{"value":"/ Set the URL querystring.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21390,"byte_end":21418,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21423,"byte_end":21426,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21431,"byte_end":21445,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21450,"byte_end":21453,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21458,"byte_end":21465,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21470,"byte_end":21512,"line_start":144,"line_end":144,"column_start":5,"column_end":47}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21517,"byte_end":21539,"line_start":145,"line_end":145,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21544,"byte_end":21633,"line_start":146,"line_end":146,"column_start":5,"column_end":94}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21638,"byte_end":21675,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ struct Index {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21680,"byte_end":21698,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/     page: u32","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21703,"byte_end":21720,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21725,"byte_end":21730,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21735,"byte_end":21738,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let query = Index { page: 2 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21743,"byte_end":21777,"line_start":152,"line_end":152,"column_start":5,"column_end":39}},{"value":"/ let req = surf::get(\"https://httpbin.org/get\").set_query(&query)?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21782,"byte_end":21852,"line_start":153,"line_end":153,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(req.url().query(), Some(\"page=2\"));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21857,"byte_end":21907,"line_start":154,"line_end":154,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(format!(\"{}\", req.request().unwrap().uri()), \"https://httpbin.org/get?page=2\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":21912,"byte_end":22006,"line_start":155,"line_end":155,"column_start":5,"column_end":99}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22011,"byte_end":22025,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22030,"byte_end":22037,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22844,"byte_end":22850,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"header","qualname":"<Request<C>>::header","value":"fn (&self, key: &'static str) -> Option<&'_ str>","parent":null,"children":[],"decl_id":null,"docs":" Get an HTTP header.","sig":null,"attributes":[{"value":"/ Get an HTTP header.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22436,"byte_end":22459,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22464,"byte_end":22467,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22472,"byte_end":22486,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22491,"byte_end":22494,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22499,"byte_end":22506,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22511,"byte_end":22533,"line_start":177,"line_end":177,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22538,"byte_end":22627,"line_start":178,"line_end":178,"column_start":5,"column_end":94}},{"value":"/ let req = surf::get(\"https://httpbin.org/get\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22632,"byte_end":22682,"line_start":179,"line_end":179,"column_start":5,"column_end":55}},{"value":"/     .set_header(\"X-Requested-With\", \"surf\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22687,"byte_end":22735,"line_start":180,"line_end":180,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(req.header(\"X-Requested-With\"), Some(\"surf\"));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22740,"byte_end":22801,"line_start":181,"line_end":181,"column_start":5,"column_end":66}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22806,"byte_end":22820,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":22825,"byte_end":22832,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23423,"byte_end":23433,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"set_header","qualname":"<Request<C>>::set_header","value":"fn (mut self, key: &'static str, value: impl AsRef<str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set an HTTP header.","sig":null,"attributes":[{"value":"/ Set an HTTP header.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23015,"byte_end":23038,"line_start":189,"line_end":189,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23043,"byte_end":23046,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23051,"byte_end":23065,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23070,"byte_end":23073,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23078,"byte_end":23085,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23090,"byte_end":23112,"line_start":194,"line_end":194,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23117,"byte_end":23206,"line_start":195,"line_end":195,"column_start":5,"column_end":94}},{"value":"/ let req = surf::get(\"https://httpbin.org/get\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23211,"byte_end":23261,"line_start":196,"line_end":196,"column_start":5,"column_end":55}},{"value":"/     .set_header(\"X-Requested-With\", \"surf\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23266,"byte_end":23314,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(req.header(\"X-Requested-With\"), Some(\"surf\"));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23319,"byte_end":23380,"line_start":198,"line_end":198,"column_start":5,"column_end":66}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23385,"byte_end":23399,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23404,"byte_end":23411,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24099,"byte_end":24106,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request<C>>::headers","value":"fn (&mut self) -> Headers<'_>","parent":null,"children":[],"decl_id":null,"docs":" Get all headers.","sig":null,"attributes":[{"value":"/ Get all headers.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23677,"byte_end":23697,"line_start":208,"line_end":208,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23702,"byte_end":23705,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23710,"byte_end":23724,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23729,"byte_end":23732,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23737,"byte_end":23750,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23755,"byte_end":23777,"line_start":213,"line_end":213,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), surf::Exception> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23782,"byte_end":23836,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/ let mut req = surf::get(\"https://httpbin.org/get\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23841,"byte_end":23895,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/     .set_header(\"X-Requested-With\", \"surf\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23900,"byte_end":23948,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23953,"byte_end":23956,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ for (name, value) in req.headers() {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":23961,"byte_end":24001,"line_start":218,"line_end":218,"column_start":5,"column_end":45}},{"value":"/     println!(\"{}: {}\", name, value);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24006,"byte_end":24046,"line_start":219,"line_end":219,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24051,"byte_end":24056,"line_start":220,"line_end":220,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24061,"byte_end":24075,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24080,"byte_end":24087,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24585,"byte_end":24591,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"method","qualname":"<Request<C>>::method","value":"fn (&self) -> &Method","parent":null,"children":[],"decl_id":null,"docs":" Get the request HTTP method.","sig":null,"attributes":[{"value":"/ Get the request HTTP method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24209,"byte_end":24241,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24246,"byte_end":24249,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24254,"byte_end":24268,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24273,"byte_end":24276,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24281,"byte_end":24288,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24293,"byte_end":24315,"line_start":232,"line_end":232,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24320,"byte_end":24409,"line_start":233,"line_end":233,"column_start":5,"column_end":94}},{"value":"/ use surf::http;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24414,"byte_end":24433,"line_start":234,"line_end":234,"column_start":5,"column_end":24}},{"value":"/ let req = surf::get(\"https://httpbin.org/get\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24438,"byte_end":24489,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(req.method(), http::Method::GET);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24494,"byte_end":24542,"line_start":236,"line_end":236,"column_start":5,"column_end":53}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24547,"byte_end":24561,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24566,"byte_end":24573,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25081,"byte_end":25084,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"url","qualname":"<Request<C>>::url","value":"fn (&self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the request url.","sig":null,"attributes":[{"value":"/ Get the request url.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24690,"byte_end":24714,"line_start":244,"line_end":244,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24719,"byte_end":24722,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24727,"byte_end":24741,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24746,"byte_end":24749,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24754,"byte_end":24761,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24766,"byte_end":24788,"line_start":249,"line_end":249,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24793,"byte_end":24882,"line_start":250,"line_end":250,"column_start":5,"column_end":94}},{"value":"/ use surf::url::Url;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24887,"byte_end":24910,"line_start":251,"line_end":251,"column_start":5,"column_end":28}},{"value":"/ let req = surf::get(\"https://httpbin.org/get\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24915,"byte_end":24966,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(req.url(), &Url::parse(\"https://httpbin.org/get\")?);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":24971,"byte_end":25038,"line_start":253,"line_end":253,"column_start":5,"column_end":72}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25043,"byte_end":25057,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25062,"byte_end":25069,"line_start":255,"line_end":255,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25951,"byte_end":25955,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"mime","qualname":"<Request<C>>::mime","value":"fn (&self) -> Option<Mime>","parent":null,"children":[],"decl_id":null,"docs":" Get the request MIME.","sig":null,"attributes":[{"value":"/ Get the request MIME.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25131,"byte_end":25156,"line_start":260,"line_end":260,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25161,"byte_end":25164,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Gets the `Content-Type` header and parses it to a `Mime` type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25169,"byte_end":25235,"line_start":262,"line_end":262,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25240,"byte_end":25243,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [Read more on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25248,"byte_end":25347,"line_start":264,"line_end":264,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25352,"byte_end":25355,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25360,"byte_end":25372,"line_start":266,"line_end":266,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25377,"byte_end":25380,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method will panic if an invalid MIME type was set as a header. Use the [`set_header`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25385,"byte_end":25479,"line_start":268,"line_end":268,"column_start":5,"column_end":99}},{"value":"/ method to bypass any checks.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25484,"byte_end":25516,"line_start":269,"line_end":269,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25521,"byte_end":25524,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ [`set_header`]: #method.set_header","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25529,"byte_end":25567,"line_start":271,"line_end":271,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25572,"byte_end":25575,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25580,"byte_end":25594,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25599,"byte_end":25602,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25607,"byte_end":25614,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25619,"byte_end":25641,"line_start":276,"line_end":276,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25646,"byte_end":25735,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/ use surf::mime;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25740,"byte_end":25759,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/ let req = surf::post(\"https://httpbin.org/get\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25764,"byte_end":25815,"line_start":279,"line_end":279,"column_start":5,"column_end":56}},{"value":"/     .set_mime(mime::TEXT_CSS);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25820,"byte_end":25854,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(req.mime(), Some(mime::TEXT_CSS));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25859,"byte_end":25908,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25913,"byte_end":25927,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":25932,"byte_end":25939,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26602,"byte_end":26610,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"set_mime","qualname":"<Request<C>>::set_mime","value":"fn (self, mime: Mime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the request MIME.","sig":null,"attributes":[{"value":"/ Set the request MIME.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26081,"byte_end":26106,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26111,"byte_end":26114,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [Read more on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26119,"byte_end":26218,"line_start":291,"line_end":291,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26223,"byte_end":26226,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26231,"byte_end":26245,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26250,"byte_end":26253,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26258,"byte_end":26265,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26270,"byte_end":26292,"line_start":296,"line_end":296,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26297,"byte_end":26386,"line_start":297,"line_end":297,"column_start":5,"column_end":94}},{"value":"/ use surf::mime;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26391,"byte_end":26410,"line_start":298,"line_end":298,"column_start":5,"column_end":24}},{"value":"/ let req = surf::post(\"https://httpbin.org/get\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26415,"byte_end":26466,"line_start":299,"line_end":299,"column_start":5,"column_end":56}},{"value":"/     .set_mime(mime::TEXT_CSS);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26471,"byte_end":26505,"line_start":300,"line_end":300,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(req.mime(), Some(mime::TEXT_CSS));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26510,"byte_end":26559,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26564,"byte_end":26578,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26583,"byte_end":26590,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27275,"byte_end":27279,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"body","qualname":"<Request<C>>::body","value":"fn <R> (mut self, reader: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pass an `AsyncRead` stream as the request body.","sig":null,"attributes":[{"value":"/ Pass an `AsyncRead` stream as the request body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26711,"byte_end":26762,"line_start":308,"line_end":308,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26767,"byte_end":26770,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Mime","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26775,"byte_end":26785,"line_start":310,"line_end":310,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26790,"byte_end":26793,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The encoding is set to `application/octet-stream`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26798,"byte_end":26852,"line_start":312,"line_end":312,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26857,"byte_end":26860,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26865,"byte_end":26879,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26884,"byte_end":26887,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26892,"byte_end":26905,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26910,"byte_end":26932,"line_start":317,"line_end":317,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":26937,"byte_end":27026,"line_start":318,"line_end":318,"column_start":5,"column_end":94}},{"value":"/ let reader = surf::get(\"https://httpbin.org/get\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27031,"byte_end":27092,"line_start":319,"line_end":319,"column_start":5,"column_end":66}},{"value":"/ let uri = \"https://httpbin.org/post\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27097,"byte_end":27138,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/ let res = surf::post(uri).body(reader).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27143,"byte_end":27193,"line_start":321,"line_end":321,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(res.status(), 200);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27198,"byte_end":27232,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27237,"byte_end":27251,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27256,"byte_end":27263,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28180,"byte_end":28189,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"body_json","qualname":"<Request<C>>::body_json","value":"fn (mut self, json: &impl Serialize) -> serde_json::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Pass JSON as the request body.","sig":null,"attributes":[{"value":"/ Pass JSON as the request body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27514,"byte_end":27548,"line_start":333,"line_end":333,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27553,"byte_end":27556,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Mime","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27561,"byte_end":27571,"line_start":335,"line_end":335,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27576,"byte_end":27579,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ The encoding is set to `application/json`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27584,"byte_end":27630,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27635,"byte_end":27638,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27643,"byte_end":27655,"line_start":339,"line_end":339,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27660,"byte_end":27663,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the provided data could not be serialized to JSON.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27668,"byte_end":27758,"line_start":341,"line_end":341,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27763,"byte_end":27766,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27771,"byte_end":27785,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27790,"byte_end":27793,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27798,"byte_end":27811,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27816,"byte_end":27838,"line_start":346,"line_end":346,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27843,"byte_end":27932,"line_start":347,"line_end":347,"column_start":5,"column_end":94}},{"value":"/ let uri = \"https://httpbin.org/post\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27937,"byte_end":27978,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/ let data = serde_json::json!({ \"name\": \"chashu\" });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":27983,"byte_end":28038,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/ let res = surf::post(uri).body_json(&data)?.await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28043,"byte_end":28098,"line_start":350,"line_end":350,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(res.status(), 200);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28103,"byte_end":28137,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28142,"byte_end":28156,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28161,"byte_end":28168,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28934,"byte_end":28945,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"body_string","qualname":"<Request<C>>::body_string","value":"fn (mut self, string: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pass a string as the request body.","sig":null,"attributes":[{"value":"/ Pass a string as the request body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28397,"byte_end":28435,"line_start":359,"line_end":359,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28440,"byte_end":28443,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Mime","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28448,"byte_end":28458,"line_start":361,"line_end":361,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28463,"byte_end":28466,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The encoding is set to `text/plain; charset=utf-8`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28471,"byte_end":28526,"line_start":363,"line_end":363,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28531,"byte_end":28534,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28539,"byte_end":28553,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28558,"byte_end":28561,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28566,"byte_end":28579,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28584,"byte_end":28606,"line_start":368,"line_end":368,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28611,"byte_end":28700,"line_start":369,"line_end":369,"column_start":5,"column_end":94}},{"value":"/ let uri = \"https://httpbin.org/post\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28705,"byte_end":28746,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let data = \"hello world\".to_string();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28751,"byte_end":28792,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ let res = surf::post(uri).body_string(data).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28797,"byte_end":28852,"line_start":372,"line_end":372,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(res.status(), 200);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28857,"byte_end":28891,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28896,"byte_end":28910,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":28915,"byte_end":28922,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29637,"byte_end":29647,"line_start":398,"line_end":398,"column_start":12,"column_end":22},"name":"body_bytes","qualname":"<Request<C>>::body_bytes","value":"fn (mut self, bytes: impl AsRef<[u8]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pass bytes as the request body.","sig":null,"attributes":[{"value":"/ Pass bytes as the request body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29116,"byte_end":29151,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29156,"byte_end":29159,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Mime","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29164,"byte_end":29174,"line_start":383,"line_end":383,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29179,"byte_end":29182,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The encoding is set to `application/octet-stream`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29187,"byte_end":29241,"line_start":385,"line_end":385,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29246,"byte_end":29249,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29254,"byte_end":29268,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29273,"byte_end":29276,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29281,"byte_end":29294,"line_start":389,"line_end":389,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29299,"byte_end":29321,"line_start":390,"line_end":390,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29326,"byte_end":29415,"line_start":391,"line_end":391,"column_start":5,"column_end":94}},{"value":"/ let uri = \"https://httpbin.org/post\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29420,"byte_end":29461,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/ let data = b\"hello world\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29466,"byte_end":29496,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/ let res = surf::post(uri).body_bytes(data).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29501,"byte_end":29555,"line_start":394,"line_end":394,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(res.status(), 200);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29560,"byte_end":29594,"line_start":395,"line_end":395,"column_start":5,"column_end":39}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29599,"byte_end":29613,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29618,"byte_end":29625,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30635,"byte_end":30644,"line_start":428,"line_end":428,"column_start":12,"column_end":21},"name":"body_file","qualname":"<Request<C>>::body_file","value":"fn (mut self, path: impl AsRef<Path>) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Pass a file as the request body.","sig":null,"attributes":[{"value":"/ Pass a file as the request body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29841,"byte_end":29877,"line_start":403,"line_end":403,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29882,"byte_end":29885,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Mime","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29890,"byte_end":29900,"line_start":405,"line_end":405,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29905,"byte_end":29908,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The encoding is set based on the file extension using [`mime_guess`] if the operation was","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":29913,"byte_end":30006,"line_start":407,"line_end":407,"column_start":5,"column_end":98}},{"value":"/ successful. If `path` has no extension, or its extension has no known MIME type mapping,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30011,"byte_end":30103,"line_start":408,"line_end":408,"column_start":5,"column_end":97}},{"value":"/ then `None` is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30108,"byte_end":30136,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30141,"byte_end":30144,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`mime_guess`]: https://docs.rs/mime_guess","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30149,"byte_end":30195,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30200,"byte_end":30203,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30208,"byte_end":30220,"line_start":413,"line_end":413,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30225,"byte_end":30228,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the file couldn't be read.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30233,"byte_end":30299,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30304,"byte_end":30307,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30312,"byte_end":30326,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30331,"byte_end":30334,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30339,"byte_end":30352,"line_start":419,"line_end":419,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30357,"byte_end":30379,"line_start":420,"line_end":420,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), surf::Exception> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30384,"byte_end":30438,"line_start":421,"line_end":421,"column_start":5,"column_end":59}},{"value":"/ let res = surf::post(\"https://httpbin.org/post\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30443,"byte_end":30495,"line_start":422,"line_end":422,"column_start":5,"column_end":57}},{"value":"/     .body_file(\"README.md\")?","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30500,"byte_end":30532,"line_start":423,"line_end":423,"column_start":5,"column_end":37}},{"value":"/     .await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30537,"byte_end":30553,"line_start":424,"line_end":424,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(res.status(), 200);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30558,"byte_end":30592,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30597,"byte_end":30611,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30616,"byte_end":30623,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31669,"byte_end":31678,"line_start":462,"line_end":462,"column_start":12,"column_end":21},"name":"body_form","qualname":"<Request<C>>::body_form","value":"fn (mut self, form: &impl Serialize) -> Result<Self, serde_urlencoded::ser::Error>","parent":null,"children":[],"decl_id":null,"docs":" Pass a form as the request body.","sig":null,"attributes":[{"value":"/ Pass a form as the request body.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30917,"byte_end":30953,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30958,"byte_end":30961,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Mime","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30966,"byte_end":30976,"line_start":437,"line_end":437,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30981,"byte_end":30984,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The encoding is set to `application/x-www-form-urlencoded`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":30989,"byte_end":31052,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31057,"byte_end":31060,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31065,"byte_end":31077,"line_start":441,"line_end":441,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31082,"byte_end":31085,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if the encoding failed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31090,"byte_end":31143,"line_start":443,"line_end":443,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31148,"byte_end":31151,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31156,"byte_end":31170,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31175,"byte_end":31178,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31183,"byte_end":31190,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31195,"byte_end":31237,"line_start":448,"line_end":448,"column_start":5,"column_end":47}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31242,"byte_end":31264,"line_start":449,"line_end":449,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31269,"byte_end":31358,"line_start":450,"line_end":450,"column_start":5,"column_end":94}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31363,"byte_end":31400,"line_start":451,"line_end":451,"column_start":5,"column_end":42}},{"value":"/ struct Body {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31405,"byte_end":31422,"line_start":452,"line_end":452,"column_start":5,"column_end":22}},{"value":"/     apples: u32","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31427,"byte_end":31446,"line_start":453,"line_end":453,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31451,"byte_end":31456,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31461,"byte_end":31464,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let res = surf::post(\"https://httpbin.org/post\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31469,"byte_end":31521,"line_start":456,"line_end":456,"column_start":5,"column_end":57}},{"value":"/     .body_form(&Body { apples: 7 })?","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31526,"byte_end":31566,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/     .await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31571,"byte_end":31587,"line_start":458,"line_end":458,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(res.status(), 200);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31592,"byte_end":31626,"line_start":459,"line_end":459,"column_start":5,"column_end":39}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31631,"byte_end":31645,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31650,"byte_end":31657,"line_start":461,"line_end":461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32369,"byte_end":32379,"line_start":483,"line_end":483,"column_start":18,"column_end":28},"name":"recv_bytes","qualname":"<Request<C>>::recv_bytes","value":"fn (self) -> Result<Vec<u8>, Exception>","parent":null,"children":[],"decl_id":null,"docs":" Submit the request and get the response body as bytes.","sig":null,"attributes":[{"value":"/ Submit the request and get the response body as bytes.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":31976,"byte_end":32034,"line_start":472,"line_end":472,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32039,"byte_end":32042,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32047,"byte_end":32061,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32066,"byte_end":32069,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32074,"byte_end":32087,"line_start":476,"line_end":476,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32092,"byte_end":32114,"line_start":477,"line_end":477,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32119,"byte_end":32208,"line_start":478,"line_end":478,"column_start":5,"column_end":94}},{"value":"/ let bytes = surf::get(\"https://httpbin.org/get\").recv_bytes().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32213,"byte_end":32286,"line_start":479,"line_end":479,"column_start":5,"column_end":78}},{"value":"/ assert!(bytes.len() > 0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32291,"byte_end":32320,"line_start":480,"line_end":480,"column_start":5,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32325,"byte_end":32339,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32344,"byte_end":32351,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32899,"byte_end":32910,"line_start":499,"line_end":499,"column_start":18,"column_end":29},"name":"recv_string","qualname":"<Request<C>>::recv_string","value":"fn (self) -> Result<String, Exception>","parent":null,"children":[],"decl_id":null,"docs":" Submit the request and get the response body as a string.","sig":null,"attributes":[{"value":"/ Submit the request and get the response body as a string.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32500,"byte_end":32561,"line_start":488,"line_end":488,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32566,"byte_end":32569,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32574,"byte_end":32588,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32593,"byte_end":32596,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32601,"byte_end":32614,"line_start":492,"line_end":492,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32619,"byte_end":32641,"line_start":493,"line_end":493,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32646,"byte_end":32735,"line_start":494,"line_end":494,"column_start":5,"column_end":94}},{"value":"/ let string = surf::get(\"https://httpbin.org/get\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32740,"byte_end":32815,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ assert!(string.len() > 0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32820,"byte_end":32850,"line_start":496,"line_end":496,"column_start":5,"column_end":35}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32855,"byte_end":32869,"line_start":497,"line_end":497,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":32874,"byte_end":32881,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33626,"byte_end":33635,"line_start":522,"line_end":522,"column_start":18,"column_end":27},"name":"recv_json","qualname":"<Request<C>>::recv_json","value":"fn <T> (self) -> Result<T, Exception>","parent":null,"children":[],"decl_id":null,"docs":" Submit the request and decode the response body from json into a struct.","sig":null,"attributes":[{"value":"/ Submit the request and decode the response body from json into a struct.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33031,"byte_end":33107,"line_start":504,"line_end":504,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33112,"byte_end":33115,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33120,"byte_end":33134,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33139,"byte_end":33142,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33147,"byte_end":33160,"line_start":508,"line_end":508,"column_start":5,"column_end":18}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33165,"byte_end":33207,"line_start":509,"line_end":509,"column_start":5,"column_end":47}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33212,"byte_end":33234,"line_start":510,"line_end":510,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33239,"byte_end":33328,"line_start":511,"line_end":511,"column_start":5,"column_end":94}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33333,"byte_end":33370,"line_start":512,"line_end":512,"column_start":5,"column_end":42}},{"value":"/ struct Ip {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33375,"byte_end":33390,"line_start":513,"line_end":513,"column_start":5,"column_end":20}},{"value":"/     ip: String","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33395,"byte_end":33413,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33418,"byte_end":33423,"line_start":515,"line_end":515,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33428,"byte_end":33431,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let uri = \"https://api.ipify.org?format=json\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33436,"byte_end":33486,"line_start":517,"line_end":517,"column_start":5,"column_end":55}},{"value":"/ let Ip { ip } = surf::get(uri).recv_json().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33491,"byte_end":33545,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/ assert!(ip.len() > 10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33550,"byte_end":33577,"line_start":519,"line_end":519,"column_start":5,"column_end":32}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33582,"byte_end":33596,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33601,"byte_end":33608,"line_start":521,"line_end":521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34623,"byte_end":34632,"line_start":552,"line_end":552,"column_start":18,"column_end":27},"name":"recv_form","qualname":"<Request<C>>::recv_form","value":"fn <T> (self) -> Result<T, Exception>","parent":null,"children":[],"decl_id":null,"docs":" Submit the request and decode the response body from form encoding into a struct.","sig":null,"attributes":[{"value":"/ Submit the request and decode the response body from form encoding into a struct.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33786,"byte_end":33871,"line_start":527,"line_end":527,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33876,"byte_end":33879,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33884,"byte_end":33896,"line_start":529,"line_end":529,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33901,"byte_end":33904,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Any I/O error encountered while reading the body is immediately returned","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33909,"byte_end":33985,"line_start":531,"line_end":531,"column_start":5,"column_end":81}},{"value":"/ as an `Err`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":33990,"byte_end":34006,"line_start":532,"line_end":532,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34011,"byte_end":34014,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ If the body cannot be interpreted as valid json for the target type `T`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34019,"byte_end":34095,"line_start":534,"line_end":534,"column_start":5,"column_end":81}},{"value":"/ an `Err` is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34100,"byte_end":34125,"line_start":535,"line_end":535,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34130,"byte_end":34133,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34138,"byte_end":34152,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34157,"byte_end":34160,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34165,"byte_end":34178,"line_start":539,"line_end":539,"column_start":5,"column_end":18}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34183,"byte_end":34225,"line_start":540,"line_end":540,"column_start":5,"column_end":47}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34230,"byte_end":34252,"line_start":541,"line_end":541,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34257,"byte_end":34346,"line_start":542,"line_end":542,"column_start":5,"column_end":94}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34351,"byte_end":34388,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ struct Body {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34393,"byte_end":34410,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/     apples: u32","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34415,"byte_end":34434,"line_start":545,"line_end":545,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34439,"byte_end":34444,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34449,"byte_end":34452,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let url = \"https://api.example.com/v1/response\";","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34457,"byte_end":34509,"line_start":548,"line_end":548,"column_start":5,"column_end":57}},{"value":"/ let Body { apples } = surf::get(url).recv_form().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34514,"byte_end":34574,"line_start":549,"line_end":549,"column_start":5,"column_end":65}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34579,"byte_end":34593,"line_start":550,"line_end":550,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34598,"byte_end":34605,"line_start":551,"line_end":551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34817,"byte_end":34824,"line_start":558,"line_end":558,"column_start":12,"column_end":19},"name":"request","qualname":"<Request<C>>::request","value":"fn (&self) -> Option<&http_client::Request>","parent":null,"children":[],"decl_id":null,"docs":" Get a HTTP request\n","sig":null,"attributes":[{"value":"/ Get a HTTP request","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34783,"byte_end":34805,"line_start":557,"line_end":557,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37078,"byte_end":37086,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":203}],"decl_id":null,"docs":" An HTTP response, returned by `Request`.\n","sig":null,"attributes":[{"value":"/ An HTTP response, returned by `Request`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37022,"byte_end":37066,"line_start":16,"line_end":16,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37626,"byte_end":37632,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"fn (&self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP status code.","sig":null,"attributes":[{"value":"/ Get the HTTP status code.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37278,"byte_end":37307,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37312,"byte_end":37315,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37320,"byte_end":37334,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37339,"byte_end":37342,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37347,"byte_end":37360,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37365,"byte_end":37387,"line_start":32,"line_end":32,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37392,"byte_end":37481,"line_start":33,"line_end":33,"column_start":5,"column_end":94}},{"value":"/ let res = surf::get(\"https://httpbin.org/get\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37486,"byte_end":37544,"line_start":34,"line_end":34,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(res.status(), 200);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37549,"byte_end":37583,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37588,"byte_end":37602,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37607,"byte_end":37614,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38115,"byte_end":38122,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"version","qualname":"<Response>::version","value":"fn (&self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP protocol version.","sig":null,"attributes":[{"value":"/ Get the HTTP protocol version.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37698,"byte_end":37732,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37737,"byte_end":37740,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37745,"byte_end":37759,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37764,"byte_end":37767,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37772,"byte_end":37785,"line_start":46,"line_end":46,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37790,"byte_end":37812,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37817,"byte_end":37906,"line_start":48,"line_end":48,"column_start":5,"column_end":94}},{"value":"/ use surf::http::version::Version;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37911,"byte_end":37948,"line_start":49,"line_end":49,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37953,"byte_end":37956,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let res = surf::get(\"https://httpbin.org/get\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37961,"byte_end":38019,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(res.version(), Version::HTTP_11);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38024,"byte_end":38072,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38077,"byte_end":38091,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38096,"byte_end":38103,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38540,"byte_end":38546,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"header","qualname":"<Response>::header","value":"fn (&self, key: &'static str) -> Option<&'_ str>","parent":null,"children":[],"decl_id":null,"docs":" Get a header.","sig":null,"attributes":[{"value":"/ Get a header.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38186,"byte_end":38203,"line_start":59,"line_end":59,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38208,"byte_end":38211,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38216,"byte_end":38230,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38235,"byte_end":38238,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38243,"byte_end":38256,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38261,"byte_end":38283,"line_start":64,"line_end":64,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38288,"byte_end":38377,"line_start":65,"line_end":65,"column_start":5,"column_end":94}},{"value":"/ let res = surf::get(\"https://httpbin.org/get\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38382,"byte_end":38440,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ assert!(res.header(\"Content-Length\").is_some());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38445,"byte_end":38497,"line_start":67,"line_end":67,"column_start":5,"column_end":57}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38502,"byte_end":38516,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38521,"byte_end":38528,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39076,"byte_end":39083,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"fn (&mut self) -> Headers<'_>","parent":null,"children":[],"decl_id":null,"docs":" Get all headers.","sig":null,"attributes":[{"value":"/ Get all headers.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38706,"byte_end":38726,"line_start":75,"line_end":75,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38731,"byte_end":38734,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38739,"byte_end":38753,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38758,"byte_end":38761,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38766,"byte_end":38779,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38784,"byte_end":38806,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), surf::Exception> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38811,"byte_end":38865,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/ let mut res = surf::post(\"https://httpbin.org/get\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38870,"byte_end":38933,"line_start":82,"line_end":82,"column_start":5,"column_end":68}},{"value":"/ for (name, value) in res.headers() {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38938,"byte_end":38978,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/     println!(\"{}: {}\", name, value);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":38983,"byte_end":39023,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39028,"byte_end":39033,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39038,"byte_end":39052,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39057,"byte_end":39064,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39865,"byte_end":39869,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"mime","qualname":"<Response>::mime","value":"fn (&self) -> Option<Mime>","parent":null,"children":[],"decl_id":null,"docs":" Get the request MIME.","sig":null,"attributes":[{"value":"/ Get the request MIME.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39173,"byte_end":39198,"line_start":92,"line_end":92,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39203,"byte_end":39206,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Gets the `Content-Type` header and parses it to a `Mime` type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39211,"byte_end":39277,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39282,"byte_end":39285,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [Read more on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39290,"byte_end":39389,"line_start":96,"line_end":96,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39394,"byte_end":39397,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39402,"byte_end":39414,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39419,"byte_end":39422,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This method will panic if an invalid MIME type was set as a header.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39427,"byte_end":39498,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39503,"byte_end":39506,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39511,"byte_end":39525,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39530,"byte_end":39533,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39538,"byte_end":39551,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39556,"byte_end":39578,"line_start":105,"line_end":105,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39583,"byte_end":39672,"line_start":106,"line_end":106,"column_start":5,"column_end":94}},{"value":"/ use surf::mime;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39677,"byte_end":39696,"line_start":107,"line_end":107,"column_start":5,"column_end":24}},{"value":"/ let res = surf::get(\"https://httpbin.org/json\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39701,"byte_end":39760,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(res.mime(), Some(mime::APPLICATION_JSON));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39765,"byte_end":39822,"line_start":109,"line_end":109,"column_start":5,"column_end":62}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39827,"byte_end":39841,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39846,"byte_end":39853,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40649,"byte_end":40659,"line_start":136,"line_end":136,"column_start":18,"column_end":28},"name":"body_bytes","qualname":"<Response>::body_bytes","value":"fn (&mut self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire request body into a byte buffer.","sig":null,"attributes":[{"value":"/ Reads the entire request body into a byte buffer.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":39995,"byte_end":40048,"line_start":117,"line_end":117,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40053,"byte_end":40056,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This method can be called after the body has already been read, but will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40061,"byte_end":40137,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ produce an empty buffer.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40142,"byte_end":40170,"line_start":120,"line_end":120,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40175,"byte_end":40178,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40183,"byte_end":40195,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40200,"byte_end":40203,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Any I/O error encountered while reading the body is immediately returned","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40208,"byte_end":40284,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ as an `Err`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40289,"byte_end":40305,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40310,"byte_end":40313,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40318,"byte_end":40332,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40337,"byte_end":40340,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40345,"byte_end":40358,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40363,"byte_end":40385,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40390,"byte_end":40479,"line_start":131,"line_end":131,"column_start":5,"column_end":94}},{"value":"/ let mut res = surf::get(\"https://httpbin.org/get\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40484,"byte_end":40546,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/ let bytes: Vec<u8> = res.body_bytes().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40551,"byte_end":40600,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40605,"byte_end":40619,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40624,"byte_end":40631,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41572,"byte_end":41583,"line_start":163,"line_end":163,"column_start":18,"column_end":29},"name":"body_string","qualname":"<Response>::body_string","value":"fn (&mut self) -> Result<String, Exception>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire request body into a string.","sig":null,"attributes":[{"value":"/ Reads the entire request body into a string.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40834,"byte_end":40882,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40887,"byte_end":40890,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This method can be called after the body has already been read, but will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40895,"byte_end":40971,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ produce an empty buffer.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":40976,"byte_end":41004,"line_start":145,"line_end":145,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41009,"byte_end":41012,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41017,"byte_end":41029,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41034,"byte_end":41037,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Any I/O error encountered while reading the body is immediately returned","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41042,"byte_end":41118,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ as an `Err`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41123,"byte_end":41139,"line_start":150,"line_end":150,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41144,"byte_end":41147,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If the body cannot be interpreted as valid UTF-8, an `Err` is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41152,"byte_end":41227,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41232,"byte_end":41235,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41240,"byte_end":41254,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41259,"byte_end":41262,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41267,"byte_end":41280,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41285,"byte_end":41307,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41312,"byte_end":41401,"line_start":158,"line_end":158,"column_start":5,"column_end":94}},{"value":"/ let mut res = surf::get(\"https://httpbin.org/get\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41406,"byte_end":41468,"line_start":159,"line_end":159,"column_start":5,"column_end":67}},{"value":"/ let string: String = res.body_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41473,"byte_end":41523,"line_start":160,"line_end":160,"column_start":5,"column_end":55}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41528,"byte_end":41542,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41547,"byte_end":41554,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42593,"byte_end":42602,"line_start":193,"line_end":193,"column_start":18,"column_end":27},"name":"body_json","qualname":"<Response>::body_json","value":"fn <T> (&mut self) -> std::io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Reads and deserialized the entire request body from json.","sig":null,"attributes":[{"value":"/ Reads and deserialized the entire request body from json.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41780,"byte_end":41841,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41846,"byte_end":41849,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41854,"byte_end":41866,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41871,"byte_end":41874,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Any I/O error encountered while reading the body is immediately returned","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41879,"byte_end":41955,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ as an `Err`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41960,"byte_end":41976,"line_start":173,"line_end":173,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41981,"byte_end":41984,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ If the body cannot be interpreted as valid json for the target type `T`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":41989,"byte_end":42065,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ an `Err` is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42070,"byte_end":42095,"line_start":176,"line_end":176,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42100,"byte_end":42103,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42108,"byte_end":42122,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42127,"byte_end":42130,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42135,"byte_end":42148,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42153,"byte_end":42195,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42200,"byte_end":42222,"line_start":182,"line_end":182,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42227,"byte_end":42316,"line_start":183,"line_end":183,"column_start":5,"column_end":94}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42321,"byte_end":42358,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/ struct Ip {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42363,"byte_end":42378,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/     ip: String","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42383,"byte_end":42401,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42406,"byte_end":42411,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42416,"byte_end":42419,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let mut res = surf::get(\"https://api.ipify.org?format=json\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42424,"byte_end":42496,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ let Ip { ip } = res.body_json().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42501,"byte_end":42544,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42549,"byte_end":42563,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42568,"byte_end":42575,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43628,"byte_end":43637,"line_start":223,"line_end":223,"column_start":18,"column_end":27},"name":"body_form","qualname":"<Response>::body_form","value":"fn <T> (&mut self) -> Result<T, Exception>","parent":null,"children":[],"decl_id":null,"docs":" Reads and deserialized the entire request body from form encoding.","sig":null,"attributes":[{"value":"/ Reads and deserialized the entire request body from form encoding.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42795,"byte_end":42865,"line_start":198,"line_end":198,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42870,"byte_end":42873,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42878,"byte_end":42890,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42895,"byte_end":42898,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Any I/O error encountered while reading the body is immediately returned","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42903,"byte_end":42979,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ as an `Err`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":42984,"byte_end":43000,"line_start":203,"line_end":203,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43005,"byte_end":43008,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ If the body cannot be interpreted as valid json for the target type `T`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43013,"byte_end":43089,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ an `Err` is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43094,"byte_end":43119,"line_start":206,"line_end":206,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43124,"byte_end":43127,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43132,"byte_end":43146,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43151,"byte_end":43154,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43159,"byte_end":43172,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43177,"byte_end":43219,"line_start":211,"line_end":211,"column_start":5,"column_end":47}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43224,"byte_end":43246,"line_start":212,"line_end":212,"column_start":5,"column_end":27}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43251,"byte_end":43340,"line_start":213,"line_end":213,"column_start":5,"column_end":94}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43345,"byte_end":43382,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ struct Body {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43387,"byte_end":43404,"line_start":215,"line_end":215,"column_start":5,"column_end":22}},{"value":"/     apples: u32","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43409,"byte_end":43428,"line_start":216,"line_end":216,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43433,"byte_end":43438,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43443,"byte_end":43446,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut res = surf::get(\"https://api.example.com/v1/response\").await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43451,"byte_end":43525,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ let Body { apples } = res.body_form().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43530,"byte_end":43579,"line_start":220,"line_end":220,"column_start":5,"column_end":54}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43584,"byte_end":43598,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43603,"byte_end":43610,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":232},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"headers","qualname":"::headers","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":236},{"krate":0,"index":245},{"krate":0,"index":390},{"krate":0,"index":394},{"krate":0,"index":250}],"decl_id":null,"docs":" HTTP Headers.\n","sig":null,"attributes":[{"value":"! HTTP Headers.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44426,"byte_end":44443,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44549,"byte_end":44556,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"Headers","qualname":"::headers::Headers","value":"Headers {  }","parent":null,"children":[{"krate":0,"index":386}],"decl_id":null,"docs":" A collection of HTTP Headers.\n","sig":null,"attributes":[{"value":"/ A collection of HTTP Headers.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44487,"byte_end":44520,"line_start":5,"line_end":5,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44789,"byte_end":44792,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"get","qualname":"<Headers>::get","value":"fn (&self, key: &'static str) -> Option<&'_ str>","parent":null,"children":[],"decl_id":null,"docs":" Get a header.\n","sig":null,"attributes":[{"value":"/ Get a header.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44760,"byte_end":44777,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44939,"byte_end":44945,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"insert","qualname":"<Headers>::insert","value":"fn (&mut self, key: &'static str, value: impl AsRef<str>) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Set a header.\n","sig":null,"attributes":[{"value":"/ Set a header.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44910,"byte_end":44927,"line_start":22,"line_end":22,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":45248,"byte_end":45252,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"iter","qualname":"<Headers>::iter","value":"fn (&self) -> Iter<'_>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all headers.\n","sig":null,"attributes":[{"value":"/ Iterate over all headers.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":45207,"byte_end":45236,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":45581,"byte_end":45585,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::headers::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over headers in `Headers`.\n","sig":null,"attributes":[{"value":"/ An iterator over headers in `Headers`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":45510,"byte_end":45552,"line_start":44,"line_end":44,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":255},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"middleware","qualname":"::middleware","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":261},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":318},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":328}],"decl_id":null,"docs":" Middleware types","sig":null,"attributes":[{"value":"! Middleware types","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":45877,"byte_end":45897,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":45898,"byte_end":45901,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":45902,"byte_end":45916,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":45917,"byte_end":45924,"line_start":4,"line_end":4,"column_start":1,"column_end":8}},{"value":"! use futures::future::BoxFuture;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":45925,"byte_end":45960,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"! use surf::middleware::{Next, Middleware, Request, Response, HttpClient};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":45961,"byte_end":46037,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"! use std::time;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46038,"byte_end":46056,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46057,"byte_end":46060,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! /// Log each request's duration","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46061,"byte_end":46096,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"! #[derive(Debug)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46097,"byte_end":46117,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"! pub struct Logger;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46118,"byte_end":46140,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46141,"byte_end":46144,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! impl<C: HttpClient> Middleware<C> for Logger {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46145,"byte_end":46195,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"!     fn handle<'a>(","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46196,"byte_end":46218,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"!         &'a self,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46219,"byte_end":46240,"line_start":15,"line_end":15,"column_start":1,"column_end":22}},{"value":"!         req: Request,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46241,"byte_end":46266,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"!         client: C,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46267,"byte_end":46289,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"!         next: Next<'a, C>,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46290,"byte_end":46320,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"!     ) -> BoxFuture<'a, Result<Response, surf::Exception>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46321,"byte_end":46384,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"!         Box::pin(async move {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46385,"byte_end":46418,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"!             println!(\"sending request to {}\", req.uri());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46419,"byte_end":46480,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"!             let now = time::Instant::now();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46481,"byte_end":46528,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"!             let res = next.run(req, client).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46529,"byte_end":46584,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"!             println!(\"request completed ({:?})\", now.elapsed());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46585,"byte_end":46653,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"!             Ok(res)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46654,"byte_end":46677,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"!         })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46678,"byte_end":46692,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"!     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46693,"byte_end":46702,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46703,"byte_end":46708,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46709,"byte_end":46716,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"! `Middleware` can also be instantiated using a free function thanks to some convenient trait","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46717,"byte_end":46812,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"! implementations.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46813,"byte_end":46833,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46834,"byte_end":46837,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46838,"byte_end":46845,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! use futures::future::BoxFuture;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46846,"byte_end":46881,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"! use surf::middleware::{Next, Middleware, Request, Response, HttpClient};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46882,"byte_end":46958,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"! use std::time;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46959,"byte_end":46977,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46978,"byte_end":46981,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! fn logger<'a, C: HttpClient>(req: Request, client: C, next: Next<'a, C>) -> BoxFuture<'a, Result<Response, surf::Exception>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":46982,"byte_end":47112,"line_start":38,"line_end":38,"column_start":1,"column_end":131}},{"value":"!     Box::pin(async move {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47113,"byte_end":47142,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"!         println!(\"sending request to {}\", req.uri());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47143,"byte_end":47200,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"!         let now = time::Instant::now();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47201,"byte_end":47244,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"!         let res = next.run(req, client).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47245,"byte_end":47296,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"!         println!(\"request completed ({:?})\", now.elapsed());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47297,"byte_end":47361,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"!         Ok(res)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47362,"byte_end":47381,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"!     })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47382,"byte_end":47392,"line_start":45,"line_end":45,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47393,"byte_end":47398,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47399,"byte_end":47406,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"logger","qualname":"::middleware::logger","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" Logging middleware.","sig":null,"attributes":[{"value":"! Logging middleware.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49774,"byte_end":49797,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49798,"byte_end":49801,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49802,"byte_end":49816,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49817,"byte_end":49820,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49821,"byte_end":49828,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"! # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49829,"byte_end":49851,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"! # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49852,"byte_end":49941,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"! let mut res = surf::get(\"https://httpbin.org/get\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49942,"byte_end":49996,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"!     .middleware(surf::middleware::logger::new())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":49997,"byte_end":50049,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"!     .await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50050,"byte_end":50066,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"! dbg!(res.body_string().await?);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50067,"byte_end":50102,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"! # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50103,"byte_end":50117,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50118,"byte_end":50125,"line_start":13,"line_end":13,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":51068,"byte_end":51074,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Logger","qualname":"::middleware::logger::native::Logger","value":"Logger {  }","parent":null,"children":[{"krate":0,"index":398}],"decl_id":null,"docs":" Log each request's duration.\n","sig":null,"attributes":[{"value":"/ Log each request's duration.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":50998,"byte_end":51030,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":51151,"byte_end":51154,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Logger>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":51113,"byte_end":51139,"line_start":18,"line_end":18,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":304},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50687,"byte_end":50690,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"new","qualname":"::middleware::logger::new","value":"fn () -> Logger","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50325,"byte_end":50351,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50352,"byte_end":50355,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50356,"byte_end":50370,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50371,"byte_end":50374,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50375,"byte_end":50382,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50383,"byte_end":50405,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50406,"byte_end":50495,"line_start":33,"line_end":33,"column_start":1,"column_end":90}},{"value":"/ let mut res = surf::get(\"https://httpbin.org/get\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50496,"byte_end":50550,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/     .middleware(surf::middleware::logger::new())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50551,"byte_end":50603,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/     .await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50604,"byte_end":50620,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/ dbg!(res.body_string().await?);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50621,"byte_end":50656,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50657,"byte_end":50671,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/mod.rs","byte_start":50672,"byte_end":50679,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47654,"byte_end":47664,"line_start":59,"line_end":59,"column_start":11,"column_end":21},"name":"Middleware","qualname":"::middleware::Middleware","value":"Middleware<C: HttpClient>: 'static + Send + Sync","parent":null,"children":[{"krate":0,"index":310}],"decl_id":null,"docs":" Middleware that wraps around remaining middleware chain.\n","sig":null,"attributes":[{"value":"/ Middleware that wraps around remaining middleware chain.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47583,"byte_end":47643,"line_start":58,"line_end":58,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47778,"byte_end":47784,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"handle","qualname":"::middleware::Middleware::handle","value":"fn <'a> (&'a self, req: Request, client: C, next: Next<'a, C>) -> BoxFuture<'a, Result<Response, Exception>>","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":" Asynchronously handle the request, and return a response.\n","sig":null,"attributes":[{"value":"/ Asynchronously handle the request, and return a response.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47709,"byte_end":47770,"line_start":60,"line_end":60,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48491,"byte_end":48495,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Next","qualname":"::middleware::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"decl_id":null,"docs":" The remainder of a middleware chain, including the endpoint.\n","sig":null,"attributes":[{"value":"/ The remainder of a middleware chain, including the endpoint.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48375,"byte_end":48439,"line_start":87,"line_end":87,"column_start":1,"column_end":65}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48440,"byte_end":48479,"line_start":88,"line_end":88,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":49047,"byte_end":49050,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<Next>::new","value":"fn (next: &'a [Arc<dyn Middleware<C>>], endpoint:\n    &'a (dyn Fn(Request, C)\n         -> BoxFuture<'static, Result<Response, Exception>> + 'static + Send +\n         Sync)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance\n","sig":null,"attributes":[{"value":"/ Create a new instance","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":49010,"byte_end":49035,"line_start":109,"line_end":109,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":49447,"byte_end":49450,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"run","qualname":"<Next>::run","value":"fn (mut self, req: Request, client: C) -> BoxFuture<'a, Result<Response, Exception>>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously execute the remaining middleware chain.\n","sig":null,"attributes":[{"value":"/ Asynchronously execute the remaining middleware chain.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":49377,"byte_end":49435,"line_start":123,"line_end":123,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54992,"byte_end":54995,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"get","qualname":"::one_off::get","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `GET` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `GET` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54257,"byte_end":54293,"line_start":6,"line_end":6,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54294,"byte_end":54297,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54298,"byte_end":54325,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54326,"byte_end":54329,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The GET method requests a representation of the specified resource. Requests using GET should","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54330,"byte_end":54427,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ only retrieve data.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54428,"byte_end":54451,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54452,"byte_end":54455,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54456,"byte_end":54478,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54479,"byte_end":54482,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54483,"byte_end":54568,"line_start":15,"line_end":15,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54569,"byte_end":54572,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54573,"byte_end":54585,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54586,"byte_end":54589,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54590,"byte_end":54639,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54640,"byte_end":54643,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54644,"byte_end":54656,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54657,"byte_end":54660,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54661,"byte_end":54735,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54736,"byte_end":54739,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54740,"byte_end":54754,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54755,"byte_end":54758,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54759,"byte_end":54772,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54773,"byte_end":54795,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54796,"byte_end":54885,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/ let string = surf::get(\"https://httpbin.org/get\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54886,"byte_end":54961,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54962,"byte_end":54976,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":54977,"byte_end":54984,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":344},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56560,"byte_end":56564,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"head","qualname":"::one_off::head","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `HEAD` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `HEAD` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55145,"byte_end":55182,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55183,"byte_end":55186,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55187,"byte_end":55214,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55215,"byte_end":55218,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The HTTP HEAD method requests the headers that are returned if the specified resource would be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55219,"byte_end":55317,"line_start":42,"line_end":42,"column_start":1,"column_end":99}},{"value":"/ requested with an HTTP GET method. Such a request can be done before deciding to download a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55318,"byte_end":55413,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ large resource to save bandwidth, for example.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55414,"byte_end":55464,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55465,"byte_end":55468,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A response to a HEAD method should not have a body. If so, it must be ignored. Even so, entity","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55469,"byte_end":55567,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/ headers describing the content of the body, like Content-Length may be included in the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55568,"byte_end":55658,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/ response. They don't relate to the body of the HEAD response, which should be empty, but to the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55659,"byte_end":55758,"line_start":48,"line_end":48,"column_start":1,"column_end":100}},{"value":"/ body of similar request using the GET method would have returned as a response.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55759,"byte_end":55842,"line_start":49,"line_end":49,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55843,"byte_end":55846,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ If the result of a HEAD request shows that a cached resource after a GET request is now","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55847,"byte_end":55938,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ outdated, the cache is invalidated, even if no GET request has been made.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":55939,"byte_end":56016,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56017,"byte_end":56020,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56021,"byte_end":56043,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56044,"byte_end":56047,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56048,"byte_end":56134,"line_start":56,"line_end":56,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56135,"byte_end":56138,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56139,"byte_end":56151,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56152,"byte_end":56155,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56156,"byte_end":56205,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56206,"byte_end":56209,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56210,"byte_end":56222,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56223,"byte_end":56226,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56227,"byte_end":56301,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56302,"byte_end":56305,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56306,"byte_end":56320,"line_start":66,"line_end":66,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56321,"byte_end":56324,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56325,"byte_end":56338,"line_start":68,"line_end":68,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56339,"byte_end":56361,"line_start":69,"line_end":69,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56362,"byte_end":56451,"line_start":70,"line_end":70,"column_start":1,"column_end":90}},{"value":"/ let string = surf::head(\"https://httpbin.org/head\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56452,"byte_end":56529,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56530,"byte_end":56544,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56545,"byte_end":56552,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":346},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59241,"byte_end":59245,"line_start":132,"line_end":132,"column_start":8,"column_end":12},"name":"post","qualname":"::one_off::post","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `POST` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `POST` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56715,"byte_end":56752,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56753,"byte_end":56756,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56757,"byte_end":56784,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56785,"byte_end":56788,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The HTTP POST method sends data to the server. The type of the body of the request is indicated","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56789,"byte_end":56888,"line_start":83,"line_end":83,"column_start":1,"column_end":100}},{"value":"/ by the Content-Type header.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56889,"byte_end":56920,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56921,"byte_end":56924,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The difference between PUT and POST is that PUT is idempotent: calling it once or several times","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":56925,"byte_end":57024,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ successively has the same effect (that is no side effect), where successive identical POST may","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57025,"byte_end":57123,"line_start":87,"line_end":87,"column_start":1,"column_end":99}},{"value":"/ have additional effects, like passing an order several times.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57124,"byte_end":57189,"line_start":88,"line_end":88,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57190,"byte_end":57193,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ A POST request is typically sent via an HTML form and results in a change on the server. In","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57194,"byte_end":57289,"line_start":90,"line_end":90,"column_start":1,"column_end":96}},{"value":"/ this case, the content type is selected by putting the adequate string in the enctype attribute","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57290,"byte_end":57389,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/ of the `<form>` element or the formenctype attribute of the `<input>` or `<button>` elements:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57390,"byte_end":57487,"line_start":92,"line_end":92,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57488,"byte_end":57491,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```txt","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57492,"byte_end":57502,"line_start":94,"line_end":94,"column_start":1,"column_end":11}},{"value":"/ application/x-www-form-urlencoded: the keys and values are encoded in key-value tuples separated by '&', with a '=' between the key and the value. Non-alphanumeric characters in both keys and values are percent encoded: this is the reason why this type is not suitable to use with binary data (use multipart/form-data instead)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57503,"byte_end":57833,"line_start":95,"line_end":95,"column_start":1,"column_end":331}},{"value":"/ multipart/form-data: each value is sent as a block of data (\"body part\"), with a user agent-defined delimiter (\"boundary\") separating each part. The keys are given in the Content-Disposition header of each part.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":57834,"byte_end":58049,"line_start":96,"line_end":96,"column_start":1,"column_end":216}},{"value":"/ text/plain","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58050,"byte_end":58064,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58065,"byte_end":58072,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58073,"byte_end":58076,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ When the POST request is sent via a method other than an HTML form — like via an XMLHttpRequest","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58077,"byte_end":58178,"line_start":100,"line_end":100,"column_start":1,"column_end":100}},{"value":"/ — the body can take any type. As described in the HTTP 1.1 specification, POST is designed to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58179,"byte_end":58278,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ allow a uniform method to cover the following functions:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58279,"byte_end":58339,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58340,"byte_end":58343,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```txt","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58344,"byte_end":58354,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ Annotation of existing resources","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58355,"byte_end":58391,"line_start":105,"line_end":105,"column_start":1,"column_end":37}},{"value":"/ Posting a message to a bulletin board, newsgroup, mailing list, or similar group of articles;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58392,"byte_end":58489,"line_start":106,"line_end":106,"column_start":1,"column_end":98}},{"value":"/ Adding a new user through a signup modal;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58490,"byte_end":58535,"line_start":107,"line_end":107,"column_start":1,"column_end":46}},{"value":"/ Providing a block of data, such as the result of submitting a form, to a data-handling process;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58536,"byte_end":58635,"line_start":108,"line_end":108,"column_start":1,"column_end":100}},{"value":"/ Extending a database through an append operation.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58636,"byte_end":58689,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58690,"byte_end":58697,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58698,"byte_end":58701,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58702,"byte_end":58724,"line_start":112,"line_end":112,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58725,"byte_end":58728,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58729,"byte_end":58815,"line_start":114,"line_end":114,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58816,"byte_end":58819,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58820,"byte_end":58832,"line_start":116,"line_end":116,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58833,"byte_end":58836,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58837,"byte_end":58886,"line_start":118,"line_end":118,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58887,"byte_end":58890,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58891,"byte_end":58903,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58904,"byte_end":58907,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58908,"byte_end":58982,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58983,"byte_end":58986,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":58987,"byte_end":59001,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59002,"byte_end":59005,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59006,"byte_end":59019,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59020,"byte_end":59042,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59043,"byte_end":59132,"line_start":128,"line_end":128,"column_start":1,"column_end":90}},{"value":"/ let string = surf::post(\"https://httpbin.org/post\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59133,"byte_end":59210,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59211,"byte_end":59225,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59226,"byte_end":59233,"line_start":131,"line_end":131,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":348},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60415,"byte_end":60418,"line_start":168,"line_end":168,"column_start":8,"column_end":11},"name":"put","qualname":"::one_off::put","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `PUT` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `PUT` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59396,"byte_end":59432,"line_start":137,"line_end":137,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59433,"byte_end":59436,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59437,"byte_end":59464,"line_start":139,"line_end":139,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59465,"byte_end":59468,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The HTTP PUT request method creates a new resource or replaces a representation of the target","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59469,"byte_end":59566,"line_start":141,"line_end":141,"column_start":1,"column_end":98}},{"value":"/ resource with the request payload.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59567,"byte_end":59605,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59606,"byte_end":59609,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ The difference between PUT and POST is that PUT is idempotent: calling it once or several times","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59610,"byte_end":59709,"line_start":144,"line_end":144,"column_start":1,"column_end":100}},{"value":"/ successively has the same effect (that is no side effect), where successive identical POST may","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59710,"byte_end":59808,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/ have additional effects, like passing an order several times.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59809,"byte_end":59874,"line_start":146,"line_end":146,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59875,"byte_end":59878,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59879,"byte_end":59901,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59902,"byte_end":59905,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59906,"byte_end":59991,"line_start":150,"line_end":150,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59992,"byte_end":59995,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":59996,"byte_end":60008,"line_start":152,"line_end":152,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60009,"byte_end":60012,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60013,"byte_end":60062,"line_start":154,"line_end":154,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60063,"byte_end":60066,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60067,"byte_end":60079,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60080,"byte_end":60083,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60084,"byte_end":60158,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60159,"byte_end":60162,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60163,"byte_end":60177,"line_start":160,"line_end":160,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60178,"byte_end":60181,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60182,"byte_end":60195,"line_start":162,"line_end":162,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60196,"byte_end":60218,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60219,"byte_end":60308,"line_start":164,"line_end":164,"column_start":1,"column_end":90}},{"value":"/ let string = surf::put(\"https://httpbin.org/put\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60309,"byte_end":60384,"line_start":165,"line_end":165,"column_start":1,"column_end":76}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60385,"byte_end":60399,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60400,"byte_end":60407,"line_start":167,"line_end":167,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":350},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61260,"byte_end":61266,"line_start":199,"line_end":199,"column_start":8,"column_end":14},"name":"delete","qualname":"::one_off::delete","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `DELETE` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `DELETE` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60568,"byte_end":60607,"line_start":173,"line_end":173,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60608,"byte_end":60611,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60612,"byte_end":60639,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60640,"byte_end":60643,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ The HTTP DELETE request method deletes the specified resource.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60644,"byte_end":60710,"line_start":177,"line_end":177,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60711,"byte_end":60714,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60715,"byte_end":60737,"line_start":179,"line_end":179,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60738,"byte_end":60741,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60742,"byte_end":60830,"line_start":181,"line_end":181,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60831,"byte_end":60834,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60835,"byte_end":60847,"line_start":183,"line_end":183,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60848,"byte_end":60851,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60852,"byte_end":60901,"line_start":185,"line_end":185,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60902,"byte_end":60905,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60906,"byte_end":60918,"line_start":187,"line_end":187,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60919,"byte_end":60922,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60923,"byte_end":60997,"line_start":189,"line_end":189,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":60998,"byte_end":61001,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61002,"byte_end":61016,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61017,"byte_end":61020,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61021,"byte_end":61034,"line_start":193,"line_end":193,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61035,"byte_end":61057,"line_start":194,"line_end":194,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61058,"byte_end":61147,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/ let string = surf::delete(\"https://httpbin.org/delete\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61148,"byte_end":61229,"line_start":196,"line_end":196,"column_start":1,"column_end":82}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61230,"byte_end":61244,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61245,"byte_end":61252,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":352},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62626,"byte_end":62633,"line_start":239,"line_end":239,"column_start":8,"column_end":15},"name":"connect","qualname":"::one_off::connect","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `CONNECT` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `CONNECT` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61419,"byte_end":61459,"line_start":204,"line_end":204,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61460,"byte_end":61463,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61464,"byte_end":61491,"line_start":206,"line_end":206,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61492,"byte_end":61495,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ The HTTP CONNECT method method starts two-way communications with the requested resource. It","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61496,"byte_end":61592,"line_start":208,"line_end":208,"column_start":1,"column_end":97}},{"value":"/ can be used to open a tunnel.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61593,"byte_end":61626,"line_start":209,"line_end":209,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61627,"byte_end":61630,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ For example, the CONNECT method can be used to access websites that use SSL (HTTPS). The client","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61631,"byte_end":61730,"line_start":211,"line_end":211,"column_start":1,"column_end":100}},{"value":"/ asks an HTTP Proxy server to tunnel the TCP connection to the desired destination. The server","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61731,"byte_end":61828,"line_start":212,"line_end":212,"column_start":1,"column_end":98}},{"value":"/ then proceeds to make the connection on behalf of the client. Once the connection has been","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61829,"byte_end":61923,"line_start":213,"line_end":213,"column_start":1,"column_end":95}},{"value":"/ established by the server, the Proxy server continues to proxy the TCP stream to and from the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":61924,"byte_end":62021,"line_start":214,"line_end":214,"column_start":1,"column_end":98}},{"value":"/ client.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62022,"byte_end":62033,"line_start":215,"line_end":215,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62034,"byte_end":62037,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ CONNECT is a hop-by-hop method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62038,"byte_end":62073,"line_start":217,"line_end":217,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62074,"byte_end":62077,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62078,"byte_end":62100,"line_start":219,"line_end":219,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62101,"byte_end":62104,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62105,"byte_end":62194,"line_start":221,"line_end":221,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62195,"byte_end":62198,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62199,"byte_end":62211,"line_start":223,"line_end":223,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62212,"byte_end":62215,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62216,"byte_end":62265,"line_start":225,"line_end":225,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62266,"byte_end":62269,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62270,"byte_end":62282,"line_start":227,"line_end":227,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62283,"byte_end":62286,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62287,"byte_end":62361,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62362,"byte_end":62365,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62366,"byte_end":62380,"line_start":231,"line_end":231,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62381,"byte_end":62384,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62385,"byte_end":62398,"line_start":233,"line_end":233,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62399,"byte_end":62421,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62422,"byte_end":62511,"line_start":235,"line_end":235,"column_start":1,"column_end":90}},{"value":"/ let string = surf::connect(\"https://httpbin.org/connect\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62512,"byte_end":62595,"line_start":236,"line_end":236,"column_start":1,"column_end":84}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62596,"byte_end":62610,"line_start":237,"line_end":237,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62611,"byte_end":62618,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63626,"byte_end":63633,"line_start":272,"line_end":272,"column_start":8,"column_end":15},"name":"options","qualname":"::one_off::options","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `OPTIONS` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `OPTIONS` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62787,"byte_end":62827,"line_start":244,"line_end":244,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62828,"byte_end":62831,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62832,"byte_end":62859,"line_start":246,"line_end":246,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62860,"byte_end":62863,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The HTTP OPTIONS method is used to describe the communication options for the target resource.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62864,"byte_end":62962,"line_start":248,"line_end":248,"column_start":1,"column_end":99}},{"value":"/ The client can specify a URL for the OPTIONS method, or an asterisk (*) to refer to the entire","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":62963,"byte_end":63061,"line_start":249,"line_end":249,"column_start":1,"column_end":99}},{"value":"/ server.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63062,"byte_end":63073,"line_start":250,"line_end":250,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63074,"byte_end":63077,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63078,"byte_end":63100,"line_start":252,"line_end":252,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63101,"byte_end":63104,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63105,"byte_end":63194,"line_start":254,"line_end":254,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63195,"byte_end":63198,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63199,"byte_end":63211,"line_start":256,"line_end":256,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63212,"byte_end":63215,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63216,"byte_end":63265,"line_start":258,"line_end":258,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63266,"byte_end":63269,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63270,"byte_end":63282,"line_start":260,"line_end":260,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63283,"byte_end":63286,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63287,"byte_end":63361,"line_start":262,"line_end":262,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63362,"byte_end":63365,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63366,"byte_end":63380,"line_start":264,"line_end":264,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63381,"byte_end":63384,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63385,"byte_end":63398,"line_start":266,"line_end":266,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63399,"byte_end":63421,"line_start":267,"line_end":267,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63422,"byte_end":63511,"line_start":268,"line_end":268,"column_start":1,"column_end":90}},{"value":"/ let string = surf::options(\"https://httpbin.org/options\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63512,"byte_end":63595,"line_start":269,"line_end":269,"column_start":1,"column_end":84}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63596,"byte_end":63610,"line_start":270,"line_end":270,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63611,"byte_end":63618,"line_start":271,"line_end":271,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":356},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64902,"byte_end":64907,"line_start":309,"line_end":309,"column_start":8,"column_end":13},"name":"trace","qualname":"::one_off::trace","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `TRACE` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `TRACE` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63787,"byte_end":63825,"line_start":277,"line_end":277,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63826,"byte_end":63829,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63830,"byte_end":63857,"line_start":279,"line_end":279,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63858,"byte_end":63861,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The HTTP TRACE method performs a message loop-back test along the path to the target resource,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63862,"byte_end":63960,"line_start":281,"line_end":281,"column_start":1,"column_end":99}},{"value":"/ providing a useful debugging mechanism.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":63961,"byte_end":64004,"line_start":282,"line_end":282,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64005,"byte_end":64008,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The final recipient of the request should reflect the message received, excluding some fields","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64009,"byte_end":64106,"line_start":284,"line_end":284,"column_start":1,"column_end":98}},{"value":"/ described below, back to the client as the message body of a 200 (OK) response with a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64107,"byte_end":64196,"line_start":285,"line_end":285,"column_start":1,"column_end":90}},{"value":"/ Content-Type of message/http. The final recipient is either the origin server or the first","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64197,"byte_end":64291,"line_start":286,"line_end":286,"column_start":1,"column_end":95}},{"value":"/ server to receive a Max-Forwards value of 0 in the request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64292,"byte_end":64355,"line_start":287,"line_end":287,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64356,"byte_end":64359,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64360,"byte_end":64382,"line_start":289,"line_end":289,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64383,"byte_end":64386,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/TRACE","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64387,"byte_end":64474,"line_start":291,"line_end":291,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64475,"byte_end":64478,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64479,"byte_end":64491,"line_start":293,"line_end":293,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64492,"byte_end":64495,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64496,"byte_end":64545,"line_start":295,"line_end":295,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64546,"byte_end":64549,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64550,"byte_end":64562,"line_start":297,"line_end":297,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64563,"byte_end":64566,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64567,"byte_end":64641,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64642,"byte_end":64645,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64646,"byte_end":64660,"line_start":301,"line_end":301,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64661,"byte_end":64664,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64665,"byte_end":64678,"line_start":303,"line_end":303,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64679,"byte_end":64701,"line_start":304,"line_end":304,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64702,"byte_end":64791,"line_start":305,"line_end":305,"column_start":1,"column_end":90}},{"value":"/ let string = surf::trace(\"https://httpbin.org/trace\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64792,"byte_end":64871,"line_start":306,"line_end":306,"column_start":1,"column_end":80}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64872,"byte_end":64886,"line_start":307,"line_end":307,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":64887,"byte_end":64894,"line_start":308,"line_end":308,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":358},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66469,"byte_end":66474,"line_start":352,"line_end":352,"column_start":8,"column_end":13},"name":"patch","qualname":"::one_off::patch","value":"fn (uri: impl AsRef<str>) -> Request<NativeClient>","parent":null,"children":[],"decl_id":null,"docs":" Perform a one-off `PATCH` request.","sig":null,"attributes":[{"value":"/ Perform a one-off `PATCH` request.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65059,"byte_end":65097,"line_start":314,"line_end":314,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65098,"byte_end":65101,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ # About the HTTP Method","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65102,"byte_end":65129,"line_start":316,"line_end":316,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65130,"byte_end":65133,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ The HTTP PATCH request method applies partial modifications to a resource.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65134,"byte_end":65212,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65213,"byte_end":65216,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ The HTTP PUT method only allows complete replacement of a document. Unlike PUT, PATCH is not","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65217,"byte_end":65313,"line_start":320,"line_end":320,"column_start":1,"column_end":97}},{"value":"/ idempotent, meaning successive identical patch requests may have different effects. However, it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65314,"byte_end":65413,"line_start":321,"line_end":321,"column_start":1,"column_end":100}},{"value":"/ is possible to issue PATCH requests in such a way as to be idempotent.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65414,"byte_end":65488,"line_start":322,"line_end":322,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65489,"byte_end":65492,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ PATCH (like PUT) may have side-effects on other resources.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65493,"byte_end":65555,"line_start":324,"line_end":324,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65556,"byte_end":65559,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ To find out whether a server supports PATCH, a server can advertise its support by adding it to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65560,"byte_end":65659,"line_start":326,"line_end":326,"column_start":1,"column_end":100}},{"value":"/ the list in the Allow or Access-Control-Allow-Methods (for CORS) response headers.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65660,"byte_end":65746,"line_start":327,"line_end":327,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65747,"byte_end":65750,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Another (implicit) indication that PATCH is allowed, is the presence of the Accept-Patch","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65751,"byte_end":65843,"line_start":329,"line_end":329,"column_start":1,"column_end":93}},{"value":"/ header, which specifies the patch document formats accepted by the server.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65844,"byte_end":65922,"line_start":330,"line_end":330,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65923,"byte_end":65926,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65927,"byte_end":65949,"line_start":332,"line_end":332,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65950,"byte_end":65953,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ [Read more on MDN]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":65954,"byte_end":66041,"line_start":334,"line_end":334,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66042,"byte_end":66045,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66046,"byte_end":66058,"line_start":336,"line_end":336,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66059,"byte_end":66062,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ This will panic if a malformed URL is passed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66063,"byte_end":66112,"line_start":338,"line_end":338,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66113,"byte_end":66116,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66117,"byte_end":66129,"line_start":340,"line_end":340,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66130,"byte_end":66133,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ Returns errors from the middleware, http backend, and network sockets.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66134,"byte_end":66208,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66209,"byte_end":66212,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66213,"byte_end":66227,"line_start":344,"line_end":344,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66228,"byte_end":66231,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66232,"byte_end":66245,"line_start":346,"line_end":346,"column_start":1,"column_end":14}},{"value":"/ # #[runtime::main]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66246,"byte_end":66268,"line_start":347,"line_end":347,"column_start":1,"column_end":23}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66269,"byte_end":66358,"line_start":348,"line_end":348,"column_start":1,"column_end":90}},{"value":"/ let string = surf::patch(\"https://httpbin.org/patch\").recv_string().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66359,"byte_end":66438,"line_start":349,"line_end":349,"column_start":1,"column_end":80}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66439,"byte_end":66453,"line_start":350,"line_end":350,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/one_off.rs","byte_start":66454,"byte_end":66461,"line_start":351,"line_end":351,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3292,"byte_end":3301,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"name":"Exception","qualname":"::Exception","value":"Box<dyn std::error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":" A generic error type.\n","sig":null,"attributes":[{"value":"/ A generic error type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":3257,"byte_end":3282,"line_start":98,"line_end":98,"column_start":1,"column_end":26}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4085,"byte_end":4091,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4489,"byte_end":4495,"line_start":42,"line_end":42,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":15772,"byte_end":15783,"line_start":13,"line_end":13,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":15847,"byte_end":15858,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":16033,"byte_end":16044,"line_start":28,"line_end":28,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":16172,"byte_end":16183,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14281,"byte_end":14285,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14652,"byte_end":14656,"line_start":76,"line_end":76,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14923,"byte_end":14927,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":15134,"byte_end":15138,"line_start":94,"line_end":94,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":15378,"byte_end":15382,"line_start":104,"line_end":104,"column_start":62,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18245,"byte_end":18252,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":19131,"byte_end":19138,"line_start":68,"line_end":68,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34933,"byte_end":34940,"line_start":563,"line_end":563,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":35946,"byte_end":35953,"line_start":590,"line_end":590,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":36427,"byte_end":36434,"line_start":604,"line_end":604,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":36611,"byte_end":36618,"line_start":611,"line_end":611,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37134,"byte_end":37142,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43904,"byte_end":43912,"line_start":230,"line_end":230,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":44199,"byte_end":44207,"line_start":241,"line_end":241,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44613,"byte_end":44620,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":45343,"byte_end":45350,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":45665,"byte_end":45669,"line_start":48,"line_end":48,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":51100,"byte_end":51106,"line_start":17,"line_end":17,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":51243,"byte_end":51249,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":52778,"byte_end":52790,"line_start":79,"line_end":79,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":53258,"byte_end":53271,"line_start":97,"line_end":97,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48025,"byte_end":48026,"line_start":70,"line_end":70,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48757,"byte_end":48761,"line_start":97,"line_end":97,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48952,"byte_end":48956,"line_start":106,"line_end":106,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48992,"byte_end":48996,"line_start":108,"line_end":108,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2943,"byte_end":2950,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":232}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/lib.rs","byte_start":2960,"byte_end":2970,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":255}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47499,"byte_end":47505,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":261}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4085,"byte_end":4091,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/client.rs","byte_start":4489,"byte_end":4495,"line_start":42,"line_end":42,"column_start":21,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":15772,"byte_end":15783,"line_start":13,"line_end":13,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":15847,"byte_end":15858,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":16033,"byte_end":16044,"line_start":28,"line_end":28,"column_start":16,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/isahc.rs","byte_start":16172,"byte_end":16183,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":380},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13672,"byte_end":13677,"line_start":43,"line_end":43,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":5977},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13680,"byte_end":13685,"line_start":43,"line_end":43,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1921},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13688,"byte_end":13692,"line_start":43,"line_end":43,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13695,"byte_end":13699,"line_start":43,"line_end":43,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1894},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":13702,"byte_end":13707,"line_start":43,"line_end":43,"column_start":53,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":1592},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14281,"byte_end":14285,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14652,"byte_end":14656,"line_start":76,"line_end":76,"column_start":20,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":67},"to":{"krate":20,"index":18}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":14923,"byte_end":14927,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":15134,"byte_end":15138,"line_start":94,"line_end":94,"column_start":24,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/http_client/mod.rs","byte_start":15378,"byte_end":15382,"line_start":104,"line_end":104,"column_start":62,"column_end":66},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":18245,"byte_end":18252,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":19131,"byte_end":19138,"line_start":68,"line_end":68,"column_start":21,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":34933,"byte_end":34940,"line_start":563,"line_end":563,"column_start":32,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":35946,"byte_end":35953,"line_start":590,"line_end":590,"column_start":9,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":1813}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":36427,"byte_end":36434,"line_start":604,"line_end":604,"column_start":51,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/request.rs","byte_start":36611,"byte_end":36618,"line_start":611,"line_end":611,"column_start":36,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":37134,"byte_end":37142,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":43904,"byte_end":43912,"line_start":230,"line_end":230,"column_start":20,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":202},"to":{"krate":20,"index":18}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/response.rs","byte_start":44199,"byte_end":44207,"line_start":241,"line_end":241,"column_start":21,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":44613,"byte_end":44620,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":45343,"byte_end":45350,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":4679}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/headers.rs","byte_start":45665,"byte_end":45669,"line_start":48,"line_end":48,"column_start":23,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":51100,"byte_end":51106,"line_start":17,"line_end":17,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":51243,"byte_end":51249,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":397},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":52778,"byte_end":52790,"line_start":79,"line_end":79,"column_start":30,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":283},"to":{"krate":25,"index":46}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/logger/native.rs","byte_start":53258,"byte_end":53271,"line_start":97,"line_end":97,"column_start":30,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":292},"to":{"krate":25,"index":46}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47691,"byte_end":47695,"line_start":59,"line_end":59,"column_start":48,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1882},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":47698,"byte_end":47702,"line_start":59,"line_end":59,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":1894},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48025,"byte_end":48026,"line_start":70,"line_end":70,"column_start":42,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":313},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48757,"byte_end":48761,"line_start":97,"line_end":97,"column_start":31,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48952,"byte_end":48956,"line_start":106,"line_end":106,"column_start":30,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":1892}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/surf-1.0.3/src/middleware/mod.rs","byte_start":48992,"byte_end":48996,"line_start":108,"line_end":108,"column_start":25,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}}]}