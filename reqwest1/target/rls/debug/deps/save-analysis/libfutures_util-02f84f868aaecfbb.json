{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5","program":"/home/web-developer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=02f84f868aaecfbb","-C","extra-filename=-02f84f868aaecfbb","--out-dir","/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps","-L","dependency=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps","--extern","futures_core=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libfutures_core-ac6e004569622b94.rmeta","--extern","futures_io=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libfutures_io-9c3531faf57af167.rmeta","--extern","futures_sink=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libfutures_sink-fa83a988c9ba496f.rmeta","--extern","futures_task=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libfutures_task-feb0fd9bc1cc801e.rmeta","--extern","memchr=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libmemchr-c14d9e0084f4f5c1.rmeta","--extern","pin_project=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libpin_project-e2a65cadba2981d8.rmeta","--extern","pin_utils=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libpin_utils-7d8766fdb539b9d5.rmeta","--extern","slab=/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libslab-9c1f11f900eb1368.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/web-developer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/web-developer/Documents/Learn-Rust/reqwest1/target/rls/debug/deps/libfutures_util-02f84f868aaecfbb.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[15491917944243444344,156076152310853311]},"crate_root":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src","external_crates":[{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15682290646506683676,14718567046286836371]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[13518982493124233533,12391336102434922224]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7248215118149796407,5784829660206374225]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17708477222956396348,13233362623726710952]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8402686647371542786,4893528090212846480]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12429915295247123903,16936150619785298801]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3561444793845825560,808161116134598189]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15626283292208498598,10979253865745053481]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9878202165149462890,17449959146959421140]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[749461474745232681,11698756817203002328]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3051499033766592682,13434072314992821142]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5967091660134880975,16425511823645009085]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10102111148853945701,5773407069226950463]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7496764460755907832,13683447438519276603]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":15,"id":{"name":"futures_core","disambiguator":[530727528946684426,3608715801071509917]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[8387619956116884623,7116796865736624713]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[5419912373812677529,17316626423837522933]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","num":18,"id":{"name":"once_cell","disambiguator":[7729582473589706032,6152185100116835402]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","num":19,"id":{"name":"futures_sink","disambiguator":[1655484041584796917,16469654241830304219]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","num":20,"id":{"name":"pin_project","disambiguator":[1862913857792701562,7034650678186104902]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","num":21,"id":{"name":"pin_project_internal","disambiguator":[5637642587272669303,1326276548293159322]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","num":22,"id":{"name":"slab","disambiguator":[4089959928925939311,368198836259449931]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","num":23,"id":{"name":"futures_io","disambiguator":[10247077775702799969,10504838173578096741]}},{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","num":24,"id":{"name":"memchr","disambiguator":[10424658742243726858,12785040814111731563]}}],"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":12350,"line_start":1,"line_end":335,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":131},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1650,"byte_end":1655,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1676,"byte_end":1683,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":168},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1920,"byte_end":1933,"line_start":51,"line_end":51,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":11},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12611,"byte_end":12620,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":15,"index":14},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12622,"byte_end":12636,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":15,"index":17},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12670,"byte_end":12681,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":2,"index":8075},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12683,"byte_end":12689,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":15,"index":32},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12691,"byte_end":12700,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":17,"index":111},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12726,"byte_end":12735,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12737,"byte_end":12751,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":17,"index":132},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12753,"byte_end":12768,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5114},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18192,"byte_end":18203,"line_start":99,"line_end":99,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18617,"byte_end":18623,"line_start":113,"line_end":113,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":29}},{"kind":"Use","ref_id":{"krate":0,"index":4554},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12883,"byte_end":12890,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":4446},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12892,"byte_end":12896,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12898,"byte_end":12907,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":4943},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12909,"byte_end":12916,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":4737},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12918,"byte_end":12928,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":4670},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12930,"byte_end":12933,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5010},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12935,"byte_end":12945,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":4861},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12947,"byte_end":12951,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5063},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12953,"byte_end":12962,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":4792},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12964,"byte_end":12971,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":4607},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13067,"byte_end":13080,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5114},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13129,"byte_end":13140,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13288,"byte_end":13294,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5631},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13345,"byte_end":13352,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5796},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13354,"byte_end":13361,"line_start":34,"line_end":34,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5864},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13363,"byte_end":13369,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6000},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13371,"byte_end":13381,"line_start":34,"line_end":34,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5932},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13383,"byte_end":13392,"line_start":34,"line_end":34,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5158},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13394,"byte_end":13404,"line_start":34,"line_end":34,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6136},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13406,"byte_end":13412,"line_start":34,"line_end":34,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6068},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13414,"byte_end":13419,"line_start":34,"line_end":34,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5714},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13421,"byte_end":13427,"line_start":34,"line_end":34,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5489},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13429,"byte_end":13445,"line_start":34,"line_end":34,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13451,"byte_end":13463,"line_start":35,"line_end":35,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6287},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13465,"byte_end":13477,"line_start":35,"line_end":35,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6205},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13479,"byte_end":13490,"line_start":35,"line_end":35,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5354},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13492,"byte_end":13502,"line_start":35,"line_end":35,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":5552},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13559,"byte_end":13570,"line_start":39,"line_end":39,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13626,"byte_end":13630,"line_start":44,"line_end":44,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6352},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13632,"byte_end":13636,"line_start":44,"line_end":44,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13677,"byte_end":13684,"line_start":47,"line_end":47,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6358},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13686,"byte_end":13693,"line_start":47,"line_end":47,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13740,"byte_end":13750,"line_start":50,"line_end":50,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6364},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13752,"byte_end":13761,"line_start":50,"line_end":50,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13816,"byte_end":13830,"line_start":53,"line_end":53,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6426},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13832,"byte_end":13844,"line_start":53,"line_end":53,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6488},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13882,"byte_end":13894,"line_start":56,"line_end":56,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13934,"byte_end":13941,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":594},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13943,"byte_end":13949,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":638},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13986,"byte_end":13989,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":635},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13991,"byte_end":13993,"line_start":62,"line_end":62,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":633},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13995,"byte_end":14000,"line_start":62,"line_end":62,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6535},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14002,"byte_end":14007,"line_start":62,"line_end":62,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":661},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14042,"byte_end":14046,"line_start":65,"line_end":65,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14048,"byte_end":14053,"line_start":65,"line_end":65,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14055,"byte_end":14060,"line_start":65,"line_end":65,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14062,"byte_end":14067,"line_start":65,"line_end":65,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6637},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14069,"byte_end":14073,"line_start":65,"line_end":65,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6689},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14075,"byte_end":14080,"line_start":65,"line_end":65,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6755},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14082,"byte_end":14087,"line_start":65,"line_end":65,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6835},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14089,"byte_end":14094,"line_start":65,"line_end":65,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14189,"byte_end":14197,"line_start":70,"line_end":70,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14199,"byte_end":14206,"line_start":70,"line_end":70,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":738},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14245,"byte_end":14251,"line_start":73,"line_end":73,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6929},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14253,"byte_end":14259,"line_start":73,"line_end":73,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":765},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14358,"byte_end":14368,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":6937},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14370,"byte_end":14379,"line_start":78,"line_end":78,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14427,"byte_end":14435,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":796},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14437,"byte_end":14446,"line_start":82,"line_end":82,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":800},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14448,"byte_end":14457,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":805},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14459,"byte_end":14468,"line_start":82,"line_end":82,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7013},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14470,"byte_end":14477,"line_start":82,"line_end":82,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7065},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14479,"byte_end":14487,"line_start":82,"line_end":82,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7131},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14489,"byte_end":14497,"line_start":82,"line_end":82,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7211},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14499,"byte_end":14507,"line_start":82,"line_end":82,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14612,"byte_end":14624,"line_start":88,"line_end":88,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":847},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14626,"byte_end":14636,"line_start":88,"line_end":88,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":881},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14683,"byte_end":14693,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7305},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14695,"byte_end":14704,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":906},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14801,"byte_end":14810,"line_start":96,"line_end":96,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7313},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14812,"byte_end":14820,"line_start":96,"line_end":96,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7319},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14858,"byte_end":14864,"line_start":99,"line_end":99,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7421},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15001,"byte_end":15010,"line_start":105,"line_end":105,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":13385},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15012,"byte_end":15021,"line_start":105,"line_end":105,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7442},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15023,"byte_end":15034,"line_start":105,"line_end":105,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7438},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15036,"byte_end":15053,"line_start":105,"line_end":105,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":7453},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15055,"byte_end":15062,"line_start":105,"line_end":105,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11768,"byte_end":11777,"line_start":305,"line_end":305,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11779,"byte_end":11791,"line_start":305,"line_end":305,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":62},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136894,"byte_end":136903,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":15,"index":65},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136905,"byte_end":136919,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":15,"index":82},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136953,"byte_end":136964,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":15,"index":68},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136966,"byte_end":136972,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":15,"index":97},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136974,"byte_end":136983,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9140},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":143840,"byte_end":143846,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1011}},{"kind":"Use","ref_id":{"krate":0,"index":9196},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144023,"byte_end":144034,"line_start":154,"line_end":154,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1011}},{"kind":"Use","ref_id":{"krate":0,"index":9540},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145271,"byte_end":145282,"line_start":192,"line_end":192,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1011}},{"kind":"Use","ref_id":{"krate":0,"index":7466},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137099,"byte_end":137104,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":7523},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137106,"byte_end":137113,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":7579},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137115,"byte_end":137121,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":7624},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137123,"byte_end":137132,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":7677},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137134,"byte_end":137140,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":7754},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137142,"byte_end":137151,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8454},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137153,"byte_end":137160,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":7895},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137162,"byte_end":137169,"line_start":16,"line_end":16,"column_start":68,"column_end":75},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":7961},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137171,"byte_end":137175,"line_start":16,"line_end":16,"column_start":77,"column_end":81},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8179},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137177,"byte_end":137184,"line_start":16,"line_end":16,"column_start":83,"column_end":90},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8245},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137186,"byte_end":137190,"line_start":16,"line_end":16,"column_start":92,"column_end":96},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8307},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137196,"byte_end":137203,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8389},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137205,"byte_end":137208,"line_start":17,"line_end":17,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8552},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137210,"byte_end":137214,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8622},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137216,"byte_end":137220,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8568},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137222,"byte_end":137230,"line_start":17,"line_end":17,"column_start":31,"column_end":39},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9252},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137232,"byte_end":137236,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8560},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137238,"byte_end":137252,"line_start":17,"line_end":17,"column_start":47,"column_end":61},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8670},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137254,"byte_end":137258,"line_start":17,"line_end":17,"column_start":63,"column_end":67},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8723},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137260,"byte_end":137269,"line_start":17,"line_end":17,"column_start":69,"column_end":78},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":1948},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137271,"byte_end":137280,"line_start":17,"line_end":17,"column_start":80,"column_end":89},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8298},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137286,"byte_end":137298,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8803},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137300,"byte_end":137304,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8856},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137306,"byte_end":137315,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8936},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137317,"byte_end":137326,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9003},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137328,"byte_end":137332,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9077},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137334,"byte_end":137337,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9540},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137389,"byte_end":137400,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9140},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137451,"byte_end":137457,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9196},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137508,"byte_end":137519,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":8114},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137569,"byte_end":137576,"line_start":31,"line_end":31,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":13341},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137707,"byte_end":137722,"line_start":35,"line_end":35,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":13296},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137724,"byte_end":137732,"line_start":35,"line_end":35,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":13228},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137734,"byte_end":137751,"line_start":35,"line_end":35,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9487},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137908,"byte_end":137920,"line_start":40,"line_end":40,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9531},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137922,"byte_end":137931,"line_start":40,"line_end":40,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9524},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137933,"byte_end":137944,"line_start":40,"line_end":40,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10897},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260952,"byte_end":260965,"line_start":126,"line_end":126,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":2066}},{"kind":"Use","ref_id":{"krate":0,"index":2470},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137996,"byte_end":138006,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9591},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138008,"byte_end":138015,"line_start":44,"line_end":44,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9668},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138017,"byte_end":138024,"line_start":44,"line_end":44,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9838},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138026,"byte_end":138036,"line_start":44,"line_end":44,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9753},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138038,"byte_end":138047,"line_start":44,"line_end":44,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9920},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138049,"byte_end":138059,"line_start":44,"line_end":44,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10057},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138061,"byte_end":138067,"line_start":44,"line_end":44,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":9972},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138069,"byte_end":138074,"line_start":44,"line_end":44,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10139},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138076,"byte_end":138082,"line_start":44,"line_end":44,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10492},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138088,"byte_end":138098,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10548},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138100,"byte_end":138109,"line_start":45,"line_end":45,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10287},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138111,"byte_end":138120,"line_start":45,"line_end":45,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10364},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138122,"byte_end":138134,"line_start":45,"line_end":45,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10438},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138136,"byte_end":138146,"line_start":45,"line_end":45,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10593},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138148,"byte_end":138155,"line_start":45,"line_end":45,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10221},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138157,"byte_end":138167,"line_start":45,"line_end":45,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10213},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138169,"byte_end":138176,"line_start":45,"line_end":45,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10737},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138182,"byte_end":138194,"line_start":46,"line_end":46,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2568},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138196,"byte_end":138208,"line_start":46,"line_end":46,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10672},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138210,"byte_end":138219,"line_start":46,"line_end":46,"column_start":33,"column_end":42},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10897},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138298,"byte_end":138311,"line_start":51,"line_end":51,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":13179},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138446,"byte_end":138464,"line_start":55,"line_end":55,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":13111},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138466,"byte_end":138486,"line_start":55,"line_end":55,"column_start":48,"column_end":68},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2650},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138543,"byte_end":138547,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10916},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138549,"byte_end":138553,"line_start":60,"line_end":60,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2668},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138592,"byte_end":138598,"line_start":63,"line_end":63,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10922},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138600,"byte_end":138606,"line_start":63,"line_end":63,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2692},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138643,"byte_end":138648,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10928},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138650,"byte_end":138655,"line_start":66,"line_end":66,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2719},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138690,"byte_end":138694,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10934},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138696,"byte_end":138700,"line_start":69,"line_end":69,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2743},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138741,"byte_end":138748,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10976},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138750,"byte_end":138757,"line_start":72,"line_end":72,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2773},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138798,"byte_end":138805,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2765},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138807,"byte_end":138813,"line_start":75,"line_end":75,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2798},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138852,"byte_end":138858,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":10982},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138860,"byte_end":138866,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":2834},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138905,"byte_end":138911,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":11043},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138913,"byte_end":138919,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":11143},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139068,"byte_end":139082,"line_start":87,"line_end":87,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":11491},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8567789,"byte_end":8567793,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":11178}},{"kind":"Use","ref_id":{"krate":0,"index":11471},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8567795,"byte_end":8567802,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":11178}},{"kind":"Use","ref_id":{"krate":0,"index":11461},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8567804,"byte_end":8567814,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":11178}},{"kind":"Use","ref_id":{"krate":0,"index":11480},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8567816,"byte_end":8567826,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":11178}},{"kind":"Use","ref_id":{"krate":0,"index":11345},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139232,"byte_end":139248,"line_start":93,"line_end":93,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":11448},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139362,"byte_end":139372,"line_start":98,"line_end":98,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":11426},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139374,"byte_end":139383,"line_start":98,"line_end":98,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1003}},{"kind":"Use","ref_id":{"krate":0,"index":1948},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11850,"byte_end":11859,"line_start":308,"line_end":308,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2568},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11861,"byte_end":11873,"line_start":308,"line_end":308,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":9},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339705,"byte_end":339709,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11500},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339744,"byte_end":339749,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":2903},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339785,"byte_end":339790,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11511},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339792,"byte_end":339797,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11517},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339835,"byte_end":339841,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11574},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339876,"byte_end":339881,"line_start":30,"line_end":30,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11585},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339922,"byte_end":339933,"line_start":33,"line_end":33,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11658},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339972,"byte_end":339982,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11723},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340015,"byte_end":340019,"line_start":39,"line_end":39,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":3076},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340060,"byte_end":340067,"line_start":42,"line_end":42,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11734},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340100,"byte_end":340104,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11830},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340155,"byte_end":340166,"line_start":48,"line_end":48,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":11929},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340255,"byte_end":340261,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":2862}},{"kind":"Use","ref_id":{"krate":0,"index":3252},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11977,"byte_end":11984,"line_start":313,"line_end":313,"column_start":37,"column_end":44},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":260},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375120,"byte_end":375127,"line_start":5,"line_end":5,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":274},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375186,"byte_end":375191,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":305},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375251,"byte_end":375260,"line_start":11,"line_end":11,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":310},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375262,"byte_end":375270,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":15,"index":142},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375318,"byte_end":375329,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":0,"index":3301},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375367,"byte_end":375375,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":0,"index":3304},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375377,"byte_end":375390,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":2,"index":8146},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375423,"byte_end":375430,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":2,"index":31865},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375432,"byte_end":375436,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":2,"index":8156},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375438,"byte_end":375443,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":2,"index":31905},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375445,"byte_end":375453,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":2,"index":31914},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375455,"byte_end":375469,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":10},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375501,"byte_end":375506,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375508,"byte_end":375518,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375520,"byte_end":375530,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":111},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375536,"byte_end":375545,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375547,"byte_end":375561,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":132},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375563,"byte_end":375578,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":237},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375606,"byte_end":375616,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":17,"index":238},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375664,"byte_end":375678,"line_start":28,"line_end":28,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":3286}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382640,"byte_end":382649,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382651,"byte_end":382661,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382663,"byte_end":382672,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":23,"index":27},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382674,"byte_end":382686,"line_start":17,"line_end":17,"column_start":39,"column_end":51},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":1,"index":2481},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382688,"byte_end":382693,"line_start":17,"line_end":17,"column_start":53,"column_end":58},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":1,"index":6536},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382695,"byte_end":382704,"line_start":17,"line_end":17,"column_start":60,"column_end":69},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":1,"index":2894},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382710,"byte_end":382717,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":1,"index":2875},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382719,"byte_end":382729,"line_start":18,"line_end":18,"column_start":14,"column_end":24},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":1,"index":2479},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382731,"byte_end":382737,"line_start":18,"line_end":18,"column_start":26,"column_end":32},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":1,"index":6604},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382739,"byte_end":382747,"line_start":18,"line_end":18,"column_start":34,"column_end":42},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":11998},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383417,"byte_end":383427,"line_start":42,"line_end":42,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12035},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383472,"byte_end":383481,"line_start":45,"line_end":45,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12092},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383526,"byte_end":383535,"line_start":48,"line_end":48,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12145},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383570,"byte_end":383575,"line_start":51,"line_end":51,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12205},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383610,"byte_end":383615,"line_start":54,"line_end":54,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3561},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383649,"byte_end":383653,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12213},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383655,"byte_end":383659,"line_start":57,"line_end":57,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3585},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383702,"byte_end":383710,"line_start":60,"line_end":60,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12277},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383712,"byte_end":383719,"line_start":60,"line_end":60,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12348},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383757,"byte_end":383763,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3646},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383799,"byte_end":383804,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3644},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383806,"byte_end":383811,"line_start":66,"line_end":66,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12376},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383847,"byte_end":383852,"line_start":69,"line_end":69,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12391},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383945,"byte_end":383953,"line_start":74,"line_end":74,"column_start":26,"column_end":34},"alias_span":null,"name":"IntoSink","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12447},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":383988,"byte_end":383993,"line_start":77,"line_end":77,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12498},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384026,"byte_end":384030,"line_start":80,"line_end":80,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12507},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384081,"byte_end":384093,"line_start":83,"line_end":83,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12516},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384138,"byte_end":384147,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12525},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384190,"byte_end":384198,"line_start":89,"line_end":89,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12536},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384245,"byte_end":384254,"line_start":92,"line_end":92,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12546},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384307,"byte_end":384319,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12557},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384364,"byte_end":384373,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3894},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384411,"byte_end":384417,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3892},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384419,"byte_end":384425,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12568},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384459,"byte_end":384463,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3936},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384497,"byte_end":384501,"line_start":107,"line_end":107,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3934},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384503,"byte_end":384507,"line_start":107,"line_end":107,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12577},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384544,"byte_end":384552,"line_start":110,"line_end":110,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12583},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384554,"byte_end":384563,"line_start":110,"line_end":110,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":3991},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384565,"byte_end":384577,"line_start":110,"line_end":110,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12589},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384611,"byte_end":384615,"line_start":113,"line_end":113,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12640},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384652,"byte_end":384658,"line_start":116,"line_end":116,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12647},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384693,"byte_end":384698,"line_start":119,"line_end":119,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12656},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384751,"byte_end":384764,"line_start":122,"line_end":122,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":12665},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384807,"byte_end":384815,"line_start":125,"line_end":125,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":3327}},{"kind":"Use","ref_id":{"krate":0,"index":4114},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12203,"byte_end":12215,"line_start":327,"line_end":327,"column_start":36,"column_end":48},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4131},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12217,"byte_end":12230,"line_start":327,"line_end":327,"column_start":50,"column_end":63},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4144},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12232,"byte_end":12244,"line_start":327,"line_end":327,"column_start":65,"column_end":77},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4148},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12246,"byte_end":12261,"line_start":327,"line_end":327,"column_start":79,"column_end":94},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12932},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8633777,"byte_end":8633793,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":12831}},{"kind":"Use","ref_id":{"krate":0,"index":12853},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8633795,"byte_end":8633800,"line_start":9,"line_end":9,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":12831}},{"kind":"Use","ref_id":{"krate":0,"index":12890},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8633802,"byte_end":8633817,"line_start":9,"line_end":9,"column_start":48,"column_end":63},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":12831}},{"kind":"Use","ref_id":{"krate":0,"index":12909},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8633819,"byte_end":8633829,"line_start":9,"line_end":9,"column_start":65,"column_end":75},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":12831}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":12350,"line_start":1,"line_end":335,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":2859},{"krate":0,"index":2862},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3325},{"krate":0,"index":3327},{"krate":0,"index":4156},{"krate":0,"index":4161},{"krate":0,"index":12831}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":483,"byte_end":504,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":737,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":29},{"krate":0,"index":290},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":447},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":641},{"krate":0,"index":646},{"krate":0,"index":679},{"krate":0,"index":688},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":811},{"krate":0,"index":820},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":996},{"krate":0,"index":7403},{"krate":0,"index":7432},{"krate":0,"index":997}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12352,"byte_end":12363,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12364,"byte_end":12367,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12368,"byte_end":12442,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12443,"byte_end":12521,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12522,"byte_end":12552,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4372},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35003,"byte_end":35008,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":4369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4374},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35027,"byte_end":35033,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":4369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4376},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35052,"byte_end":35057,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":4369},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4369},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34977,"byte_end":34984,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"Flatten::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":4372},{"krate":0,"index":4374},{"krate":0,"index":4376}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34936,"byte_end":34950,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4412},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34977,"byte_end":34984,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4446},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39568,"byte_end":39572,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39489,"byte_end":39556,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39457,"byte_end":39471,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4467},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39568,"byte_end":39572,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":4470},{"krate":0,"index":4471}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41354,"byte_end":41364,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn () -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39732,"byte_end":39800,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39805,"byte_end":39808,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39813,"byte_end":39881,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39886,"byte_end":39931,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39936,"byte_end":39939,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39944,"byte_end":39958,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39963,"byte_end":39966,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39971,"byte_end":39978,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39983,"byte_end":40024,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40029,"byte_end":40060,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40065,"byte_end":40121,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40126,"byte_end":40150,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40155,"byte_end":40190,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40195,"byte_end":40220,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40225,"byte_end":40228,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40233,"byte_end":40282,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40287,"byte_end":40290,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40295,"byte_end":40337,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40342,"byte_end":40381,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40386,"byte_end":40425,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40430,"byte_end":40447,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40452,"byte_end":40455,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::termianted()` to create an already-terminated future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40460,"byte_end":40530,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40535,"byte_end":40574,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40579,"byte_end":40620,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40625,"byte_end":40651,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40656,"byte_end":40659,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40664,"byte_end":40674,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40679,"byte_end":40696,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40701,"byte_end":40735,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40740,"byte_end":40787,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40792,"byte_end":40841,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40846,"byte_end":40908,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40913,"byte_end":40937,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40942,"byte_end":40985,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40990,"byte_end":41047,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41052,"byte_end":41127,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41132,"byte_end":41162,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41167,"byte_end":41184,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41189,"byte_end":41203,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41208,"byte_end":41292,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41297,"byte_end":41306,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41311,"byte_end":41316,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41321,"byte_end":41330,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41335,"byte_end":41342,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":4493},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42317,"byte_end":42327,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":4490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4495},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42391,"byte_end":42399,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":4490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4490},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42299,"byte_end":42302,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"Map::{Incomplete, Complete}","parent":null,"children":[{"krate":0,"index":4493},{"krate":0,"index":4495}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42222,"byte_end":42289,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42190,"byte_end":42204,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4524},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42299,"byte_end":42302,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":4528},{"krate":0,"index":4529}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4554},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4556}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4572},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":4575},{"krate":0,"index":4576}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4607},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4609}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4625},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4628},{"krate":0,"index":4629}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4670},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4673}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4692},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":4696},{"krate":0,"index":4697}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4737},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4739}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4755},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":4758},{"krate":0,"index":4759}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4792},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":4795}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4814},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":4818},{"krate":0,"index":4819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4861},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4865}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4887},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":4892},{"krate":0,"index":4893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4943},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4946}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4965},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5010},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":5012}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5028},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":5031},{"krate":0,"index":5032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5063},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":5065}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5081},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":5084},{"krate":0,"index":5085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5114},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45015,"byte_end":45026,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":44936,"byte_end":45003,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":44904,"byte_end":44918,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5135},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45015,"byte_end":45026,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::future::future::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":5138},{"krate":0,"index":5139}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":45996,"byte_end":46002,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":45853,"byte_end":45916,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":45917,"byte_end":45984,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48114,"byte_end":48118,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"fn (&self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47845,"byte_end":47919,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47924,"byte_end":47997,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48002,"byte_end":48070,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48075,"byte_end":48102,"line_start":99,"line_end":99,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18777,"byte_end":18786,"line_start":119,"line_end":119,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18678,"byte_end":18752,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18753,"byte_end":18766,"line_start":118,"line_end":118,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19618,"byte_end":19621,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn <U, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18801,"byte_end":18876,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18881,"byte_end":18904,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18909,"byte_end":18912,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18917,"byte_end":18991,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18996,"byte_end":19067,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19072,"byte_end":19134,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19139,"byte_end":19142,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19147,"byte_end":19218,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19223,"byte_end":19294,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19299,"byte_end":19320,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19325,"byte_end":19328,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19333,"byte_end":19347,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19352,"byte_end":19355,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19360,"byte_end":19367,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19372,"byte_end":19413,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19418,"byte_end":19453,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19458,"byte_end":19461,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19466,"byte_end":19495,"line_start":137,"line_end":137,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19500,"byte_end":19543,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19548,"byte_end":19584,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19589,"byte_end":19598,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19603,"byte_end":19610,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20018,"byte_end":20026,"line_start":155,"line_end":155,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn <U> (self) -> MapInto<Self, U>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19791,"byte_end":19866,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19871,"byte_end":19894,"line_start":151,"line_end":151,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19899,"byte_end":19902,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19907,"byte_end":19985,"line_start":153,"line_end":153,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19990,"byte_end":20010,"line_start":154,"line_end":154,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21038,"byte_end":21042,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20185,"byte_end":20261,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20266,"byte_end":20309,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20314,"byte_end":20317,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20322,"byte_end":20393,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20398,"byte_end":20472,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20477,"byte_end":20493,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20498,"byte_end":20501,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20506,"byte_end":20581,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20586,"byte_end":20597,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20602,"byte_end":20605,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20610,"byte_end":20681,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20686,"byte_end":20712,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20717,"byte_end":20720,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20725,"byte_end":20739,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20744,"byte_end":20747,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20752,"byte_end":20759,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20764,"byte_end":20805,"line_start":179,"line_end":179,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20810,"byte_end":20845,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20850,"byte_end":20853,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20858,"byte_end":20892,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20897,"byte_end":20962,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20967,"byte_end":21004,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21009,"byte_end":21018,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21023,"byte_end":21030,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21912,"byte_end":21923,"line_start":218,"line_end":218,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21254,"byte_end":21329,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21334,"byte_end":21355,"line_start":197,"line_end":197,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21360,"byte_end":21363,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21368,"byte_end":21448,"line_start":199,"line_end":199,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21453,"byte_end":21525,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21530,"byte_end":21533,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21538,"byte_end":21552,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21557,"byte_end":21560,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21565,"byte_end":21572,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21577,"byte_end":21618,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21623,"byte_end":21658,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21663,"byte_end":21666,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21671,"byte_end":21685,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21690,"byte_end":21718,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21723,"byte_end":21759,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21764,"byte_end":21776,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21781,"byte_end":21819,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21824,"byte_end":21830,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21835,"byte_end":21838,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21843,"byte_end":21878,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21883,"byte_end":21892,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21897,"byte_end":21904,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22728,"byte_end":22740,"line_start":248,"line_end":248,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn <A> (self) -> Either<A, Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22069,"byte_end":22145,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22150,"byte_end":22171,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22176,"byte_end":22179,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22184,"byte_end":22263,"line_start":229,"line_end":229,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22268,"byte_end":22340,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22345,"byte_end":22348,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22353,"byte_end":22367,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22372,"byte_end":22375,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22380,"byte_end":22387,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22392,"byte_end":22433,"line_start":235,"line_end":235,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22438,"byte_end":22473,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22478,"byte_end":22481,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22486,"byte_end":22500,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22505,"byte_end":22533,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22538,"byte_end":22574,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22579,"byte_end":22591,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22596,"byte_end":22634,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22639,"byte_end":22645,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22650,"byte_end":22653,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22658,"byte_end":22694,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22699,"byte_end":22708,"line_start":246,"line_end":246,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22713,"byte_end":22720,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23485,"byte_end":23496,"line_start":274,"line_end":274,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22887,"byte_end":22940,"line_start":256,"line_end":256,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22945,"byte_end":22948,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22953,"byte_end":23027,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23032,"byte_end":23095,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23100,"byte_end":23103,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23108,"byte_end":23122,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23127,"byte_end":23130,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23135,"byte_end":23142,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23147,"byte_end":23188,"line_start":264,"line_end":264,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23193,"byte_end":23228,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23233,"byte_end":23268,"line_start":266,"line_end":266,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23273,"byte_end":23276,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23281,"byte_end":23311,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23316,"byte_end":23354,"line_start":269,"line_end":269,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23359,"byte_end":23410,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23415,"byte_end":23451,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23456,"byte_end":23465,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23470,"byte_end":23477,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24327,"byte_end":24334,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23601,"byte_end":23665,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23670,"byte_end":23706,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23711,"byte_end":23714,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23719,"byte_end":23788,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23793,"byte_end":23830,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23835,"byte_end":23838,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23843,"byte_end":23903,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23908,"byte_end":23911,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23916,"byte_end":23987,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23992,"byte_end":24018,"line_start":290,"line_end":290,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24023,"byte_end":24026,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24031,"byte_end":24045,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24050,"byte_end":24053,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24058,"byte_end":24065,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24070,"byte_end":24111,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24116,"byte_end":24151,"line_start":296,"line_end":296,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24156,"byte_end":24159,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24164,"byte_end":24210,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24215,"byte_end":24256,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24261,"byte_end":24293,"line_start":300,"line_end":300,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24298,"byte_end":24307,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24312,"byte_end":24319,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25439,"byte_end":25453,"line_start":337,"line_end":337,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn (self) -> FlattenStream<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24548,"byte_end":24623,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24628,"byte_end":24651,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24656,"byte_end":24659,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24664,"byte_end":24736,"line_start":315,"line_end":315,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24741,"byte_end":24814,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24819,"byte_end":24833,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24838,"byte_end":24841,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24846,"byte_end":24916,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24921,"byte_end":24939,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24944,"byte_end":24947,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24952,"byte_end":24966,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24971,"byte_end":24974,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24979,"byte_end":24986,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24991,"byte_end":25032,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25037,"byte_end":25072,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25077,"byte_end":25120,"line_start":327,"line_end":327,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25125,"byte_end":25128,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25133,"byte_end":25173,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25178,"byte_end":25244,"line_start":330,"line_end":330,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25249,"byte_end":25252,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25257,"byte_end":25310,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25315,"byte_end":25361,"line_start":333,"line_end":333,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25366,"byte_end":25405,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25410,"byte_end":25419,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25424,"byte_end":25431,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26489,"byte_end":26493,"line_start":361,"line_end":361,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25594,"byte_end":25667,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25672,"byte_end":25738,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25743,"byte_end":25761,"line_start":347,"line_end":347,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25766,"byte_end":25769,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25774,"byte_end":25841,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25846,"byte_end":25911,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25916,"byte_end":25988,"line_start":351,"line_end":351,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25993,"byte_end":26067,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26072,"byte_end":26098,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26103,"byte_end":26106,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26111,"byte_end":26182,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26187,"byte_end":26262,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26267,"byte_end":26321,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26326,"byte_end":26329,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26334,"byte_end":26408,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26413,"byte_end":26481,"line_start":360,"line_end":360,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27333,"byte_end":27340,"line_start":387,"line_end":387,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26639,"byte_end":26705,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26710,"byte_end":26713,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26718,"byte_end":26793,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26798,"byte_end":26871,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26876,"byte_end":26945,"line_start":373,"line_end":373,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26950,"byte_end":27000,"line_start":374,"line_end":374,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27005,"byte_end":27008,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27013,"byte_end":27027,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27032,"byte_end":27035,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27040,"byte_end":27047,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27052,"byte_end":27093,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27098,"byte_end":27133,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27138,"byte_end":27141,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27146,"byte_end":27175,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27180,"byte_end":27258,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27263,"byte_end":27299,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27304,"byte_end":27313,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27318,"byte_end":27325,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28878,"byte_end":28890,"line_start":427,"line_end":427,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27522,"byte_end":27576,"line_start":395,"line_end":395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27581,"byte_end":27584,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27589,"byte_end":27664,"line_start":397,"line_end":397,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27669,"byte_end":27743,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27748,"byte_end":27822,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27827,"byte_end":27878,"line_start":400,"line_end":400,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27883,"byte_end":27886,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27891,"byte_end":27966,"line_start":402,"line_end":402,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27971,"byte_end":28041,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28046,"byte_end":28113,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28118,"byte_end":28193,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28198,"byte_end":28270,"line_start":406,"line_end":406,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28275,"byte_end":28278,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28283,"byte_end":28347,"line_start":408,"line_end":408,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28352,"byte_end":28409,"line_start":409,"line_end":409,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28414,"byte_end":28417,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28422,"byte_end":28436,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28441,"byte_end":28444,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28449,"byte_end":28456,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28461,"byte_end":28502,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28507,"byte_end":28557,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28562,"byte_end":28565,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28570,"byte_end":28604,"line_start":417,"line_end":417,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28609,"byte_end":28658,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28663,"byte_end":28666,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28671,"byte_end":28720,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28725,"byte_end":28749,"line_start":421,"line_end":421,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28754,"byte_end":28761,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28766,"byte_end":28816,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28821,"byte_end":28830,"line_start":424,"line_end":424,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28835,"byte_end":28842,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28847,"byte_end":28870,"line_start":426,"line_end":426,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30546,"byte_end":30552,"line_start":480,"line_end":480,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"fn (self) -> Shared<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29024,"byte_end":29099,"line_start":434,"line_end":434,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29104,"byte_end":29127,"line_start":435,"line_end":435,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29132,"byte_end":29135,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29140,"byte_end":29214,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29219,"byte_end":29292,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29297,"byte_end":29309,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29314,"byte_end":29317,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29322,"byte_end":29386,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29391,"byte_end":29448,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29453,"byte_end":29456,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29461,"byte_end":29475,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29480,"byte_end":29483,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29488,"byte_end":29495,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29500,"byte_end":29541,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29546,"byte_end":29581,"line_start":448,"line_end":448,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29586,"byte_end":29589,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29594,"byte_end":29623,"line_start":450,"line_end":450,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29628,"byte_end":29662,"line_start":451,"line_end":451,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29667,"byte_end":29701,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29706,"byte_end":29709,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29714,"byte_end":29747,"line_start":454,"line_end":454,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29752,"byte_end":29785,"line_start":455,"line_end":455,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29790,"byte_end":29799,"line_start":456,"line_end":456,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29804,"byte_end":29811,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29816,"byte_end":29819,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29824,"byte_end":29831,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29836,"byte_end":29905,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29910,"byte_end":29985,"line_start":461,"line_end":461,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29990,"byte_end":30021,"line_start":462,"line_end":462,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30026,"byte_end":30029,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30034,"byte_end":30075,"line_start":464,"line_end":464,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30080,"byte_end":30115,"line_start":465,"line_end":465,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30120,"byte_end":30156,"line_start":466,"line_end":466,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30161,"byte_end":30181,"line_start":467,"line_end":467,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30186,"byte_end":30189,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30194,"byte_end":30223,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30228,"byte_end":30262,"line_start":470,"line_end":470,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30267,"byte_end":30301,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30306,"byte_end":30351,"line_start":472,"line_end":472,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30356,"byte_end":30397,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30402,"byte_end":30409,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30414,"byte_end":30447,"line_start":475,"line_end":475,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30452,"byte_end":30484,"line_start":476,"line_end":476,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30489,"byte_end":30498,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30503,"byte_end":30510,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30515,"byte_end":30538,"line_start":479,"line_end":479,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31550,"byte_end":31555,"line_start":510,"line_end":510,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn <'a> (self) -> BoxFuture<'a, Self::Output>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31321,"byte_end":31362,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31367,"byte_end":31370,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31375,"byte_end":31450,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31455,"byte_end":31512,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31517,"byte_end":31542,"line_start":509,"line_end":509,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31981,"byte_end":31992,"line_start":524,"line_end":524,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn <'a> (self) -> LocalBoxFuture<'a, Self::Output>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31680,"byte_end":31721,"line_start":517,"line_end":517,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31726,"byte_end":31729,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31734,"byte_end":31793,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31798,"byte_end":31801,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31806,"byte_end":31881,"line_start":521,"line_end":521,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31886,"byte_end":31943,"line_start":522,"line_end":522,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31948,"byte_end":31973,"line_start":523,"line_end":523,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32248,"byte_end":32258,"line_start":533,"line_end":533,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn (self) -> UnitError<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32115,"byte_end":32164,"line_start":531,"line_end":531,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32169,"byte_end":32240,"line_start":532,"line_end":532,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32497,"byte_end":32508,"line_start":542,"line_end":542,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn (self) -> NeverError<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32361,"byte_end":32410,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32415,"byte_end":32489,"line_start":541,"line_end":541,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32690,"byte_end":32700,"line_start":550,"line_end":550,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Self::Output>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32613,"byte_end":32682,"line_start":549,"line_end":549,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":34096,"byte_end":34108,"line_start":588,"line_end":588,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn (mut self) -> Option<Self::Output>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32836,"byte_end":32908,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32913,"byte_end":32976,"line_start":558,"line_end":558,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32981,"byte_end":32984,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32989,"byte_end":33055,"line_start":560,"line_end":560,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33060,"byte_end":33063,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33068,"byte_end":33141,"line_start":562,"line_end":562,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33146,"byte_end":33215,"line_start":563,"line_end":563,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33220,"byte_end":33290,"line_start":564,"line_end":564,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33295,"byte_end":33298,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33303,"byte_end":33317,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33322,"byte_end":33325,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33330,"byte_end":33337,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33342,"byte_end":33372,"line_start":569,"line_end":569,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33377,"byte_end":33427,"line_start":570,"line_end":570,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33432,"byte_end":33471,"line_start":571,"line_end":571,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33476,"byte_end":33527,"line_start":572,"line_end":572,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33532,"byte_end":33535,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33540,"byte_end":33600,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33605,"byte_end":33657,"line_start":575,"line_end":575,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33662,"byte_end":33669,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33674,"byte_end":33677,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33682,"byte_end":33751,"line_start":578,"line_end":578,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33756,"byte_end":33829,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33834,"byte_end":33866,"line_start":580,"line_end":580,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33871,"byte_end":33874,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33879,"byte_end":33886,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33891,"byte_end":33938,"line_start":583,"line_end":583,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33943,"byte_end":33982,"line_start":584,"line_end":584,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33987,"byte_end":33990,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33995,"byte_end":34076,"line_start":586,"line_end":586,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":34081,"byte_end":34088,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5158},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76210,"byte_end":76220,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76131,"byte_end":76198,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76099,"byte_end":76113,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5179},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76210,"byte_end":76220,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":5182},{"krate":0,"index":5183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5205},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77113,"byte_end":77118,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":5202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5207},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77137,"byte_end":77143,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":5202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5209},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77162,"byte_end":77167,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":5202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5202},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77084,"byte_end":77094,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"TryFlatten::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":5205},{"krate":0,"index":5207},{"krate":0,"index":5209}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77043,"byte_end":77057,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5245},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77084,"byte_end":77094,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5251}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5282},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82394,"byte_end":82399,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":5279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5284},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82418,"byte_end":82424,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":5279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5286},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82443,"byte_end":82448,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":5279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5279},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82362,"byte_end":82375,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"TryFlattenErr::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":5282},{"krate":0,"index":5284},{"krate":0,"index":5286}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82321,"byte_end":82335,"line_start":6,"line_end":6,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5322},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82362,"byte_end":82375,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":5328}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5354},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5357}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5376},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5380},{"krate":0,"index":5381}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5422},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5425}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5444},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5448},{"krate":0,"index":5449}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5489},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5491}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5507},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5510},{"krate":0,"index":5511}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5552},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":5555}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5574},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlattenSink","qualname":"::future::try_future::_::__FlattenSink","value":"__FlattenSink {  }","parent":null,"children":[{"krate":0,"index":5578},{"krate":0,"index":5579}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5631},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5635}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5657},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":5662},{"krate":0,"index":5663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5714},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5718}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5740},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":5745},{"krate":0,"index":5746}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5796},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5799}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5818},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":5822},{"krate":0,"index":5823}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5864},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5867}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5886},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5932},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5935}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5954},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":5958},{"krate":0,"index":5959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6000},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":6003}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6022},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6068},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":6071}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6090},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":6094},{"krate":0,"index":6095}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6136},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":6139}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6158},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":6162},{"krate":0,"index":6163}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6205},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":6209}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6231},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":6236},{"krate":0,"index":6237}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6287},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":6290}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6309},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":6313},{"krate":0,"index":6314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":414},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59291,"byte_end":59303,"line_start":136,"line_end":136,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":446}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59227,"byte_end":59280,"line_start":135,"line_end":135,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60403,"byte_end":60415,"line_start":169,"line_end":169,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"fn <Item> (self) -> FlattenSink<Self, Self::Ok>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59321,"byte_end":59397,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59402,"byte_end":59427,"line_start":138,"line_end":138,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59432,"byte_end":59435,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59440,"byte_end":59510,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59515,"byte_end":59588,"line_start":141,"line_end":141,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59593,"byte_end":59607,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59612,"byte_end":59615,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59620,"byte_end":59690,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59695,"byte_end":59713,"line_start":145,"line_end":145,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59718,"byte_end":59721,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59726,"byte_end":59740,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59745,"byte_end":59748,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59753,"byte_end":59760,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59765,"byte_end":59813,"line_start":150,"line_end":150,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59818,"byte_end":59846,"line_start":151,"line_end":151,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59851,"byte_end":59903,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59908,"byte_end":59927,"line_start":153,"line_end":153,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59932,"byte_end":59957,"line_start":154,"line_end":154,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59962,"byte_end":59965,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59970,"byte_end":60026,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60031,"byte_end":60063,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60068,"byte_end":60078,"line_start":158,"line_end":158,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60083,"byte_end":60100,"line_start":159,"line_end":159,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60105,"byte_end":60152,"line_start":160,"line_end":160,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60157,"byte_end":60193,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60198,"byte_end":60205,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60210,"byte_end":60271,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60276,"byte_end":60279,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60284,"byte_end":60316,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60321,"byte_end":60354,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60359,"byte_end":60366,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60371,"byte_end":60395,"line_start":168,"line_end":168,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61961,"byte_end":61967,"line_start":215,"line_end":215,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60589,"byte_end":60647,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60652,"byte_end":60655,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60660,"byte_end":60735,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60740,"byte_end":60810,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60815,"byte_end":60888,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60893,"byte_end":60922,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60927,"byte_end":60930,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60935,"byte_end":61010,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61015,"byte_end":61090,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61095,"byte_end":61142,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61147,"byte_end":61150,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61155,"byte_end":61230,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61235,"byte_end":61261,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61266,"byte_end":61269,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61274,"byte_end":61288,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61293,"byte_end":61296,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61301,"byte_end":61308,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61313,"byte_end":61351,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61356,"byte_end":61359,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61364,"byte_end":61405,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61410,"byte_end":61455,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61460,"byte_end":61502,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61507,"byte_end":61543,"line_start":199,"line_end":199,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61548,"byte_end":61557,"line_start":200,"line_end":200,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61562,"byte_end":61569,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61574,"byte_end":61577,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61582,"byte_end":61654,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61659,"byte_end":61670,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61675,"byte_end":61678,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61683,"byte_end":61690,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61695,"byte_end":61733,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61738,"byte_end":61741,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61746,"byte_end":61787,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61792,"byte_end":61838,"line_start":210,"line_end":210,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61843,"byte_end":61885,"line_start":211,"line_end":211,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61890,"byte_end":61927,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61932,"byte_end":61941,"line_start":213,"line_end":213,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61946,"byte_end":61953,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63529,"byte_end":63543,"line_start":255,"line_end":255,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn <T, E, F> (self, e: E, f: F) -> MapOkOrElse<Self, F, E>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62158,"byte_end":62275,"line_start":223,"line_end":223,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62280,"byte_end":62283,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62288,"byte_end":62410,"line_start":225,"line_end":225,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62415,"byte_end":62465,"line_start":226,"line_end":226,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62470,"byte_end":62473,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62478,"byte_end":62553,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62558,"byte_end":62633,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62638,"byte_end":62685,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/ ","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62690,"byte_end":62694,"line_start":231,"line_end":231,"column_start":5,"column_end":9}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62699,"byte_end":62774,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62779,"byte_end":62854,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62859,"byte_end":62906,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62911,"byte_end":62914,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62919,"byte_end":62994,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62999,"byte_end":63025,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63030,"byte_end":63033,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63038,"byte_end":63052,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63057,"byte_end":63060,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63065,"byte_end":63072,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63077,"byte_end":63115,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63120,"byte_end":63123,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63128,"byte_end":63169,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63174,"byte_end":63219,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63224,"byte_end":63285,"line_start":246,"line_end":246,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63290,"byte_end":63322,"line_start":247,"line_end":247,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63327,"byte_end":63331,"line_start":248,"line_end":248,"column_start":5,"column_end":9}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63336,"byte_end":63382,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63387,"byte_end":63448,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63453,"byte_end":63486,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63491,"byte_end":63500,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63505,"byte_end":63512,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ ","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63517,"byte_end":63521,"line_start":254,"line_end":254,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65226,"byte_end":65233,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63777,"byte_end":63833,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63838,"byte_end":63841,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63846,"byte_end":63920,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63925,"byte_end":63986,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63991,"byte_end":64061,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64066,"byte_end":64141,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64146,"byte_end":64181,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64186,"byte_end":64189,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64194,"byte_end":64269,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64274,"byte_end":64349,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64354,"byte_end":64401,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64406,"byte_end":64409,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64414,"byte_end":64489,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64494,"byte_end":64520,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64525,"byte_end":64528,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64533,"byte_end":64547,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64552,"byte_end":64555,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64560,"byte_end":64567,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64572,"byte_end":64610,"line_start":282,"line_end":282,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64615,"byte_end":64618,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64623,"byte_end":64664,"line_start":284,"line_end":284,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64669,"byte_end":64715,"line_start":285,"line_end":285,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64720,"byte_end":64763,"line_start":286,"line_end":286,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64768,"byte_end":64805,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64810,"byte_end":64819,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64824,"byte_end":64831,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64836,"byte_end":64839,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64844,"byte_end":64917,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64922,"byte_end":64936,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64941,"byte_end":64944,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64949,"byte_end":64956,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64961,"byte_end":64999,"line_start":295,"line_end":295,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65004,"byte_end":65007,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65012,"byte_end":65053,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65058,"byte_end":65103,"line_start":298,"line_end":298,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65108,"byte_end":65151,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65156,"byte_end":65192,"line_start":300,"line_end":300,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65197,"byte_end":65206,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65211,"byte_end":65218,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66323,"byte_end":66331,"line_start":333,"line_end":333,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65426,"byte_end":65496,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65501,"byte_end":65550,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65555,"byte_end":65558,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65563,"byte_end":65626,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65631,"byte_end":65699,"line_start":315,"line_end":315,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65704,"byte_end":65777,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65782,"byte_end":65858,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65863,"byte_end":65908,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65913,"byte_end":65916,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65921,"byte_end":65996,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66001,"byte_end":66027,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66032,"byte_end":66035,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66040,"byte_end":66054,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66059,"byte_end":66062,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66067,"byte_end":66074,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66079,"byte_end":66117,"line_start":326,"line_end":326,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66122,"byte_end":66125,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66130,"byte_end":66171,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66176,"byte_end":66227,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66232,"byte_end":66289,"line_start":330,"line_end":330,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66294,"byte_end":66303,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66308,"byte_end":66315,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66627,"byte_end":66634,"line_start":343,"line_end":343,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn <U> (self) -> OkInto<Self, U>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66507,"byte_end":66565,"line_start":341,"line_end":341,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66570,"byte_end":66619,"line_start":342,"line_end":342,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68189,"byte_end":68197,"line_start":387,"line_end":387,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66808,"byte_end":66877,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66882,"byte_end":66956,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66961,"byte_end":66964,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66969,"byte_end":67044,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67049,"byte_end":67119,"line_start":355,"line_end":355,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67124,"byte_end":67189,"line_start":356,"line_end":356,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67194,"byte_end":67260,"line_start":357,"line_end":357,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67265,"byte_end":67299,"line_start":358,"line_end":358,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67304,"byte_end":67307,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67312,"byte_end":67387,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67392,"byte_end":67418,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67423,"byte_end":67426,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67431,"byte_end":67445,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67450,"byte_end":67453,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67458,"byte_end":67465,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67470,"byte_end":67508,"line_start":366,"line_end":366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67513,"byte_end":67516,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67521,"byte_end":67562,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67567,"byte_end":67612,"line_start":369,"line_end":369,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67617,"byte_end":67692,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67697,"byte_end":67733,"line_start":371,"line_end":371,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67738,"byte_end":67747,"line_start":372,"line_end":372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67752,"byte_end":67759,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67764,"byte_end":67767,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67772,"byte_end":67848,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67853,"byte_end":67864,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67869,"byte_end":67872,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67877,"byte_end":67884,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67889,"byte_end":67927,"line_start":379,"line_end":379,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67932,"byte_end":67935,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67940,"byte_end":67981,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67986,"byte_end":68032,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68037,"byte_end":68113,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68118,"byte_end":68155,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68160,"byte_end":68169,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68174,"byte_end":68181,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69818,"byte_end":69825,"line_start":432,"line_end":432,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68451,"byte_end":68516,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68521,"byte_end":68593,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68598,"byte_end":68601,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68606,"byte_end":68681,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68686,"byte_end":68756,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68761,"byte_end":68826,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68831,"byte_end":68907,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68912,"byte_end":68930,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68935,"byte_end":68938,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68943,"byte_end":69018,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69023,"byte_end":69049,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69054,"byte_end":69057,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69062,"byte_end":69076,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69081,"byte_end":69084,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69089,"byte_end":69096,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69101,"byte_end":69139,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69144,"byte_end":69147,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69152,"byte_end":69193,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69198,"byte_end":69244,"line_start":414,"line_end":414,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69249,"byte_end":69324,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69329,"byte_end":69366,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69371,"byte_end":69380,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69385,"byte_end":69392,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69397,"byte_end":69400,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69405,"byte_end":69478,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69483,"byte_end":69497,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69502,"byte_end":69505,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69510,"byte_end":69517,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69522,"byte_end":69560,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69565,"byte_end":69568,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69573,"byte_end":69614,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69619,"byte_end":69664,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69669,"byte_end":69743,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69748,"byte_end":69784,"line_start":429,"line_end":429,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69789,"byte_end":69798,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69803,"byte_end":69810,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70801,"byte_end":70811,"line_start":459,"line_end":459,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70074,"byte_end":70147,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70152,"byte_end":70155,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70160,"byte_end":70235,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70240,"byte_end":70313,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70318,"byte_end":70387,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70392,"byte_end":70445,"line_start":446,"line_end":446,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70450,"byte_end":70453,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70458,"byte_end":70472,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70477,"byte_end":70480,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70485,"byte_end":70492,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70497,"byte_end":70538,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70543,"byte_end":70581,"line_start":452,"line_end":452,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70586,"byte_end":70589,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70594,"byte_end":70636,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70641,"byte_end":70722,"line_start":455,"line_end":455,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70727,"byte_end":70767,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70772,"byte_end":70781,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70786,"byte_end":70793,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71737,"byte_end":71748,"line_start":485,"line_end":485,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71010,"byte_end":71081,"line_start":467,"line_end":467,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71086,"byte_end":71089,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71094,"byte_end":71169,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71174,"byte_end":71247,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71252,"byte_end":71321,"line_start":471,"line_end":471,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71326,"byte_end":71380,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71385,"byte_end":71388,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71393,"byte_end":71407,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71412,"byte_end":71415,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71420,"byte_end":71427,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71432,"byte_end":71473,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71478,"byte_end":71516,"line_start":478,"line_end":478,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71521,"byte_end":71524,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71529,"byte_end":71572,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71577,"byte_end":71657,"line_start":481,"line_end":481,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71662,"byte_end":71703,"line_start":482,"line_end":482,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71708,"byte_end":71717,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71722,"byte_end":71729,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72133,"byte_end":72144,"line_start":497,"line_end":497,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn (self) -> TryFlatten<Self, Self::Ok>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71952,"byte_end":72027,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72032,"byte_end":72061,"line_start":494,"line_end":494,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72066,"byte_end":72069,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72074,"byte_end":72125,"line_start":496,"line_end":496,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73253,"byte_end":73271,"line_start":530,"line_end":530,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn (self) -> TryFlattenStream<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72309,"byte_end":72384,"line_start":505,"line_end":505,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72389,"byte_end":72412,"line_start":506,"line_end":506,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72417,"byte_end":72420,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72425,"byte_end":72497,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72502,"byte_end":72575,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72580,"byte_end":72594,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72599,"byte_end":72602,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72607,"byte_end":72677,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72682,"byte_end":72700,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72705,"byte_end":72708,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72713,"byte_end":72727,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72732,"byte_end":72735,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72740,"byte_end":72747,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72752,"byte_end":72793,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72798,"byte_end":72836,"line_start":519,"line_end":519,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72841,"byte_end":72887,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72892,"byte_end":72895,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72900,"byte_end":72960,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72965,"byte_end":73044,"line_start":523,"line_end":523,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73049,"byte_end":73052,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73057,"byte_end":73114,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73119,"byte_end":73171,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73176,"byte_end":73219,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73224,"byte_end":73233,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73238,"byte_end":73245,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74268,"byte_end":74282,"line_start":560,"line_end":560,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn <F> (self, f: F) -> UnwrapOrElse<Self, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73438,"byte_end":73508,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73513,"byte_end":73550,"line_start":539,"line_end":539,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73555,"byte_end":73604,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73609,"byte_end":73612,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73617,"byte_end":73686,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73691,"byte_end":73764,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73769,"byte_end":73839,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73844,"byte_end":73862,"line_start":545,"line_end":545,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73867,"byte_end":73870,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73875,"byte_end":73943,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73948,"byte_end":73951,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73956,"byte_end":73970,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73975,"byte_end":73978,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73983,"byte_end":73990,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73995,"byte_end":74033,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74038,"byte_end":74041,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74046,"byte_end":74087,"line_start":554,"line_end":554,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74092,"byte_end":74144,"line_start":555,"line_end":555,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74149,"byte_end":74196,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74201,"byte_end":74234,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74239,"byte_end":74248,"line_start":558,"line_end":558,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74253,"byte_end":74260,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75482,"byte_end":75493,"line_start":599,"line_end":599,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn (self) -> IntoFuture<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74781,"byte_end":74834,"line_start":578,"line_end":578,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74839,"byte_end":74875,"line_start":579,"line_end":579,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74880,"byte_end":74883,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74888,"byte_end":74937,"line_start":581,"line_end":581,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74942,"byte_end":75009,"line_start":582,"line_end":582,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75014,"byte_end":75027,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75032,"byte_end":75035,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75040,"byte_end":75054,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75059,"byte_end":75062,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75067,"byte_end":75074,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75079,"byte_end":75138,"line_start":588,"line_end":588,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75143,"byte_end":75146,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75151,"byte_end":75170,"line_start":590,"line_end":590,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75175,"byte_end":75193,"line_start":591,"line_end":591,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75198,"byte_end":75270,"line_start":592,"line_end":592,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75275,"byte_end":75307,"line_start":593,"line_end":593,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75312,"byte_end":75319,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75324,"byte_end":75400,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75405,"byte_end":75408,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75413,"byte_end":75462,"line_start":597,"line_end":597,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75467,"byte_end":75474,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75701,"byte_end":75715,"line_start":608,"line_end":608,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75598,"byte_end":75671,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75676,"byte_end":75693,"line_start":607,"line_end":607,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6352},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84197,"byte_end":84201,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":6354}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84063,"byte_end":84100,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84118,"byte_end":84185,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":473},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84742,"byte_end":84746,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn <F, R> (f: F) -> Lazy<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84305,"byte_end":84373,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84374,"byte_end":84377,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84378,"byte_end":84441,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84442,"byte_end":84445,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84446,"byte_end":84460,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84461,"byte_end":84464,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84465,"byte_end":84472,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84473,"byte_end":84514,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84515,"byte_end":84539,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84540,"byte_end":84543,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84544,"byte_end":84576,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84577,"byte_end":84604,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84605,"byte_end":84608,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84609,"byte_end":84646,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84647,"byte_end":84671,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84672,"byte_end":84679,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84680,"byte_end":84716,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84717,"byte_end":84726,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84727,"byte_end":84734,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6358},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85512,"byte_end":85519,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":6360}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85373,"byte_end":85415,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85433,"byte_end":85500,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86038,"byte_end":86045,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85660,"byte_end":85740,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85741,"byte_end":85754,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85755,"byte_end":85758,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85759,"byte_end":85821,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85822,"byte_end":85825,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85826,"byte_end":85840,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85841,"byte_end":85844,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85845,"byte_end":85858,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85859,"byte_end":85900,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85901,"byte_end":85925,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85926,"byte_end":85929,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85930,"byte_end":85965,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85966,"byte_end":85992,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85993,"byte_end":86012,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86013,"byte_end":86022,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86023,"byte_end":86030,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6366},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86813,"byte_end":86819,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":6364},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86778,"byte_end":86808,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6368},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86880,"byte_end":86884,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":6364},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86837,"byte_end":86875,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6371},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87046,"byte_end":87050,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":6364},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86903,"byte_end":86969,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86974,"byte_end":87041,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":6364},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86749,"byte_end":86758,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":6366},{"krate":0,"index":6368},{"krate":0,"index":6371}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86708,"byte_end":86722,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6403},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86749,"byte_end":86758,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":6406},{"krate":0,"index":6407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":526},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87516,"byte_end":87526,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87055,"byte_end":87092,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87093,"byte_end":87096,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87097,"byte_end":87111,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87112,"byte_end":87115,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87116,"byte_end":87123,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87124,"byte_end":87165,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87166,"byte_end":87190,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87191,"byte_end":87216,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87217,"byte_end":87220,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87221,"byte_end":87270,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87271,"byte_end":87292,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87293,"byte_end":87345,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87346,"byte_end":87381,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87382,"byte_end":87437,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87438,"byte_end":87490,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87491,"byte_end":87500,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87501,"byte_end":87508,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6424},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87958,"byte_end":87968,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87937,"byte_end":87946,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":88282,"byte_end":88293,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":88162,"byte_end":88228,"line_start":60,"line_end":60,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":88233,"byte_end":88256,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":88261,"byte_end":88270,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6428},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90248,"byte_end":90254,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":6426},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90213,"byte_end":90243,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6430},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90315,"byte_end":90319,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":6426},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90272,"byte_end":90310,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6433},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90527,"byte_end":90531,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":6426},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90334,"byte_end":90403,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90408,"byte_end":90478,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90483,"byte_end":90522,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6426},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90178,"byte_end":90190,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"TryMaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":6428},{"krate":0,"index":6430},{"krate":0,"index":6433}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90137,"byte_end":90151,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6465},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90178,"byte_end":90190,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":6468},{"krate":0,"index":6469}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":553},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90584,"byte_end":90598,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn <Fut> (future: Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90536,"byte_end":90576,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6486},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91056,"byte_end":91066,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91035,"byte_end":91044,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91382,"byte_end":91393,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91259,"byte_end":91328,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91333,"byte_end":91356,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91361,"byte_end":91370,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6488},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93919,"byte_end":93931,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93840,"byte_end":93907,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93801,"byte_end":93815,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6509},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93919,"byte_end":93931,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":6512},{"krate":0,"index":6513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94901,"byte_end":94907,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":596}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94781,"byte_end":94821,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94822,"byte_end":94889,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":599},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95494,"byte_end":95501,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94958,"byte_end":95029,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95030,"byte_end":95033,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95034,"byte_end":95100,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95101,"byte_end":95104,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95105,"byte_end":95119,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95120,"byte_end":95123,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95124,"byte_end":95131,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95132,"byte_end":95173,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95174,"byte_end":95207,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95208,"byte_end":95247,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95248,"byte_end":95251,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95252,"byte_end":95309,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95310,"byte_end":95353,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95354,"byte_end":95359,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95360,"byte_end":95363,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95364,"byte_end":95405,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95406,"byte_end":95468,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95469,"byte_end":95478,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95479,"byte_end":95486,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6535},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96221,"byte_end":96226,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96070,"byte_end":96117,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96142,"byte_end":96209,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96349,"byte_end":96359,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn (mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96266,"byte_end":96323,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96328,"byte_end":96337,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":633},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97025,"byte_end":97030,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (t: T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96779,"byte_end":96839,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96840,"byte_end":96843,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96844,"byte_end":96858,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96859,"byte_end":96862,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96863,"byte_end":96870,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96871,"byte_end":96912,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96913,"byte_end":96937,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96938,"byte_end":96941,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96942,"byte_end":96971,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96972,"byte_end":96999,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97000,"byte_end":97009,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97010,"byte_end":97017,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":635},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97342,"byte_end":97344,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn <T, E> (t: T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97076,"byte_end":97143,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97144,"byte_end":97147,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97148,"byte_end":97162,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97163,"byte_end":97166,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97167,"byte_end":97174,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97175,"byte_end":97216,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97217,"byte_end":97241,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97242,"byte_end":97245,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97246,"byte_end":97284,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97285,"byte_end":97316,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97317,"byte_end":97326,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97327,"byte_end":97334,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":638},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97675,"byte_end":97678,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn <T, E> (err: E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97408,"byte_end":97474,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97475,"byte_end":97478,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97479,"byte_end":97493,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97494,"byte_end":97497,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97498,"byte_end":97505,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97506,"byte_end":97547,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97548,"byte_end":97572,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97573,"byte_end":97576,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97577,"byte_end":97616,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97617,"byte_end":97649,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97650,"byte_end":97659,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97660,"byte_end":97667,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6637},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":6640},{"krate":0,"index":6641}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6662},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":6666},{"krate":0,"index":6667},{"krate":0,"index":6668}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6689},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6721},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":6726},{"krate":0,"index":6727},{"krate":0,"index":6728},{"krate":0,"index":6729}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6755},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6760},{"krate":0,"index":6761},{"krate":0,"index":6762},{"krate":0,"index":6763}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6794},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":6800},{"krate":0,"index":6801},{"krate":0,"index":6802},{"krate":0,"index":6803},{"krate":0,"index":6804}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6835},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6841},{"krate":0,"index":6842},{"krate":0,"index":6843},{"krate":0,"index":6844},{"krate":0,"index":6845}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6881},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":6888},{"krate":0,"index":6889},{"krate":0,"index":6890},{"krate":0,"index":6891},{"krate":0,"index":6892},{"krate":0,"index":6893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":661},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100793,"byte_end":100797,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> Join<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100216,"byte_end":100287,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100288,"byte_end":100291,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100292,"byte_end":100363,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100364,"byte_end":100439,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100440,"byte_end":100443,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100444,"byte_end":100513,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100514,"byte_end":100540,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100541,"byte_end":100544,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100545,"byte_end":100559,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100560,"byte_end":100563,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100564,"byte_end":100571,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100572,"byte_end":100613,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100614,"byte_end":100638,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100639,"byte_end":100642,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100643,"byte_end":100667,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100668,"byte_end":100692,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100693,"byte_end":100727,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100728,"byte_end":100731,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100732,"byte_end":100767,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100768,"byte_end":100777,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100778,"byte_end":100785,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":664},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101343,"byte_end":101348,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> Join3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101004,"byte_end":101056,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101057,"byte_end":101060,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101061,"byte_end":101075,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101076,"byte_end":101079,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101080,"byte_end":101087,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101088,"byte_end":101129,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101130,"byte_end":101154,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101155,"byte_end":101158,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101159,"byte_end":101183,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101184,"byte_end":101208,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101209,"byte_end":101233,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101234,"byte_end":101273,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101274,"byte_end":101277,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101278,"byte_end":101317,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101318,"byte_end":101327,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101328,"byte_end":101335,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":668},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101931,"byte_end":101936,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> Join4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101561,"byte_end":101613,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101614,"byte_end":101617,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101618,"byte_end":101632,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101633,"byte_end":101636,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101637,"byte_end":101644,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101645,"byte_end":101686,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101687,"byte_end":101711,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101712,"byte_end":101715,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101716,"byte_end":101740,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101741,"byte_end":101765,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101766,"byte_end":101790,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101791,"byte_end":101815,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101816,"byte_end":101858,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101859,"byte_end":101862,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101863,"byte_end":101905,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101906,"byte_end":101915,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101916,"byte_end":101923,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":673},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102608,"byte_end":102613,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> Join5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102207,"byte_end":102259,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102260,"byte_end":102263,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102264,"byte_end":102278,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102279,"byte_end":102282,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102283,"byte_end":102290,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102291,"byte_end":102332,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102333,"byte_end":102357,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102358,"byte_end":102361,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102362,"byte_end":102386,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102387,"byte_end":102411,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102412,"byte_end":102436,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102437,"byte_end":102461,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102462,"byte_end":102486,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102487,"byte_end":102532,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102533,"byte_end":102536,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102537,"byte_end":102582,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102583,"byte_end":102592,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102593,"byte_end":102600,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103774,"byte_end":103781,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":706}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103653,"byte_end":103694,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103695,"byte_end":103762,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":710},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105323,"byte_end":105331,"line_start":80,"line_end":80,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn <I> (i: I) -> JoinAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104114,"byte_end":104194,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104195,"byte_end":104205,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104206,"byte_end":104209,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104210,"byte_end":104289,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104290,"byte_end":104370,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104371,"byte_end":104389,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104390,"byte_end":104393,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104394,"byte_end":104471,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104472,"byte_end":104529,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104530,"byte_end":104533,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104534,"byte_end":104548,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104549,"byte_end":104552,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104553,"byte_end":104628,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104629,"byte_end":104677,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesUnordered`][crate::stream::FuturesUnordered] APIs, some","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104678,"byte_end":104746,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ examples of additional functionality that provides:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104747,"byte_end":104802,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104803,"byte_end":104806,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104807,"byte_end":104875,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104876,"byte_end":104879,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104880,"byte_end":104957,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104958,"byte_end":105039,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105040,"byte_end":105043,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105044,"byte_end":105058,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105059,"byte_end":105062,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105063,"byte_end":105070,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105071,"byte_end":105112,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105113,"byte_end":105147,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105148,"byte_end":105151,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105152,"byte_end":105189,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105190,"byte_end":105193,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105194,"byte_end":105241,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105242,"byte_end":105245,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105246,"byte_end":105297,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105298,"byte_end":105307,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105308,"byte_end":105315,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6929},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106644,"byte_end":106650,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6932}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106506,"byte_end":106547,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106548,"byte_end":106615,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":738},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107916,"byte_end":107922,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn <A, B> (future1: A, future2: B) -> Select<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106741,"byte_end":106811,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106812,"byte_end":106815,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106816,"byte_end":106894,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106895,"byte_end":106971,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106972,"byte_end":107044,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107045,"byte_end":107048,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107049,"byte_end":107121,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107122,"byte_end":107150,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107151,"byte_end":107154,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107155,"byte_end":107222,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107223,"byte_end":107287,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107288,"byte_end":107338,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107339,"byte_end":107342,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107343,"byte_end":107357,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107358,"byte_end":107361,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107362,"byte_end":107369,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107370,"byte_end":107429,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107430,"byte_end":107433,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107434,"byte_end":107487,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107488,"byte_end":107491,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107492,"byte_end":107567,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107568,"byte_end":107600,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107601,"byte_end":107633,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107634,"byte_end":107639,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107640,"byte_end":107684,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107685,"byte_end":107711,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107712,"byte_end":107789,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107790,"byte_end":107869,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107870,"byte_end":107883,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107884,"byte_end":107894,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107895,"byte_end":107900,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107901,"byte_end":107908,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6937},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109274,"byte_end":109283,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6939}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109134,"byte_end":109177,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109195,"byte_end":109262,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":765},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":110063,"byte_end":110073,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn <I> (iter: I) -> SelectAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109361,"byte_end":109427,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109428,"byte_end":109431,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109432,"byte_end":109512,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109513,"byte_end":109591,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109592,"byte_end":109660,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109661,"byte_end":109664,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109665,"byte_end":109745,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109746,"byte_end":109820,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109821,"byte_end":109824,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109825,"byte_end":109902,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109903,"byte_end":109960,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109961,"byte_end":109964,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109965,"byte_end":109977,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109978,"byte_end":109981,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109982,"byte_end":110055,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7013},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":7016},{"krate":0,"index":7017}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7038},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":7042},{"krate":0,"index":7043},{"krate":0,"index":7044}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7065},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":7069},{"krate":0,"index":7070},{"krate":0,"index":7071}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7097},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":7102},{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7131},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7139}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7170},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":7176},{"krate":0,"index":7177},{"krate":0,"index":7178},{"krate":0,"index":7179},{"krate":0,"index":7180}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7211},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":7217},{"krate":0,"index":7218},{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7221}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7257},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":7264},{"krate":0,"index":7265},{"krate":0,"index":7266},{"krate":0,"index":7267},{"krate":0,"index":7268},{"krate":0,"index":7269}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":793},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115538,"byte_end":115546,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> TryJoin<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114304,"byte_end":114377,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114378,"byte_end":114410,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114411,"byte_end":114414,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114415,"byte_end":114486,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114487,"byte_end":114563,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114564,"byte_end":114635,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114636,"byte_end":114652,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114653,"byte_end":114656,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114657,"byte_end":114726,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114727,"byte_end":114753,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114754,"byte_end":114757,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114758,"byte_end":114772,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114773,"byte_end":114776,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114777,"byte_end":114853,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114854,"byte_end":114890,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114891,"byte_end":114894,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114895,"byte_end":114902,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114903,"byte_end":114944,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114945,"byte_end":114969,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114970,"byte_end":114973,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114974,"byte_end":115019,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115020,"byte_end":115065,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115066,"byte_end":115104,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115105,"byte_end":115108,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115109,"byte_end":115148,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115149,"byte_end":115158,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115159,"byte_end":115166,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115167,"byte_end":115170,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115171,"byte_end":115241,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115242,"byte_end":115257,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115258,"byte_end":115261,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115262,"byte_end":115269,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115270,"byte_end":115311,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115312,"byte_end":115336,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115337,"byte_end":115340,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115341,"byte_end":115386,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115387,"byte_end":115433,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115434,"byte_end":115472,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115473,"byte_end":115476,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115477,"byte_end":115512,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115513,"byte_end":115522,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115523,"byte_end":115530,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":796},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116139,"byte_end":116148,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> TryJoin3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115721,"byte_end":115781,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115782,"byte_end":115785,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115786,"byte_end":115800,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115801,"byte_end":115804,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115805,"byte_end":115812,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115813,"byte_end":115854,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115855,"byte_end":115879,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115880,"byte_end":115883,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115884,"byte_end":115929,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115930,"byte_end":115975,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115976,"byte_end":116021,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116022,"byte_end":116065,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116066,"byte_end":116069,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116070,"byte_end":116113,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116114,"byte_end":116123,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116124,"byte_end":116131,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":800},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116888,"byte_end":116897,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> TryJoin4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116418,"byte_end":116478,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116479,"byte_end":116482,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116483,"byte_end":116497,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116498,"byte_end":116501,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116502,"byte_end":116509,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116510,"byte_end":116551,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116552,"byte_end":116576,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116577,"byte_end":116580,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116581,"byte_end":116626,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116627,"byte_end":116672,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116673,"byte_end":116718,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116719,"byte_end":116764,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116765,"byte_end":116811,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116812,"byte_end":116815,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116816,"byte_end":116862,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116863,"byte_end":116872,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116873,"byte_end":116880,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":805},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117771,"byte_end":117780,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117249,"byte_end":117309,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117310,"byte_end":117313,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117314,"byte_end":117328,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117329,"byte_end":117332,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117333,"byte_end":117340,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117341,"byte_end":117382,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117383,"byte_end":117407,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117408,"byte_end":117411,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117412,"byte_end":117457,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117458,"byte_end":117503,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117504,"byte_end":117549,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117550,"byte_end":117595,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117596,"byte_end":117641,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117642,"byte_end":117691,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117692,"byte_end":117695,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117696,"byte_end":117745,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117746,"byte_end":117755,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117756,"byte_end":117763,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119166,"byte_end":119176,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":849}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119041,"byte_end":119086,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119087,"byte_end":119154,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":853},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120795,"byte_end":120807,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn <I> (i: I) -> TryJoinAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119546,"byte_end":119625,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119626,"byte_end":119656,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119657,"byte_end":119660,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119661,"byte_end":119740,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119741,"byte_end":119821,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119822,"byte_end":119840,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119841,"byte_end":119844,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119845,"byte_end":119923,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119924,"byte_end":120004,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120005,"byte_end":120079,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120080,"byte_end":120103,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120104,"byte_end":120107,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120108,"byte_end":120185,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120186,"byte_end":120243,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120244,"byte_end":120247,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120248,"byte_end":120262,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120263,"byte_end":120266,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120267,"byte_end":120274,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120275,"byte_end":120316,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120317,"byte_end":120363,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120364,"byte_end":120367,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120368,"byte_end":120391,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120392,"byte_end":120426,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120427,"byte_end":120461,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120462,"byte_end":120496,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120497,"byte_end":120503,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120504,"byte_end":120507,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120508,"byte_end":120571,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120572,"byte_end":120575,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120576,"byte_end":120599,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120600,"byte_end":120634,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120635,"byte_end":120670,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120671,"byte_end":120705,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120706,"byte_end":120712,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120713,"byte_end":120716,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120717,"byte_end":120769,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120770,"byte_end":120779,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120780,"byte_end":120787,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7305},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122636,"byte_end":122645,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":7308}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122494,"byte_end":122539,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122540,"byte_end":122607,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":881},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124230,"byte_end":124240,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn <A, B> (future1: A, future2: B) -> TrySelect<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122739,"byte_end":122809,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122810,"byte_end":122813,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122814,"byte_end":122892,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122893,"byte_end":122969,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122970,"byte_end":123042,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123043,"byte_end":123046,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123047,"byte_end":123119,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123120,"byte_end":123148,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123149,"byte_end":123152,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123153,"byte_end":123220,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123221,"byte_end":123292,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123293,"byte_end":123343,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123344,"byte_end":123347,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123348,"byte_end":123362,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123363,"byte_end":123366,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123367,"byte_end":123374,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123375,"byte_end":123459,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123460,"byte_end":123463,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123464,"byte_end":123521,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123522,"byte_end":123525,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123526,"byte_end":123608,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123609,"byte_end":123666,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123667,"byte_end":123724,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123725,"byte_end":123751,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123752,"byte_end":123757,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123758,"byte_end":123853,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123854,"byte_end":123877,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123878,"byte_end":123958,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123959,"byte_end":124040,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124041,"byte_end":124111,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124112,"byte_end":124183,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124184,"byte_end":124197,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124198,"byte_end":124208,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124209,"byte_end":124214,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124215,"byte_end":124222,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7313},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125729,"byte_end":125737,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":7315}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125590,"byte_end":125632,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125650,"byte_end":125717,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":906},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126459,"byte_end":126468,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn <I> (iter: I) -> SelectOk<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125814,"byte_end":125908,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125909,"byte_end":125912,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125913,"byte_end":126002,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126003,"byte_end":126087,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126088,"byte_end":126169,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126170,"byte_end":126215,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126216,"byte_end":126219,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126220,"byte_end":126298,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126299,"byte_end":126356,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126357,"byte_end":126360,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126361,"byte_end":126373,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126374,"byte_end":126377,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126378,"byte_end":126451,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7322},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128793,"byte_end":128797,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":7319},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128760,"byte_end":128788,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7324},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128847,"byte_end":128852,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":7319},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128813,"byte_end":128842,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":7319},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128741,"byte_end":128747,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"Either::{Left, Right}","parent":null,"children":[{"krate":0,"index":7322},{"krate":0,"index":7324}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128693,"byte_end":128707,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7356},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128741,"byte_end":128747,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":7360},{"krate":0,"index":7361},{"krate":0,"index":7362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129058,"byte_end":129070,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn (self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128910,"byte_end":128968,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128973,"byte_end":128976,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128981,"byte_end":129046,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129450,"byte_end":129463,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn (self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129301,"byte_end":129359,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129364,"byte_end":129367,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129372,"byte_end":129438,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129751,"byte_end":129761,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129678,"byte_end":129739,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":13385},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8477886,"byte_end":8477895,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":13388},{"krate":0,"index":13387}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8477807,"byte_end":8477874,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8477768,"byte_end":8477782,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":13406},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8477886,"byte_end":8477895,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__Abortable","qualname":"::future::abortable::_::__Abortable","value":"__Abortable {  }","parent":null,"children":[{"krate":0,"index":13409},{"krate":0,"index":13410}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7418},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478778,"byte_end":8478781,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"fn (future: Fut, reg: AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478011,"byte_end":8478086,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478091,"byte_end":8478159,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478164,"byte_end":8478167,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478172,"byte_end":8478244,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478249,"byte_end":8478325,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478330,"byte_end":8478355,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478360,"byte_end":8478363,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478368,"byte_end":8478380,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478385,"byte_end":8478388,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478393,"byte_end":8478400,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478405,"byte_end":8478446,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478451,"byte_end":8478510,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478515,"byte_end":8478518,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478523,"byte_end":8478592,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478597,"byte_end":8478662,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478667,"byte_end":8478692,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478697,"byte_end":8478740,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478745,"byte_end":8478754,"line_start":38,"line_end":38,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478759,"byte_end":8478766,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7438},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479109,"byte_end":8479126,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":7439}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478918,"byte_end":8478969,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8478970,"byte_end":8479046,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479047,"byte_end":8479080,"line_start":50,"line_end":50,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":7442},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479233,"byte_end":8479244,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":7443}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479160,"byte_end":8479197,"line_start":56,"line_end":56,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7420},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479914,"byte_end":8479922,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn () -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479301,"byte_end":8479375,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479380,"byte_end":8479410,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479415,"byte_end":8479418,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479423,"byte_end":8479491,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479496,"byte_end":8479499,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479504,"byte_end":8479516,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479521,"byte_end":8479524,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479529,"byte_end":8479536,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479541,"byte_end":8479582,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479587,"byte_end":8479646,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479651,"byte_end":8479654,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479659,"byte_end":8479728,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479733,"byte_end":8479798,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479803,"byte_end":8479828,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479833,"byte_end":8479876,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479881,"byte_end":8479890,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479895,"byte_end":8479902,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":7421},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8480825,"byte_end":8480834,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn <Fut> (future: Fut) -> (Abortable<Fut>, AbortHandle)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8480456,"byte_end":8480542,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8480543,"byte_end":8480546,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8480547,"byte_end":8480623,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8480624,"byte_end":8480677,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8480678,"byte_end":8480681,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8480682,"byte_end":8480759,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8480760,"byte_end":8480817,"line_start":111,"line_end":111,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7453},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8481138,"byte_end":8481145,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8481027,"byte_end":8481081,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7431},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482758,"byte_end":8482763,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482394,"byte_end":8482455,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482460,"byte_end":8482463,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482468,"byte_end":8482537,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482542,"byte_end":8482612,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482617,"byte_end":8482691,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482696,"byte_end":8482746,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1003},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":2026},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2062},{"krate":0,"index":2066},{"krate":0,"index":2617},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2856},{"krate":0,"index":11108},{"krate":0,"index":11177},{"krate":0,"index":11178},{"krate":0,"index":11409},{"krate":0,"index":11410},{"krate":0,"index":11458}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136636,"byte_end":136647,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136648,"byte_end":136651,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136652,"byte_end":136726,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136727,"byte_end":136805,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136806,"byte_end":136835,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":7466},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":185945,"byte_end":185950,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7469},{"krate":0,"index":7470}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":185885,"byte_end":185933,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":185853,"byte_end":185867,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7491},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":185945,"byte_end":185950,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7523},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188112,"byte_end":188119,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7527},{"krate":0,"index":7526}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188033,"byte_end":188100,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188001,"byte_end":188015,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7548},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188112,"byte_end":188119,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":7552},{"krate":0,"index":7553}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7579},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189579,"byte_end":189585,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":7582},{"krate":0,"index":7581}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189500,"byte_end":189567,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189468,"byte_end":189482,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7600},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189579,"byte_end":189585,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":7603},{"krate":0,"index":7604}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7624},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191369,"byte_end":191378,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7627},{"krate":0,"index":7626}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191309,"byte_end":191357,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191277,"byte_end":191291,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7645},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191369,"byte_end":191378,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":7648},{"krate":0,"index":7649}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7677},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193073,"byte_end":193079,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7683},{"krate":0,"index":7681},{"krate":0,"index":7684},{"krate":0,"index":7682}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193013,"byte_end":193061,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":192998,"byte_end":193012,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7712},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193073,"byte_end":193079,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":7717},{"krate":0,"index":7718},{"krate":0,"index":7719}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7754},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196411,"byte_end":196420,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7759},{"krate":0,"index":7758},{"krate":0,"index":7760}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196351,"byte_end":196399,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196336,"byte_end":196350,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7786},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196411,"byte_end":196420,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":7791},{"krate":0,"index":7792},{"krate":0,"index":7793}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7828},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199493,"byte_end":199500,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7831},{"krate":0,"index":7832}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199433,"byte_end":199481,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199401,"byte_end":199415,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7853},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199493,"byte_end":199500,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7857},{"krate":0,"index":7858},{"krate":0,"index":7859}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7895},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7897}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7913},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7916},{"krate":0,"index":7917}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7961},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201302,"byte_end":201306,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7968},{"krate":0,"index":7966},{"krate":0,"index":7967},{"krate":0,"index":7969}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201223,"byte_end":201290,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201208,"byte_end":201222,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8000},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201302,"byte_end":201306,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":8006},{"krate":0,"index":8007},{"krate":0,"index":8008}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8040},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":203882,"byte_end":203889,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":8045},{"krate":0,"index":8046},{"krate":0,"index":8044}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":203803,"byte_end":203870,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":203771,"byte_end":203785,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8072},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":203882,"byte_end":203889,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__Forward","qualname":"::stream::stream::forward::_::__Forward","value":"__Forward {  }","parent":null,"children":[{"krate":0,"index":8077},{"krate":0,"index":8078},{"krate":0,"index":8079}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8114},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":8117}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8136},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Forward","qualname":"::stream::stream::_::__Forward","value":"__Forward {  }","parent":null,"children":[{"krate":0,"index":8140},{"krate":0,"index":8141}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8179},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206171,"byte_end":206178,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":8184},{"krate":0,"index":8183},{"krate":0,"index":8185}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206092,"byte_end":206159,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206077,"byte_end":206091,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8211},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206171,"byte_end":206178,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":8216},{"krate":0,"index":8217},{"krate":0,"index":8218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8245},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208197,"byte_end":208201,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8248},{"krate":0,"index":8247}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208137,"byte_end":208185,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208105,"byte_end":208119,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8266},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208197,"byte_end":208201,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":8269},{"krate":0,"index":8270}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208639,"byte_end":208646,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208370,"byte_end":208432,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208437,"byte_end":208440,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208445,"byte_end":208513,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208518,"byte_end":208584,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208589,"byte_end":208627,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":8298},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210039,"byte_end":210051,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":8300}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209869,"byte_end":209942,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209960,"byte_end":210027,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210634,"byte_end":210641,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn (&self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210242,"byte_end":210315,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210320,"byte_end":210337,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210342,"byte_end":210345,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210350,"byte_end":210431,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210436,"byte_end":210518,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210523,"byte_end":210602,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210607,"byte_end":210622,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211252,"byte_end":211259,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn (&mut self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210706,"byte_end":210773,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210778,"byte_end":210809,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210814,"byte_end":210817,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210822,"byte_end":210895,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210900,"byte_end":210955,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210960,"byte_end":210963,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210968,"byte_end":211049,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211054,"byte_end":211136,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211141,"byte_end":211220,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211225,"byte_end":211240,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211885,"byte_end":211896,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211332,"byte_end":211406,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211411,"byte_end":211442,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211447,"byte_end":211450,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211455,"byte_end":211528,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211533,"byte_end":211588,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211593,"byte_end":211596,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211601,"byte_end":211682,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211687,"byte_end":211769,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211774,"byte_end":211853,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":211858,"byte_end":211873,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212533,"byte_end":212543,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn (self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212013,"byte_end":212075,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212080,"byte_end":212083,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212088,"byte_end":212160,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212165,"byte_end":212236,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212241,"byte_end":212244,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212249,"byte_end":212330,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212335,"byte_end":212417,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212422,"byte_end":212501,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212506,"byte_end":212521,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8307},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8310}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8329},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":8333},{"krate":0,"index":8334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8389},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":213559,"byte_end":213562,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8393},{"krate":0,"index":8392}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":213499,"byte_end":213547,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":213484,"byte_end":213498,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8414},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":213559,"byte_end":213562,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":8418},{"krate":0,"index":8419}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8454},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":8458}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8480},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":8485},{"krate":0,"index":8486}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8552},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215300,"byte_end":215304,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":8555}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215144,"byte_end":215203,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215221,"byte_end":215288,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8560},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216310,"byte_end":216324,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":8563}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216126,"byte_end":216201,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216202,"byte_end":216213,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216231,"byte_end":216298,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8568},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":217818,"byte_end":217826,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":8571},{"krate":0,"index":8570}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":217758,"byte_end":217806,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":217726,"byte_end":217740,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8589},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":217818,"byte_end":217826,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":8592},{"krate":0,"index":8593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218293,"byte_end":218297,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn (self: Pin<&mut Self>) -> Peek<'_, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218138,"byte_end":218211,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218216,"byte_end":218281,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8616},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218637,"byte_end":218646,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8622},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220425,"byte_end":220429,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":8625}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220365,"byte_end":220413,"line_start":109,"line_end":109,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220350,"byte_end":220364,"line_start":108,"line_end":108,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8644},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220425,"byte_end":220429,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":8648},{"krate":0,"index":8649}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8670},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":221692,"byte_end":221696,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8673},{"krate":0,"index":8672}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":221632,"byte_end":221680,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":221600,"byte_end":221614,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8691},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":221692,"byte_end":221696,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":8694},{"krate":0,"index":8695}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8723},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":223588,"byte_end":223597,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":8730},{"krate":0,"index":8727},{"krate":0,"index":8731},{"krate":0,"index":8728},{"krate":0,"index":8729}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":223528,"byte_end":223576,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":223513,"byte_end":223527,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8761},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":223588,"byte_end":223597,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":8766},{"krate":0,"index":8767},{"krate":0,"index":8768}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8803},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":227241,"byte_end":227245,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8806},{"krate":0,"index":8805}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":227181,"byte_end":227229,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":227149,"byte_end":227163,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8824},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":227241,"byte_end":227245,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":8827},{"krate":0,"index":8828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8856},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229336,"byte_end":229345,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8863},{"krate":0,"index":8860},{"krate":0,"index":8864},{"krate":0,"index":8861},{"krate":0,"index":8862}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229276,"byte_end":229324,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229261,"byte_end":229275,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8894},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229336,"byte_end":229345,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8899},{"krate":0,"index":8900},{"krate":0,"index":8901}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8936},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232965,"byte_end":232974,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8941},{"krate":0,"index":8942},{"krate":0,"index":8939},{"krate":0,"index":8940}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232905,"byte_end":232953,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232890,"byte_end":232904,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8967},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232965,"byte_end":232974,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8973}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234331,"byte_end":234342,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn (&mut self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234031,"byte_end":234085,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234090,"byte_end":234184,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234189,"byte_end":234252,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234257,"byte_end":234319,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235626,"byte_end":235637,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn (&mut self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234479,"byte_end":234544,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234549,"byte_end":234606,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234611,"byte_end":234614,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234619,"byte_end":234684,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234689,"byte_end":234749,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234754,"byte_end":234757,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234762,"byte_end":234830,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234835,"byte_end":234878,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234883,"byte_end":234886,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234891,"byte_end":234905,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234910,"byte_end":234913,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234918,"byte_end":234925,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234930,"byte_end":234971,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234976,"byte_end":235000,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235005,"byte_end":235048,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235053,"byte_end":235081,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235086,"byte_end":235089,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235094,"byte_end":235132,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235137,"byte_end":235140,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235145,"byte_end":235163,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235168,"byte_end":235210,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235215,"byte_end":235230,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235235,"byte_end":235254,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235259,"byte_end":235284,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235289,"byte_end":235305,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235310,"byte_end":235343,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235348,"byte_end":235357,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235362,"byte_end":235369,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235374,"byte_end":235377,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235382,"byte_end":235431,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235436,"byte_end":235490,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235495,"byte_end":235498,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235503,"byte_end":235550,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235555,"byte_end":235588,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235593,"byte_end":235602,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235607,"byte_end":235614,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235813,"byte_end":235823,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235716,"byte_end":235777,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235782,"byte_end":235801,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":9003},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":237762,"byte_end":237766,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":9008},{"krate":0,"index":9009},{"krate":0,"index":9007}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":237702,"byte_end":237750,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":237687,"byte_end":237701,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9035},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":237762,"byte_end":237766,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":9040},{"krate":0,"index":9041},{"krate":0,"index":9042}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9077},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240453,"byte_end":240456,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":9082},{"krate":0,"index":9083},{"krate":0,"index":9080},{"krate":0,"index":9081}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240393,"byte_end":240441,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240361,"byte_end":240375,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9108},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240453,"byte_end":240456,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9114}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241009,"byte_end":241016,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240901,"byte_end":240975,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240980,"byte_end":240997,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241372,"byte_end":241379,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241110,"byte_end":241178,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241183,"byte_end":241214,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241219,"byte_end":241222,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241227,"byte_end":241300,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241305,"byte_end":241360,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241754,"byte_end":241765,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241485,"byte_end":241560,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241565,"byte_end":241596,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241601,"byte_end":241604,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241609,"byte_end":241682,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":241687,"byte_end":241742,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242271,"byte_end":242281,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242035,"byte_end":242098,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242103,"byte_end":242106,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242111,"byte_end":242183,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242188,"byte_end":242259,"line_start":61,"line_end":61,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":9140},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245104,"byte_end":245110,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":9144},{"krate":0,"index":9142},{"krate":0,"index":9143}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245044,"byte_end":245092,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245012,"byte_end":245026,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9164},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245104,"byte_end":245110,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"__Chunks","qualname":"::stream::stream::chunks::_::__Chunks","value":"__Chunks {  }","parent":null,"children":[{"krate":0,"index":9167},{"krate":0,"index":9168}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9196},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248235,"byte_end":248246,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":9200},{"krate":0,"index":9198},{"krate":0,"index":9199}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248175,"byte_end":248223,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248143,"byte_end":248157,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9220},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248235,"byte_end":248246,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"__ReadyChunks","qualname":"::stream::stream::ready_chunks::_::__ReadyChunks","value":"__ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":9223},{"krate":0,"index":9224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9252},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":251700,"byte_end":251704,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":9258},{"krate":0,"index":9257},{"krate":0,"index":9259}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":251640,"byte_end":251688,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":251625,"byte_end":251639,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9288},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":251700,"byte_end":251704,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":9294},{"krate":0,"index":9295},{"krate":0,"index":9296}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13341},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8515664,"byte_end":8515679,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13345},{"krate":0,"index":13343},{"krate":0,"index":13344}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8515604,"byte_end":8515652,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8515589,"byte_end":8515603,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":13365},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8515664,"byte_end":8515679,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"__BufferUnordered","qualname":"::stream::stream::buffer_unordered::_::__BufferUnordered","value":"__BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13368},{"krate":0,"index":13369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13296},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8519024,"byte_end":8519032,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":13300},{"krate":0,"index":13298},{"krate":0,"index":13299}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8518964,"byte_end":8519012,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8518949,"byte_end":8518963,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":13320},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8519024,"byte_end":8519032,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"__Buffered","qualname":"::stream::stream::buffered::_::__Buffered","value":"__Buffered {  }","parent":null,"children":[{"krate":0,"index":13323},{"krate":0,"index":13324}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13228},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8522101,"byte_end":8522118,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13235},{"krate":0,"index":13232},{"krate":0,"index":13233},{"krate":0,"index":13234}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8522022,"byte_end":8522089,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8522007,"byte_end":8522021,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":13263},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8522101,"byte_end":8522118,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"__ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::_::__ForEachConcurrent","value":"__ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13268},{"krate":0,"index":13269}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9524},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525562,"byte_end":8525573,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525447,"byte_end":8525484,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525502,"byte_end":8525550,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":9454},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525900,"byte_end":8525907,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"fn <Item> (self, other: SplitSink<S, Item>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525663,"byte_end":8525731,"line_start":17,"line_end":17,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525736,"byte_end":8525810,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525815,"byte_end":8525888,"line_start":19,"line_end":19,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":9531},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526551,"byte_end":8526560,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":9534},{"krate":0,"index":9535}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526440,"byte_end":8526475,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526493,"byte_end":8526539,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":9469},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526963,"byte_end":8526970,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"fn (self, other: SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526726,"byte_end":8526794,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526799,"byte_end":8526873,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526878,"byte_end":8526951,"line_start":56,"line_end":56,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":9487},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529346,"byte_end":8529358,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529195,"byte_end":8529273,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529274,"byte_end":8529334,"line_start":121,"line_end":121,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9540},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":255157,"byte_end":255168,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9543},{"krate":0,"index":9542}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":255097,"byte_end":255145,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":255065,"byte_end":255079,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9561},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":255157,"byte_end":255168,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::stream::stream::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9564},{"krate":0,"index":9565}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1948},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145448,"byte_end":145457,"line_start":198,"line_end":198,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2025}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145337,"byte_end":145411,"line_start":196,"line_end":196,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145412,"byte_end":145437,"line_start":197,"line_end":197,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146367,"byte_end":146371,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145472,"byte_end":145538,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145543,"byte_end":145546,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145551,"byte_end":145619,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145624,"byte_end":145699,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145704,"byte_end":145779,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145784,"byte_end":145838,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145843,"byte_end":145918,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145923,"byte_end":145933,"line_start":206,"line_end":206,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145938,"byte_end":145941,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145946,"byte_end":145960,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145965,"byte_end":145968,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145973,"byte_end":145980,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145985,"byte_end":146026,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146031,"byte_end":146074,"line_start":212,"line_end":212,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146079,"byte_end":146082,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146087,"byte_end":146128,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146133,"byte_end":146136,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146141,"byte_end":146186,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146191,"byte_end":146236,"line_start":217,"line_end":217,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146241,"byte_end":146286,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146291,"byte_end":146333,"line_start":219,"line_end":219,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146338,"byte_end":146347,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146352,"byte_end":146359,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147570,"byte_end":147581,"line_start":257,"line_end":257,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn (self) -> StreamFuture<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146473,"byte_end":146545,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146550,"byte_end":146611,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146616,"byte_end":146619,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146624,"byte_end":146699,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146704,"byte_end":146758,"line_start":233,"line_end":233,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146763,"byte_end":146766,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146771,"byte_end":146844,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146849,"byte_end":146911,"line_start":236,"line_end":236,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146916,"byte_end":146991,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146996,"byte_end":147050,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147055,"byte_end":147130,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147135,"byte_end":147145,"line_start":240,"line_end":240,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147150,"byte_end":147153,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147158,"byte_end":147172,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147177,"byte_end":147180,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147185,"byte_end":147192,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147197,"byte_end":147238,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147243,"byte_end":147286,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147291,"byte_end":147294,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147299,"byte_end":147336,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147341,"byte_end":147344,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147349,"byte_end":147401,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147406,"byte_end":147436,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147441,"byte_end":147444,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147449,"byte_end":147501,"line_start":253,"line_end":253,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147506,"byte_end":147536,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147541,"byte_end":147550,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147555,"byte_end":147562,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148534,"byte_end":148537,"line_start":287,"line_end":287,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147698,"byte_end":147773,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147778,"byte_end":147801,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147806,"byte_end":147809,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147814,"byte_end":147886,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147891,"byte_end":147955,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147960,"byte_end":147997,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148002,"byte_end":148005,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148010,"byte_end":148086,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148091,"byte_end":148162,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148167,"byte_end":148188,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148193,"byte_end":148196,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148201,"byte_end":148215,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148220,"byte_end":148223,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148228,"byte_end":148235,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148240,"byte_end":148281,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148286,"byte_end":148329,"line_start":279,"line_end":279,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148334,"byte_end":148337,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148342,"byte_end":148379,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148384,"byte_end":148423,"line_start":282,"line_end":282,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148428,"byte_end":148431,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148436,"byte_end":148500,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148505,"byte_end":148514,"line_start":285,"line_end":285,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148519,"byte_end":148526,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150069,"byte_end":150078,"line_start":333,"line_end":333,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148681,"byte_end":148752,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148757,"byte_end":148776,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148781,"byte_end":148784,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148789,"byte_end":148854,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148859,"byte_end":148928,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148933,"byte_end":148944,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148949,"byte_end":148952,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148957,"byte_end":149032,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149037,"byte_end":149119,"line_start":303,"line_end":303,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149124,"byte_end":149142,"line_start":304,"line_end":304,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149147,"byte_end":149150,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149155,"byte_end":149178,"line_start":306,"line_end":306,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149183,"byte_end":149186,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149191,"byte_end":149266,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ [`usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149271,"byte_end":149353,"line_start":309,"line_end":309,"column_start":5,"column_end":87}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149358,"byte_end":149414,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149419,"byte_end":149422,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149427,"byte_end":149439,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149444,"byte_end":149447,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149452,"byte_end":149521,"line_start":314,"line_end":314,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149526,"byte_end":149551,"line_start":315,"line_end":315,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149556,"byte_end":149559,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149564,"byte_end":149578,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149583,"byte_end":149586,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149591,"byte_end":149598,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149603,"byte_end":149644,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149649,"byte_end":149692,"line_start":321,"line_end":321,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149697,"byte_end":149700,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149705,"byte_end":149756,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149761,"byte_end":149764,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149769,"byte_end":149809,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149814,"byte_end":149817,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149822,"byte_end":149874,"line_start":327,"line_end":327,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149879,"byte_end":149931,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149936,"byte_end":149988,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149993,"byte_end":150035,"line_start":330,"line_end":330,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150040,"byte_end":150049,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150054,"byte_end":150061,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151266,"byte_end":151272,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <Fut, F> (self, f: F) -> Filter<Self, Fut, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150181,"byte_end":150253,"line_start":340,"line_end":340,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150258,"byte_end":150285,"line_start":341,"line_end":341,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150290,"byte_end":150293,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150298,"byte_end":150373,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150378,"byte_end":150449,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150454,"byte_end":150526,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150531,"byte_end":150605,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150610,"byte_end":150668,"line_start":347,"line_end":347,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150673,"byte_end":150676,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150681,"byte_end":150757,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150762,"byte_end":150836,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150841,"byte_end":150862,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150867,"byte_end":150870,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150875,"byte_end":150889,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150894,"byte_end":150897,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150902,"byte_end":150909,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150914,"byte_end":150955,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150960,"byte_end":150984,"line_start":357,"line_end":357,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150989,"byte_end":151032,"line_start":358,"line_end":358,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151037,"byte_end":151040,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151045,"byte_end":151083,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151088,"byte_end":151149,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151154,"byte_end":151157,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151162,"byte_end":151232,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151237,"byte_end":151246,"line_start":364,"line_end":364,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151251,"byte_end":151258,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152565,"byte_end":152575,"line_start":400,"line_end":400,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <Fut, T, F> (self, f: F) -> FilterMap<Self, Fut, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151468,"byte_end":151543,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151548,"byte_end":151624,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151629,"byte_end":151632,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151637,"byte_end":151712,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151717,"byte_end":151792,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151797,"byte_end":151873,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151878,"byte_end":151943,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151948,"byte_end":151951,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151956,"byte_end":152032,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152037,"byte_end":152111,"line_start":384,"line_end":384,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152116,"byte_end":152141,"line_start":385,"line_end":385,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152146,"byte_end":152149,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152154,"byte_end":152168,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152173,"byte_end":152180,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152185,"byte_end":152226,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152231,"byte_end":152274,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152279,"byte_end":152282,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152287,"byte_end":152325,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152330,"byte_end":152380,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152385,"byte_end":152436,"line_start":394,"line_end":394,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152441,"byte_end":152448,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152453,"byte_end":152456,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152461,"byte_end":152531,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152536,"byte_end":152545,"line_start":398,"line_end":398,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152550,"byte_end":152557,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153581,"byte_end":153585,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152784,"byte_end":152857,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152862,"byte_end":152890,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152895,"byte_end":152898,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152903,"byte_end":152977,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152982,"byte_end":153049,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153054,"byte_end":153099,"line_start":414,"line_end":414,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153104,"byte_end":153107,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153112,"byte_end":153188,"line_start":416,"line_end":416,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153193,"byte_end":153219,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153224,"byte_end":153227,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153232,"byte_end":153246,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153251,"byte_end":153254,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153259,"byte_end":153266,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153271,"byte_end":153312,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153317,"byte_end":153360,"line_start":423,"line_end":423,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153365,"byte_end":153368,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153373,"byte_end":153410,"line_start":425,"line_end":425,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153415,"byte_end":153470,"line_start":426,"line_end":426,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153475,"byte_end":153478,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153483,"byte_end":153547,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153552,"byte_end":153561,"line_start":429,"line_end":429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153566,"byte_end":153573,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154486,"byte_end":154493,"line_start":465,"line_end":465,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn <C> (self) -> Collect<Self, C>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153761,"byte_end":153815,"line_start":440,"line_end":440,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153820,"byte_end":153875,"line_start":441,"line_end":441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153880,"byte_end":153883,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153888,"byte_end":153956,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153961,"byte_end":153964,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153969,"byte_end":153983,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153988,"byte_end":153991,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153996,"byte_end":154003,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154008,"byte_end":154049,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154054,"byte_end":154085,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154090,"byte_end":154125,"line_start":450,"line_end":450,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154130,"byte_end":154150,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154155,"byte_end":154158,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154163,"byte_end":154200,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154205,"byte_end":154208,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154213,"byte_end":154240,"line_start":455,"line_end":455,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154245,"byte_end":154269,"line_start":456,"line_end":456,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154274,"byte_end":154316,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154321,"byte_end":154330,"line_start":458,"line_end":458,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154335,"byte_end":154342,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154347,"byte_end":154350,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154355,"byte_end":154403,"line_start":461,"line_end":461,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154408,"byte_end":154452,"line_start":462,"line_end":462,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154457,"byte_end":154466,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154471,"byte_end":154478,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155663,"byte_end":155669,"line_start":504,"line_end":504,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn (self) -> Concat<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154628,"byte_end":154690,"line_start":472,"line_end":472,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154695,"byte_end":154759,"line_start":473,"line_end":473,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154764,"byte_end":154767,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154772,"byte_end":154836,"line_start":475,"line_end":475,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154841,"byte_end":154906,"line_start":476,"line_end":476,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154911,"byte_end":154957,"line_start":477,"line_end":477,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154962,"byte_end":154965,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154970,"byte_end":155019,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155024,"byte_end":155064,"line_start":480,"line_end":480,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155069,"byte_end":155072,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155077,"byte_end":155091,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155096,"byte_end":155099,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155104,"byte_end":155111,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155116,"byte_end":155157,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155162,"byte_end":155193,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155198,"byte_end":155233,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155238,"byte_end":155258,"line_start":488,"line_end":488,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155263,"byte_end":155266,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155271,"byte_end":155308,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155313,"byte_end":155316,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155321,"byte_end":155348,"line_start":492,"line_end":492,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155353,"byte_end":155384,"line_start":493,"line_end":493,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155389,"byte_end":155415,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155420,"byte_end":155486,"line_start":495,"line_end":495,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155491,"byte_end":155500,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155505,"byte_end":155512,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155517,"byte_end":155520,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155525,"byte_end":155560,"line_start":499,"line_end":499,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155565,"byte_end":155568,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155573,"byte_end":155629,"line_start":501,"line_end":501,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155634,"byte_end":155643,"line_start":502,"line_end":502,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155648,"byte_end":155655,"line_start":503,"line_end":503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156682,"byte_end":156686,"line_start":532,"line_end":532,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> Fold<Self, Fut, T, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155867,"byte_end":155934,"line_start":512,"line_end":512,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155939,"byte_end":155991,"line_start":513,"line_end":513,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155996,"byte_end":155999,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156004,"byte_end":156074,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156079,"byte_end":156155,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156160,"byte_end":156236,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156241,"byte_end":156311,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156316,"byte_end":156342,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156347,"byte_end":156350,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156355,"byte_end":156369,"line_start":521,"line_end":521,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156374,"byte_end":156377,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156382,"byte_end":156389,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156394,"byte_end":156435,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156440,"byte_end":156483,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156488,"byte_end":156491,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156496,"byte_end":156539,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156544,"byte_end":156613,"line_start":528,"line_end":528,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156618,"byte_end":156648,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156653,"byte_end":156662,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156667,"byte_end":156674,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157857,"byte_end":157864,"line_start":572,"line_end":572,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156898,"byte_end":156963,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156968,"byte_end":156971,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156976,"byte_end":156990,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156995,"byte_end":156998,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157003,"byte_end":157010,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157015,"byte_end":157056,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157061,"byte_end":157092,"line_start":547,"line_end":547,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157097,"byte_end":157132,"line_start":548,"line_end":548,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157137,"byte_end":157157,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157162,"byte_end":157165,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157170,"byte_end":157209,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157214,"byte_end":157253,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157258,"byte_end":157297,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157302,"byte_end":157305,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157310,"byte_end":157337,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157342,"byte_end":157381,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157386,"byte_end":157425,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157430,"byte_end":157437,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157442,"byte_end":157469,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157474,"byte_end":157513,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157518,"byte_end":157557,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157562,"byte_end":157569,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157574,"byte_end":157601,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157606,"byte_end":157647,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157652,"byte_end":157693,"line_start":565,"line_end":565,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157698,"byte_end":157705,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157710,"byte_end":157713,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157718,"byte_end":157777,"line_start":568,"line_end":568,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157782,"byte_end":157823,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157828,"byte_end":157837,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157842,"byte_end":157849,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159076,"byte_end":159084,"line_start":605,"line_end":605,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn <U, F> (self, f: F) -> FlatMap<Self, U, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157991,"byte_end":158063,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158068,"byte_end":158071,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158076,"byte_end":158153,"line_start":582,"line_end":582,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158158,"byte_end":158233,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158238,"byte_end":158314,"line_start":584,"line_end":584,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158319,"byte_end":158322,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158327,"byte_end":158409,"line_start":586,"line_end":586,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158414,"byte_end":158497,"line_start":587,"line_end":587,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158502,"byte_end":158505,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158510,"byte_end":158586,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158591,"byte_end":158667,"line_start":590,"line_end":590,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158672,"byte_end":158693,"line_start":591,"line_end":591,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158698,"byte_end":158701,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158706,"byte_end":158720,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158725,"byte_end":158728,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158733,"byte_end":158740,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158745,"byte_end":158786,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158791,"byte_end":158834,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158839,"byte_end":158842,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158847,"byte_end":158884,"line_start":599,"line_end":599,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158889,"byte_end":158956,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158961,"byte_end":158964,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158969,"byte_end":159042,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159047,"byte_end":159056,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159061,"byte_end":159068,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160068,"byte_end":160072,"line_start":638,"line_end":638,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <S, B, Fut, F> (self, initial_state: S, f: F) -> Scan<Self, S, Fut, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state \n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state ","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159258,"byte_end":159330,"line_start":614,"line_end":614,"column_start":5,"column_end":77}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159335,"byte_end":159365,"line_start":615,"line_end":615,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159370,"byte_end":159373,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159378,"byte_end":159453,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159458,"byte_end":159529,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159534,"byte_end":159574,"line_start":619,"line_end":619,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159579,"byte_end":159582,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159587,"byte_end":159601,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159606,"byte_end":159609,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159614,"byte_end":159621,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159626,"byte_end":159667,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159672,"byte_end":159696,"line_start":625,"line_end":625,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159701,"byte_end":159744,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159749,"byte_end":159752,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159757,"byte_end":159795,"line_start":628,"line_end":628,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159800,"byte_end":159803,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159808,"byte_end":159852,"line_start":630,"line_end":630,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159857,"byte_end":159877,"line_start":631,"line_end":631,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159882,"byte_end":159945,"line_start":632,"line_end":632,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159950,"byte_end":159957,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159962,"byte_end":159965,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159970,"byte_end":160034,"line_start":635,"line_end":635,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160039,"byte_end":160048,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160053,"byte_end":160060,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161096,"byte_end":161106,"line_start":669,"line_end":669,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <Fut, F> (self, f: F) -> SkipWhile<Self, Fut, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160318,"byte_end":160392,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160397,"byte_end":160420,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160425,"byte_end":160428,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160433,"byte_end":160506,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160511,"byte_end":160583,"line_start":651,"line_end":651,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160588,"byte_end":160665,"line_start":652,"line_end":652,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160670,"byte_end":160681,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160686,"byte_end":160689,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160694,"byte_end":160708,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160713,"byte_end":160716,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160721,"byte_end":160728,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160733,"byte_end":160774,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160779,"byte_end":160803,"line_start":659,"line_end":659,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160808,"byte_end":160851,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160856,"byte_end":160859,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160864,"byte_end":160902,"line_start":662,"line_end":662,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160907,"byte_end":160910,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160915,"byte_end":160978,"line_start":664,"line_end":664,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160983,"byte_end":160986,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160991,"byte_end":161062,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161067,"byte_end":161076,"line_start":667,"line_end":667,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161081,"byte_end":161088,"line_start":668,"line_end":668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162063,"byte_end":162073,"line_start":699,"line_end":699,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <Fut, F> (self, f: F) -> TakeWhile<Self, Fut, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161308,"byte_end":161384,"line_start":678,"line_end":678,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161389,"byte_end":161412,"line_start":679,"line_end":679,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161417,"byte_end":161420,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161425,"byte_end":161500,"line_start":681,"line_end":681,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161505,"byte_end":161577,"line_start":682,"line_end":682,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161582,"byte_end":161649,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161654,"byte_end":161657,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161662,"byte_end":161676,"line_start":685,"line_end":685,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161681,"byte_end":161684,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161689,"byte_end":161696,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161701,"byte_end":161742,"line_start":688,"line_end":688,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161747,"byte_end":161771,"line_start":689,"line_end":689,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161776,"byte_end":161819,"line_start":690,"line_end":690,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161824,"byte_end":161827,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161832,"byte_end":161870,"line_start":692,"line_end":692,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161875,"byte_end":161878,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161883,"byte_end":161946,"line_start":694,"line_end":694,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161951,"byte_end":161954,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161959,"byte_end":162029,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162034,"byte_end":162043,"line_start":697,"line_end":697,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162048,"byte_end":162055,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163557,"byte_end":163567,"line_start":744,"line_end":744,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn <Fut> (self, fut: Fut) -> TakeUntil<Self, Fut>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162275,"byte_end":162345,"line_start":708,"line_end":708,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162350,"byte_end":162353,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162358,"byte_end":162429,"line_start":710,"line_end":710,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162434,"byte_end":162506,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162511,"byte_end":162581,"line_start":712,"line_end":712,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162586,"byte_end":162589,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162594,"byte_end":162665,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162670,"byte_end":162756,"line_start":715,"line_end":715,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162761,"byte_end":162828,"line_start":716,"line_end":716,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162833,"byte_end":162897,"line_start":717,"line_end":717,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162902,"byte_end":162905,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162910,"byte_end":162924,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162929,"byte_end":162932,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162937,"byte_end":162944,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162949,"byte_end":162990,"line_start":722,"line_end":722,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162995,"byte_end":163019,"line_start":723,"line_end":723,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163024,"byte_end":163067,"line_start":724,"line_end":724,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163072,"byte_end":163100,"line_start":725,"line_end":725,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163105,"byte_end":163108,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163113,"byte_end":163151,"line_start":727,"line_end":727,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163156,"byte_end":163159,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163164,"byte_end":163182,"line_start":729,"line_end":729,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163187,"byte_end":163229,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163234,"byte_end":163249,"line_start":731,"line_end":731,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163254,"byte_end":163273,"line_start":732,"line_end":732,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163278,"byte_end":163303,"line_start":733,"line_end":733,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163308,"byte_end":163324,"line_start":734,"line_end":734,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163329,"byte_end":163356,"line_start":735,"line_end":735,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163361,"byte_end":163370,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163375,"byte_end":163382,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163387,"byte_end":163390,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163395,"byte_end":163440,"line_start":739,"line_end":739,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163445,"byte_end":163448,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163453,"byte_end":163523,"line_start":741,"line_end":741,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163528,"byte_end":163537,"line_start":742,"line_end":742,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163542,"byte_end":163549,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164774,"byte_end":164782,"line_start":785,"line_end":785,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <Fut, F> (self, f: F) -> ForEach<Self, Fut, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163716,"byte_end":163787,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163792,"byte_end":163835,"line_start":753,"line_end":753,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163840,"byte_end":163843,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163848,"byte_end":163923,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163928,"byte_end":163998,"line_start":756,"line_end":756,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164003,"byte_end":164041,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164046,"byte_end":164049,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164054,"byte_end":164129,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164134,"byte_end":164177,"line_start":760,"line_end":760,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164182,"byte_end":164185,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164190,"byte_end":164263,"line_start":762,"line_end":762,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164268,"byte_end":164311,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164316,"byte_end":164319,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164324,"byte_end":164338,"line_start":765,"line_end":765,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164343,"byte_end":164346,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164351,"byte_end":164358,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164363,"byte_end":164404,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164409,"byte_end":164433,"line_start":769,"line_end":769,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164438,"byte_end":164481,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164486,"byte_end":164489,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164494,"byte_end":164512,"line_start":772,"line_end":772,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164517,"byte_end":164520,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164525,"byte_end":164530,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164535,"byte_end":164596,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164601,"byte_end":164623,"line_start":776,"line_end":776,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164628,"byte_end":164657,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164662,"byte_end":164673,"line_start":778,"line_end":778,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164678,"byte_end":164696,"line_start":779,"line_end":779,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164701,"byte_end":164706,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164711,"byte_end":164714,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164719,"byte_end":164740,"line_start":782,"line_end":782,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164745,"byte_end":164754,"line_start":783,"line_end":783,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164759,"byte_end":164766,"line_start":784,"line_end":784,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166964,"byte_end":166983,"line_start":841,"line_end":841,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn <Fut, F> (self, limit: impl Into<Option<usize>>, f: F) -> ForEachConcurrent<Self, Fut, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164977,"byte_end":165048,"line_start":794,"line_end":794,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165053,"byte_end":165127,"line_start":795,"line_end":795,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165132,"byte_end":165146,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165151,"byte_end":165154,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165159,"byte_end":165222,"line_start":798,"line_end":798,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165227,"byte_end":165298,"line_start":799,"line_end":799,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165303,"byte_end":165355,"line_start":800,"line_end":800,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165360,"byte_end":165363,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165368,"byte_end":165443,"line_start":802,"line_end":802,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165448,"byte_end":165518,"line_start":803,"line_end":803,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165523,"byte_end":165587,"line_start":804,"line_end":804,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165592,"byte_end":165595,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165600,"byte_end":165671,"line_start":806,"line_end":806,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165676,"byte_end":165746,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165751,"byte_end":165812,"line_start":808,"line_end":808,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165817,"byte_end":165884,"line_start":809,"line_end":809,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165889,"byte_end":165958,"line_start":810,"line_end":810,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165963,"byte_end":166035,"line_start":811,"line_end":811,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166040,"byte_end":166043,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166048,"byte_end":166123,"line_start":813,"line_end":813,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166128,"byte_end":166185,"line_start":814,"line_end":814,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166190,"byte_end":166193,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166198,"byte_end":166212,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166217,"byte_end":166220,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166225,"byte_end":166232,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166237,"byte_end":166278,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166283,"byte_end":166317,"line_start":820,"line_end":820,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166322,"byte_end":166365,"line_start":821,"line_end":821,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166370,"byte_end":166373,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166378,"byte_end":166418,"line_start":823,"line_end":823,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166423,"byte_end":166463,"line_start":824,"line_end":824,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166468,"byte_end":166508,"line_start":825,"line_end":825,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166513,"byte_end":166516,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166521,"byte_end":166589,"line_start":827,"line_end":827,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166594,"byte_end":166616,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166621,"byte_end":166646,"line_start":829,"line_end":829,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166651,"byte_end":166681,"line_start":830,"line_end":830,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166686,"byte_end":166695,"line_start":831,"line_end":831,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166700,"byte_end":166706,"line_start":832,"line_end":832,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166711,"byte_end":166737,"line_start":833,"line_end":833,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166742,"byte_end":166768,"line_start":834,"line_end":834,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166773,"byte_end":166799,"line_start":835,"line_end":835,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166804,"byte_end":166818,"line_start":836,"line_end":836,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166823,"byte_end":166831,"line_start":837,"line_end":837,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166836,"byte_end":166843,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166931,"byte_end":166956,"line_start":840,"line_end":840,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167784,"byte_end":167788,"line_start":870,"line_end":870,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167276,"byte_end":167347,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167352,"byte_end":167355,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167360,"byte_end":167433,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167438,"byte_end":167473,"line_start":857,"line_end":857,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167478,"byte_end":167481,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167486,"byte_end":167500,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167505,"byte_end":167508,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167513,"byte_end":167520,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167525,"byte_end":167566,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167571,"byte_end":167614,"line_start":863,"line_end":863,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167619,"byte_end":167622,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167627,"byte_end":167673,"line_start":865,"line_end":865,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167678,"byte_end":167681,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167686,"byte_end":167750,"line_start":867,"line_end":867,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167755,"byte_end":167764,"line_start":868,"line_end":868,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167769,"byte_end":167776,"line_start":869,"line_end":869,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168421,"byte_end":168425,"line_start":893,"line_end":893,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167894,"byte_end":167966,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167971,"byte_end":167974,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167979,"byte_end":168052,"line_start":879,"line_end":879,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168057,"byte_end":168103,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168108,"byte_end":168111,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168116,"byte_end":168130,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168135,"byte_end":168138,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168143,"byte_end":168150,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168155,"byte_end":168196,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168201,"byte_end":168244,"line_start":886,"line_end":886,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168249,"byte_end":168252,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168257,"byte_end":168303,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168308,"byte_end":168311,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168316,"byte_end":168387,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168392,"byte_end":168401,"line_start":891,"line_end":891,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168406,"byte_end":168413,"line_start":892,"line_end":892,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170014,"byte_end":170018,"line_start":939,"line_end":939,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168531,"byte_end":168602,"line_start":900,"line_end":900,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168607,"byte_end":168680,"line_start":901,"line_end":901,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168685,"byte_end":168723,"line_start":902,"line_end":902,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168728,"byte_end":168731,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168736,"byte_end":168790,"line_start":904,"line_end":904,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168795,"byte_end":168867,"line_start":905,"line_end":905,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168872,"byte_end":168948,"line_start":906,"line_end":906,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168953,"byte_end":169021,"line_start":907,"line_end":907,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169026,"byte_end":169102,"line_start":908,"line_end":908,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169107,"byte_end":169129,"line_start":909,"line_end":909,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169134,"byte_end":169137,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169142,"byte_end":169209,"line_start":911,"line_end":911,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169214,"byte_end":169282,"line_start":912,"line_end":912,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169287,"byte_end":169300,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169305,"byte_end":169308,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169313,"byte_end":169327,"line_start":915,"line_end":915,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169332,"byte_end":169335,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169340,"byte_end":169347,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169352,"byte_end":169395,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169400,"byte_end":169443,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169448,"byte_end":169476,"line_start":920,"line_end":920,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169481,"byte_end":169484,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169489,"byte_end":169507,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169512,"byte_end":169550,"line_start":923,"line_end":923,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169555,"byte_end":169570,"line_start":924,"line_end":924,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169575,"byte_end":169592,"line_start":925,"line_end":925,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169597,"byte_end":169639,"line_start":926,"line_end":926,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169644,"byte_end":169679,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169684,"byte_end":169728,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169733,"byte_end":169742,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169747,"byte_end":169761,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169766,"byte_end":169769,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169774,"byte_end":169817,"line_start":932,"line_end":932,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169822,"byte_end":169859,"line_start":933,"line_end":933,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169864,"byte_end":169901,"line_start":934,"line_end":934,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169906,"byte_end":169940,"line_start":935,"line_end":935,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169945,"byte_end":169979,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169984,"byte_end":169994,"line_start":937,"line_end":937,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169999,"byte_end":170006,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170915,"byte_end":170921,"line_start":972,"line_end":972,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170111,"byte_end":170158,"line_start":946,"line_end":946,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170163,"byte_end":170166,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170171,"byte_end":170245,"line_start":948,"line_end":948,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170250,"byte_end":170287,"line_start":949,"line_end":949,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170292,"byte_end":170295,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170300,"byte_end":170314,"line_start":951,"line_end":951,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170319,"byte_end":170322,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170327,"byte_end":170334,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170339,"byte_end":170380,"line_start":954,"line_end":954,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170385,"byte_end":170428,"line_start":955,"line_end":955,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170433,"byte_end":170436,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170441,"byte_end":170481,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170486,"byte_end":170489,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170494,"byte_end":170523,"line_start":959,"line_end":959,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170528,"byte_end":170556,"line_start":960,"line_end":960,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170561,"byte_end":170618,"line_start":961,"line_end":961,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170623,"byte_end":170650,"line_start":962,"line_end":962,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170655,"byte_end":170678,"line_start":963,"line_end":963,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170683,"byte_end":170686,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170691,"byte_end":170726,"line_start":965,"line_end":965,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170731,"byte_end":170759,"line_start":966,"line_end":966,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170764,"byte_end":170821,"line_start":967,"line_end":967,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170826,"byte_end":170853,"line_start":968,"line_end":968,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170858,"byte_end":170881,"line_start":969,"line_end":969,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170886,"byte_end":170895,"line_start":970,"line_end":970,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170900,"byte_end":170907,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172680,"byte_end":172692,"line_start":1017,"line_end":1017,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170972,"byte_end":171026,"line_start":976,"line_end":976,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171031,"byte_end":171034,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171039,"byte_end":171114,"line_start":978,"line_end":978,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171119,"byte_end":171122,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171127,"byte_end":171202,"line_start":980,"line_end":980,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171207,"byte_end":171281,"line_start":981,"line_end":981,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171286,"byte_end":171360,"line_start":982,"line_end":982,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171365,"byte_end":171414,"line_start":983,"line_end":983,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171419,"byte_end":171422,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171427,"byte_end":171502,"line_start":985,"line_end":985,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171507,"byte_end":171577,"line_start":986,"line_end":986,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171582,"byte_end":171649,"line_start":987,"line_end":987,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171654,"byte_end":171726,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171731,"byte_end":171800,"line_start":989,"line_end":989,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171805,"byte_end":171820,"line_start":990,"line_end":990,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171825,"byte_end":171828,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171833,"byte_end":171897,"line_start":992,"line_end":992,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171902,"byte_end":171959,"line_start":993,"line_end":993,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171964,"byte_end":171967,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171972,"byte_end":171986,"line_start":995,"line_end":995,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171991,"byte_end":171994,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171999,"byte_end":172006,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172011,"byte_end":172052,"line_start":998,"line_end":998,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172057,"byte_end":172100,"line_start":999,"line_end":999,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172105,"byte_end":172108,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172113,"byte_end":172175,"line_start":1001,"line_end":1001,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172180,"byte_end":172210,"line_start":1002,"line_end":1002,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172215,"byte_end":172269,"line_start":1003,"line_end":1003,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172274,"byte_end":172304,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172309,"byte_end":172358,"line_start":1005,"line_end":1005,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172363,"byte_end":172366,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172371,"byte_end":172433,"line_start":1007,"line_end":1007,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172438,"byte_end":172460,"line_start":1008,"line_end":1008,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172465,"byte_end":172485,"line_start":1009,"line_end":1009,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172490,"byte_end":172532,"line_start":1010,"line_end":1010,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172537,"byte_end":172542,"line_start":1011,"line_end":1011,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172547,"byte_end":172580,"line_start":1012,"line_end":1012,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172585,"byte_end":172618,"line_start":1013,"line_end":1013,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172623,"byte_end":172632,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172637,"byte_end":172644,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172649,"byte_end":172672,"line_start":1016,"line_end":1016,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173053,"byte_end":173058,"line_start":1029,"line_end":1029,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn <'a> (self) -> BoxStream<'a, Self::Item>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172824,"byte_end":172865,"line_start":1024,"line_end":1024,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172870,"byte_end":172873,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172878,"byte_end":172953,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172958,"byte_end":173015,"line_start":1027,"line_end":1027,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173020,"byte_end":173045,"line_start":1028,"line_end":1028,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173482,"byte_end":173493,"line_start":1043,"line_end":1043,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn <'a> (self) -> LocalBoxStream<'a, Self::Item>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173181,"byte_end":173222,"line_start":1036,"line_end":1036,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173227,"byte_end":173230,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173235,"byte_end":173294,"line_start":1038,"line_end":1038,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173299,"byte_end":173302,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173307,"byte_end":173382,"line_start":1040,"line_end":1040,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173387,"byte_end":173444,"line_start":1041,"line_end":1041,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173449,"byte_end":173474,"line_start":1042,"line_end":1042,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174398,"byte_end":174406,"line_start":1064,"line_end":1064,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn (self, n: usize) -> Buffered<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173614,"byte_end":173677,"line_start":1050,"line_end":1050,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173682,"byte_end":173685,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173690,"byte_end":173765,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173770,"byte_end":173846,"line_start":1053,"line_end":1053,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173851,"byte_end":173924,"line_start":1054,"line_end":1054,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173929,"byte_end":174002,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174007,"byte_end":174049,"line_start":1056,"line_end":1056,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174054,"byte_end":174057,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174062,"byte_end":174127,"line_start":1058,"line_end":1058,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174132,"byte_end":174135,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174140,"byte_end":174215,"line_start":1060,"line_end":1060,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174220,"byte_end":174277,"line_start":1061,"line_end":1061,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174365,"byte_end":174390,"line_start":1063,"line_end":1063,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176078,"byte_end":176094,"line_start":1109,"line_end":1109,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn (self, n: usize) -> BufferUnordered<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174548,"byte_end":174623,"line_start":1072,"line_end":1072,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174628,"byte_end":174631,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174636,"byte_end":174711,"line_start":1074,"line_end":1074,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174716,"byte_end":174790,"line_start":1075,"line_end":1075,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174795,"byte_end":174867,"line_start":1076,"line_end":1076,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174872,"byte_end":174946,"line_start":1077,"line_end":1077,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174951,"byte_end":174980,"line_start":1078,"line_end":1078,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174985,"byte_end":174988,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174993,"byte_end":175058,"line_start":1080,"line_end":1080,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175063,"byte_end":175066,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175071,"byte_end":175146,"line_start":1082,"line_end":1082,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175151,"byte_end":175208,"line_start":1083,"line_end":1083,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175213,"byte_end":175216,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175221,"byte_end":175235,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175240,"byte_end":175243,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175248,"byte_end":175255,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175260,"byte_end":175301,"line_start":1088,"line_end":1088,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175306,"byte_end":175340,"line_start":1089,"line_end":1089,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175345,"byte_end":175388,"line_start":1090,"line_end":1090,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175393,"byte_end":175396,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175401,"byte_end":175451,"line_start":1092,"line_end":1092,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175456,"byte_end":175506,"line_start":1093,"line_end":1093,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175511,"byte_end":175514,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175519,"byte_end":175586,"line_start":1095,"line_end":1095,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175591,"byte_end":175653,"line_start":1096,"line_end":1096,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175658,"byte_end":175661,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175666,"byte_end":175691,"line_start":1098,"line_end":1098,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175696,"byte_end":175750,"line_start":1099,"line_end":1099,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175755,"byte_end":175758,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175763,"byte_end":175788,"line_start":1101,"line_end":1101,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175793,"byte_end":175847,"line_start":1102,"line_end":1102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175852,"byte_end":175855,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175860,"byte_end":175904,"line_start":1104,"line_end":1104,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175909,"byte_end":175945,"line_start":1105,"line_end":1105,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175950,"byte_end":175957,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176045,"byte_end":176070,"line_start":1108,"line_end":1108,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176938,"byte_end":176941,"line_start":1139,"line_end":1139,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <St> (self, other: St) -> Zip<Self, St>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176250,"byte_end":176298,"line_start":1117,"line_end":1117,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176303,"byte_end":176306,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176311,"byte_end":176384,"line_start":1119,"line_end":1119,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176389,"byte_end":176461,"line_start":1120,"line_end":1120,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176466,"byte_end":176479,"line_start":1121,"line_end":1121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176484,"byte_end":176487,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176492,"byte_end":176506,"line_start":1123,"line_end":1123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176511,"byte_end":176514,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176519,"byte_end":176526,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176531,"byte_end":176572,"line_start":1126,"line_end":1126,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176577,"byte_end":176620,"line_start":1127,"line_end":1127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176625,"byte_end":176628,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176633,"byte_end":176671,"line_start":1129,"line_end":1129,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176676,"byte_end":176715,"line_start":1130,"line_end":1130,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176720,"byte_end":176723,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176728,"byte_end":176762,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176767,"byte_end":176808,"line_start":1133,"line_end":1133,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176813,"byte_end":176841,"line_start":1134,"line_end":1134,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176846,"byte_end":176896,"line_start":1135,"line_end":1135,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176901,"byte_end":176910,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176915,"byte_end":176922,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176927,"byte_end":176930,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177805,"byte_end":177810,"line_start":1170,"line_end":1170,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <St> (self, other: St) -> Chain<Self, St>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177078,"byte_end":177115,"line_start":1147,"line_end":1147,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177120,"byte_end":177123,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177128,"byte_end":177199,"line_start":1149,"line_end":1149,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177204,"byte_end":177280,"line_start":1150,"line_end":1150,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177285,"byte_end":177288,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177293,"byte_end":177300,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177305,"byte_end":177346,"line_start":1153,"line_end":1153,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177351,"byte_end":177394,"line_start":1154,"line_end":1154,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177399,"byte_end":177402,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177407,"byte_end":177464,"line_start":1156,"line_end":1156,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177469,"byte_end":177525,"line_start":1157,"line_end":1157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177530,"byte_end":177533,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177538,"byte_end":177578,"line_start":1159,"line_end":1159,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177583,"byte_end":177586,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177591,"byte_end":177639,"line_start":1161,"line_end":1161,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177644,"byte_end":177672,"line_start":1162,"line_end":1162,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177677,"byte_end":177692,"line_start":1163,"line_end":1163,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177697,"byte_end":177716,"line_start":1164,"line_end":1164,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177721,"byte_end":177739,"line_start":1165,"line_end":1165,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177744,"byte_end":177759,"line_start":1166,"line_end":1166,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177764,"byte_end":177771,"line_start":1167,"line_end":1167,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177776,"byte_end":177785,"line_start":1168,"line_end":1168,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177790,"byte_end":177797,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178116,"byte_end":178124,"line_start":1181,"line_end":1181,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177970,"byte_end":178025,"line_start":1178,"line_end":1178,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178030,"byte_end":178033,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178038,"byte_end":178108,"line_start":1180,"line_end":1180,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179127,"byte_end":179133,"line_start":1207,"line_end":1207,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn (self, capacity: usize) -> Chunks<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178225,"byte_end":178292,"line_start":1188,"line_end":1188,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178297,"byte_end":178300,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178305,"byte_end":178379,"line_start":1190,"line_end":1190,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178384,"byte_end":178456,"line_start":1191,"line_end":1191,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178461,"byte_end":178513,"line_start":1192,"line_end":1192,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178518,"byte_end":178521,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178526,"byte_end":178599,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178604,"byte_end":178678,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178683,"byte_end":178758,"line_start":1196,"line_end":1196,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178763,"byte_end":178835,"line_start":1197,"line_end":1197,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178840,"byte_end":178852,"line_start":1198,"line_end":1198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178857,"byte_end":178860,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178865,"byte_end":178940,"line_start":1200,"line_end":1200,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178945,"byte_end":179002,"line_start":1201,"line_end":1201,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179007,"byte_end":179010,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179015,"byte_end":179027,"line_start":1203,"line_end":1203,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179032,"byte_end":179035,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179040,"byte_end":179089,"line_start":1205,"line_end":1205,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179094,"byte_end":179119,"line_start":1206,"line_end":1206,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180193,"byte_end":180205,"line_start":1233,"line_end":1233,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"fn (self, capacity: usize) -> ReadyChunks<Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179257,"byte_end":179330,"line_start":1214,"line_end":1214,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179335,"byte_end":179338,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179343,"byte_end":179416,"line_start":1216,"line_end":1216,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179421,"byte_end":179491,"line_start":1217,"line_end":1217,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179496,"byte_end":179571,"line_start":1218,"line_end":1218,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179576,"byte_end":179653,"line_start":1219,"line_end":1219,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179658,"byte_end":179686,"line_start":1220,"line_end":1220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179691,"byte_end":179694,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179699,"byte_end":179772,"line_start":1222,"line_end":1222,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179777,"byte_end":179852,"line_start":1223,"line_end":1223,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179857,"byte_end":179918,"line_start":1224,"line_end":1224,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179923,"byte_end":179926,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179931,"byte_end":180006,"line_start":1226,"line_end":1226,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180011,"byte_end":180068,"line_start":1227,"line_end":1227,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180073,"byte_end":180076,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180081,"byte_end":180093,"line_start":1229,"line_end":1229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180098,"byte_end":180101,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180106,"byte_end":180155,"line_start":1231,"line_end":1231,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180160,"byte_end":180185,"line_start":1232,"line_end":1232,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181043,"byte_end":181050,"line_start":1251,"line_end":1251,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"fn <S> (self, sink: S) -> Forward<Self, S>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180347,"byte_end":180422,"line_start":1240,"line_end":1240,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180427,"byte_end":180486,"line_start":1241,"line_end":1241,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180491,"byte_end":180494,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180499,"byte_end":180572,"line_start":1243,"line_end":1243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180577,"byte_end":180648,"line_start":1244,"line_end":1244,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180653,"byte_end":180726,"line_start":1245,"line_end":1245,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180731,"byte_end":180805,"line_start":1246,"line_end":1246,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180810,"byte_end":180880,"line_start":1247,"line_end":1247,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180885,"byte_end":180958,"line_start":1248,"line_end":1248,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180963,"byte_end":181006,"line_start":1249,"line_end":1249,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181011,"byte_end":181035,"line_start":1250,"line_end":1250,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181799,"byte_end":181804,"line_start":1271,"line_end":1271,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"fn <Item> (self) -> (SplitSink<Self, Item>, SplitStream<Self>)","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181230,"byte_end":181302,"line_start":1259,"line_end":1259,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181307,"byte_end":181319,"line_start":1260,"line_end":1260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181324,"byte_end":181327,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181332,"byte_end":181405,"line_start":1262,"line_end":1262,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181410,"byte_end":181472,"line_start":1263,"line_end":1263,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181477,"byte_end":181499,"line_start":1264,"line_end":1264,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181504,"byte_end":181507,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181512,"byte_end":181587,"line_start":1266,"line_end":1266,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181592,"byte_end":181649,"line_start":1267,"line_end":1267,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181654,"byte_end":181678,"line_start":1268,"line_end":1268,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181766,"byte_end":181791,"line_start":1270,"line_end":1270,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182254,"byte_end":182261,"line_start":1283,"line_end":1283,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181951,"byte_end":182024,"line_start":1278,"line_end":1278,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182029,"byte_end":182032,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182037,"byte_end":182106,"line_start":1280,"line_end":1280,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182111,"byte_end":182180,"line_start":1281,"line_end":1281,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182185,"byte_end":182246,"line_start":1282,"line_end":1282,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182685,"byte_end":182696,"line_start":1296,"line_end":1296,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182406,"byte_end":182481,"line_start":1291,"line_end":1291,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182486,"byte_end":182507,"line_start":1292,"line_end":1292,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182512,"byte_end":182515,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182520,"byte_end":182600,"line_start":1294,"line_end":1294,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182605,"byte_end":182677,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183117,"byte_end":183129,"line_start":1309,"line_end":1309,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn <B> (self) -> Either<B, Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182838,"byte_end":182914,"line_start":1304,"line_end":1304,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182919,"byte_end":182940,"line_start":1305,"line_end":1305,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182945,"byte_end":182948,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182953,"byte_end":183032,"line_start":1307,"line_end":1307,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183037,"byte_end":183109,"line_start":1308,"line_end":1308,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183373,"byte_end":183388,"line_start":1319,"line_end":1319,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183272,"byte_end":183343,"line_start":1317,"line_end":1317,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183348,"byte_end":183365,"line_start":1318,"line_end":1318,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185489,"byte_end":185505,"line_start":1374,"line_end":1374,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn (&mut self) -> SelectNextSome<'_, Self>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183535,"byte_end":183610,"line_start":1326,"line_end":1326,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183615,"byte_end":183625,"line_start":1327,"line_end":1327,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183630,"byte_end":183633,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183638,"byte_end":183711,"line_start":1329,"line_end":1329,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183716,"byte_end":183784,"line_start":1330,"line_end":1330,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183789,"byte_end":183837,"line_start":1331,"line_end":1331,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183842,"byte_end":183917,"line_start":1332,"line_end":1332,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183922,"byte_end":183998,"line_start":1333,"line_end":1333,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184003,"byte_end":184029,"line_start":1334,"line_end":1334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184034,"byte_end":184037,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184042,"byte_end":184115,"line_start":1336,"line_end":1336,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184120,"byte_end":184190,"line_start":1337,"line_end":1337,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184195,"byte_end":184235,"line_start":1338,"line_end":1338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184240,"byte_end":184243,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184248,"byte_end":184302,"line_start":1340,"line_end":1340,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184307,"byte_end":184391,"line_start":1341,"line_end":1341,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184396,"byte_end":184399,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184404,"byte_end":184418,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184423,"byte_end":184426,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184431,"byte_end":184438,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184443,"byte_end":184484,"line_start":1346,"line_end":1346,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184489,"byte_end":184523,"line_start":1347,"line_end":1347,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184528,"byte_end":184583,"line_start":1348,"line_end":1348,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184588,"byte_end":184591,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184596,"byte_end":184631,"line_start":1350,"line_end":1350,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184636,"byte_end":184686,"line_start":1351,"line_end":1351,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184691,"byte_end":184713,"line_start":1352,"line_end":1352,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184718,"byte_end":184728,"line_start":1353,"line_end":1353,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184733,"byte_end":184750,"line_start":1354,"line_end":1354,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184755,"byte_end":184781,"line_start":1355,"line_end":1355,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184786,"byte_end":184841,"line_start":1356,"line_end":1356,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184846,"byte_end":184875,"line_start":1357,"line_end":1357,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184880,"byte_end":184943,"line_start":1358,"line_end":1358,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184948,"byte_end":184994,"line_start":1359,"line_end":1359,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184999,"byte_end":185013,"line_start":1360,"line_end":1360,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185018,"byte_end":185087,"line_start":1361,"line_end":1361,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185092,"byte_end":185117,"line_start":1362,"line_end":1362,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185122,"byte_end":185175,"line_start":1363,"line_end":1363,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185180,"byte_end":185209,"line_start":1364,"line_end":1364,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185214,"byte_end":185227,"line_start":1365,"line_end":1365,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185232,"byte_end":185302,"line_start":1366,"line_end":1366,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185307,"byte_end":185366,"line_start":1367,"line_end":1367,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185371,"byte_end":185401,"line_start":1368,"line_end":1368,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185406,"byte_end":185415,"line_start":1369,"line_end":1369,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185420,"byte_end":185425,"line_start":1370,"line_end":1370,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185430,"byte_end":185455,"line_start":1371,"line_end":1371,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185460,"byte_end":185469,"line_start":1372,"line_end":1372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185474,"byte_end":185481,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9591},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287524,"byte_end":287531,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9596},{"krate":0,"index":9597},{"krate":0,"index":9595}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287464,"byte_end":287512,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287449,"byte_end":287463,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9623},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287524,"byte_end":287531,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":9628},{"krate":0,"index":9629},{"krate":0,"index":9630}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9668},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9671}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9690},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":9694},{"krate":0,"index":9695}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9753},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9756}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9775},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":9779},{"krate":0,"index":9780}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9838},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9841}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9860},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":9864},{"krate":0,"index":9865}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9920},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290321,"byte_end":290331,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9922}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290261,"byte_end":290309,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290229,"byte_end":290243,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9938},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290321,"byte_end":290331,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":9941},{"krate":0,"index":9942}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9972},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9975}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9994},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":9998},{"krate":0,"index":9999}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10057},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":10060}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":10079},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":10083},{"krate":0,"index":10084}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10139},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":291663,"byte_end":291669,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":10144},{"krate":0,"index":10145},{"krate":0,"index":10143}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":291603,"byte_end":291651,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":291588,"byte_end":291602,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10171},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":291663,"byte_end":291669,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":10176},{"krate":0,"index":10177},{"krate":0,"index":10178}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10213},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294574,"byte_end":294581,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":10216}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294407,"byte_end":294477,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294495,"byte_end":294562,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10221},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":295661,"byte_end":295671,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":10226},{"krate":0,"index":10225},{"krate":0,"index":10227}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":295582,"byte_end":295649,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":295567,"byte_end":295581,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10253},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":295661,"byte_end":295671,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":10258},{"krate":0,"index":10259},{"krate":0,"index":10260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10287},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":297616,"byte_end":297625,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":10293},{"krate":0,"index":10291},{"krate":0,"index":10294},{"krate":0,"index":10292}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":297556,"byte_end":297604,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":297541,"byte_end":297555,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10322},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":297616,"byte_end":297625,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":10327},{"krate":0,"index":10328},{"krate":0,"index":10329}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10364},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":300853,"byte_end":300865,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":10369},{"krate":0,"index":10368},{"krate":0,"index":10370}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":300793,"byte_end":300841,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":300778,"byte_end":300792,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10396},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":300853,"byte_end":300865,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":10401},{"krate":0,"index":10402},{"krate":0,"index":10403}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10438},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":303884,"byte_end":303894,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":10440},{"krate":0,"index":10441}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":303824,"byte_end":303872,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":303792,"byte_end":303806,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10459},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":303884,"byte_end":303894,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":10462},{"krate":0,"index":10463},{"krate":0,"index":10464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10492},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":306043,"byte_end":306053,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":10496},{"krate":0,"index":10495}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":305964,"byte_end":306031,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":305932,"byte_end":305946,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10517},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":306043,"byte_end":306053,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":10521},{"krate":0,"index":10522}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10548},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":307467,"byte_end":307476,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":10551},{"krate":0,"index":10550}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":307388,"byte_end":307455,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":307356,"byte_end":307370,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10569},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":307467,"byte_end":307476,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":10572},{"krate":0,"index":10573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10593},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":308924,"byte_end":308931,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":10600},{"krate":0,"index":10598},{"krate":0,"index":10599},{"krate":0,"index":10601}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":308845,"byte_end":308912,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":308830,"byte_end":308844,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10632},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":308924,"byte_end":308931,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":10638},{"krate":0,"index":10639},{"krate":0,"index":10640}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2470},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313433,"byte_end":313443,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> TryUnfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311576,"byte_end":311652,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311653,"byte_end":311656,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311657,"byte_end":311733,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311734,"byte_end":311804,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311805,"byte_end":311864,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311865,"byte_end":311868,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311869,"byte_end":311947,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311948,"byte_end":312025,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312026,"byte_end":312090,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312091,"byte_end":312094,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312095,"byte_end":312167,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312168,"byte_end":312246,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312247,"byte_end":312276,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312277,"byte_end":312280,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312281,"byte_end":312358,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312359,"byte_end":312423,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312424,"byte_end":312476,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312477,"byte_end":312480,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312481,"byte_end":312558,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312559,"byte_end":312631,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312632,"byte_end":312701,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312702,"byte_end":312780,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312781,"byte_end":312784,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312785,"byte_end":312798,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312799,"byte_end":312802,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312803,"byte_end":312810,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312811,"byte_end":312844,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312845,"byte_end":312868,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312869,"byte_end":312910,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312911,"byte_end":312957,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312958,"byte_end":312961,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":312962,"byte_end":313021,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313022,"byte_end":313044,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313045,"byte_end":313079,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313080,"byte_end":313089,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313090,"byte_end":313093,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313094,"byte_end":313117,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313118,"byte_end":313157,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313158,"byte_end":313194,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313195,"byte_end":313238,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313239,"byte_end":313255,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313256,"byte_end":313276,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313277,"byte_end":313286,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313287,"byte_end":313294,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313295,"byte_end":313298,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313299,"byte_end":313364,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313365,"byte_end":313407,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313408,"byte_end":313417,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313418,"byte_end":313425,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10672},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313777,"byte_end":313786,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":10676},{"krate":0,"index":10677},{"krate":0,"index":10678}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313717,"byte_end":313765,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313702,"byte_end":313716,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10704},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313777,"byte_end":313786,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":10709},{"krate":0,"index":10710}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10737},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":315737,"byte_end":315749,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":10744},{"krate":0,"index":10741},{"krate":0,"index":10745},{"krate":0,"index":10742},{"krate":0,"index":10743}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":315677,"byte_end":315725,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":315662,"byte_end":315676,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10775},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":315737,"byte_end":315749,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":10780},{"krate":0,"index":10781},{"krate":0,"index":10782}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13179},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8549701,"byte_end":8549719,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13183},{"krate":0,"index":13181},{"krate":0,"index":13182}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8549641,"byte_end":8549689,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8549609,"byte_end":8549623,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":13203},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8549701,"byte_end":8549719,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"__TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::_::__TryBufferUnordered","value":"__TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13206},{"krate":0,"index":13207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13111},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8552308,"byte_end":8552328,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13118},{"krate":0,"index":13115},{"krate":0,"index":13116},{"krate":0,"index":13117}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8552229,"byte_end":8552296,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8552214,"byte_end":8552228,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":13146},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8552308,"byte_end":8552328,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"__TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::_::__TryForEachConcurrent","value":"__TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13151},{"krate":0,"index":13152}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10897},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319366,"byte_end":319379,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":10899},{"krate":0,"index":10900}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319204,"byte_end":319288,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319306,"byte_end":319354,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2568},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261081,"byte_end":261093,"line_start":131,"line_end":131,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2577},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2592},{"krate":0,"index":2595},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":2604},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261019,"byte_end":261070,"line_start":130,"line_end":130,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261635,"byte_end":261643,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261111,"byte_end":261185,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261190,"byte_end":261216,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261221,"byte_end":261224,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261229,"byte_end":261243,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261248,"byte_end":261251,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261256,"byte_end":261263,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261268,"byte_end":261309,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261314,"byte_end":261360,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261365,"byte_end":261368,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261373,"byte_end":261393,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261398,"byte_end":261443,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261448,"byte_end":261479,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261484,"byte_end":261487,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261492,"byte_end":261546,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261551,"byte_end":261602,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261607,"byte_end":261615,"line_start":147,"line_end":147,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261620,"byte_end":261627,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262298,"byte_end":262304,"line_start":174,"line_end":174,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261778,"byte_end":261851,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261856,"byte_end":261887,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261892,"byte_end":261895,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261900,"byte_end":261914,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261919,"byte_end":261922,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261927,"byte_end":261934,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261939,"byte_end":261980,"line_start":163,"line_end":163,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261985,"byte_end":262031,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262036,"byte_end":262039,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262044,"byte_end":262064,"line_start":166,"line_end":166,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262069,"byte_end":262110,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262115,"byte_end":262146,"line_start":168,"line_end":168,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262151,"byte_end":262154,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262159,"byte_end":262212,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262217,"byte_end":262265,"line_start":171,"line_end":171,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262270,"byte_end":262278,"line_start":172,"line_end":172,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262283,"byte_end":262290,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262969,"byte_end":262976,"line_start":199,"line_end":199,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262450,"byte_end":262521,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262526,"byte_end":262557,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262562,"byte_end":262565,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262570,"byte_end":262584,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262589,"byte_end":262592,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262597,"byte_end":262604,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262609,"byte_end":262650,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262655,"byte_end":262701,"line_start":189,"line_end":189,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262706,"byte_end":262709,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262714,"byte_end":262734,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262739,"byte_end":262780,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262785,"byte_end":262817,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262822,"byte_end":262825,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262830,"byte_end":262883,"line_start":195,"line_end":195,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262888,"byte_end":262936,"line_start":196,"line_end":196,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262941,"byte_end":262949,"line_start":197,"line_end":197,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262954,"byte_end":262961,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264540,"byte_end":264548,"line_start":245,"line_end":245,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263127,"byte_end":263203,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263208,"byte_end":263248,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263253,"byte_end":263256,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263261,"byte_end":263337,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263342,"byte_end":263418,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263423,"byte_end":263496,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263501,"byte_end":263543,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263548,"byte_end":263551,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263556,"byte_end":263629,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263634,"byte_end":263665,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263670,"byte_end":263673,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263678,"byte_end":263752,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263757,"byte_end":263831,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263836,"byte_end":263852,"line_start":220,"line_end":220,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263857,"byte_end":263860,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263865,"byte_end":263936,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263941,"byte_end":263967,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263972,"byte_end":263975,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263980,"byte_end":264052,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264057,"byte_end":264106,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264111,"byte_end":264114,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264119,"byte_end":264133,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264138,"byte_end":264141,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264146,"byte_end":264153,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264158,"byte_end":264189,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264194,"byte_end":264218,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264223,"byte_end":264261,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264266,"byte_end":264269,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264274,"byte_end":264330,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264335,"byte_end":264338,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264343,"byte_end":264378,"line_start":237,"line_end":237,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264383,"byte_end":264422,"line_start":238,"line_end":238,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264427,"byte_end":264451,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264456,"byte_end":264472,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264477,"byte_end":264493,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264498,"byte_end":264508,"line_start":242,"line_end":242,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264513,"byte_end":264520,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264525,"byte_end":264532,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265651,"byte_end":265658,"line_start":271,"line_end":271,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264752,"byte_end":264817,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264822,"byte_end":264871,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264876,"byte_end":264879,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264884,"byte_end":264963,"line_start":257,"line_end":257,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264968,"byte_end":265042,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265047,"byte_end":265123,"line_start":259,"line_end":259,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265128,"byte_end":265173,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265178,"byte_end":265181,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265186,"byte_end":265261,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265266,"byte_end":265306,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265311,"byte_end":265314,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265319,"byte_end":265428,"line_start":265,"line_end":265,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265433,"byte_end":265507,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265512,"byte_end":265528,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265533,"byte_end":265536,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265541,"byte_end":265612,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265617,"byte_end":265643,"line_start":270,"line_end":270,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266160,"byte_end":266170,"line_start":286,"line_end":286,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265857,"byte_end":265931,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265936,"byte_end":265946,"line_start":281,"line_end":281,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265951,"byte_end":265954,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265959,"byte_end":266029,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266034,"byte_end":266110,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266115,"byte_end":266152,"line_start":285,"line_end":285,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266608,"byte_end":266619,"line_start":299,"line_end":299,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266317,"byte_end":266396,"line_start":294,"line_end":294,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266401,"byte_end":266404,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266409,"byte_end":266479,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266484,"byte_end":266558,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266563,"byte_end":266600,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267489,"byte_end":267500,"line_start":328,"line_end":328,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266771,"byte_end":266824,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266829,"byte_end":266873,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266878,"byte_end":266881,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266886,"byte_end":266935,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266940,"byte_end":267013,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267018,"byte_end":267038,"line_start":312,"line_end":312,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267043,"byte_end":267046,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267051,"byte_end":267065,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267070,"byte_end":267073,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267078,"byte_end":267085,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267090,"byte_end":267149,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267154,"byte_end":267157,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267162,"byte_end":267181,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267186,"byte_end":267204,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267209,"byte_end":267281,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267286,"byte_end":267316,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267321,"byte_end":267328,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267333,"byte_end":267407,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267412,"byte_end":267415,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267420,"byte_end":267469,"line_start":326,"line_end":326,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267474,"byte_end":267481,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268344,"byte_end":268352,"line_start":355,"line_end":355,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267605,"byte_end":267679,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267684,"byte_end":267758,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267763,"byte_end":267775,"line_start":337,"line_end":337,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267780,"byte_end":267783,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267788,"byte_end":267855,"line_start":339,"line_end":339,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267860,"byte_end":267932,"line_start":340,"line_end":340,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267937,"byte_end":267976,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267981,"byte_end":267984,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267989,"byte_end":268003,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268008,"byte_end":268011,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268016,"byte_end":268023,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268028,"byte_end":268069,"line_start":346,"line_end":346,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268074,"byte_end":268120,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268125,"byte_end":268128,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268133,"byte_end":268190,"line_start":349,"line_end":349,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268195,"byte_end":268198,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268203,"byte_end":268257,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268262,"byte_end":268311,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268316,"byte_end":268324,"line_start":353,"line_end":353,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268329,"byte_end":268336,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269645,"byte_end":269657,"line_start":395,"line_end":395,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn <Fut, F> (self, f: F) -> TryForEach<Self, Fut, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268460,"byte_end":268529,"line_start":362,"line_end":362,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268534,"byte_end":268590,"line_start":363,"line_end":363,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268595,"byte_end":268598,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268603,"byte_end":268678,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268683,"byte_end":268753,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268758,"byte_end":268796,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268801,"byte_end":268804,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268809,"byte_end":268887,"line_start":369,"line_end":369,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268892,"byte_end":268952,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268957,"byte_end":269014,"line_start":371,"line_end":371,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269019,"byte_end":269086,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269091,"byte_end":269121,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269126,"byte_end":269129,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269134,"byte_end":269148,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269153,"byte_end":269156,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269161,"byte_end":269168,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269173,"byte_end":269214,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269219,"byte_end":269243,"line_start":379,"line_end":379,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269248,"byte_end":269294,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269299,"byte_end":269302,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269307,"byte_end":269328,"line_start":382,"line_end":382,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269333,"byte_end":269336,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269341,"byte_end":269346,"line_start":384,"line_end":384,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269351,"byte_end":269412,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269417,"byte_end":269439,"line_start":386,"line_end":386,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269444,"byte_end":269508,"line_start":387,"line_end":387,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269513,"byte_end":269524,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269529,"byte_end":269568,"line_start":389,"line_end":389,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269573,"byte_end":269578,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269583,"byte_end":269586,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269591,"byte_end":269612,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269617,"byte_end":269625,"line_start":393,"line_end":393,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269630,"byte_end":269637,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270625,"byte_end":270639,"line_start":425,"line_end":425,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn <Fut, F> (self, f: F) -> TrySkipWhile<Self, Fut, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269876,"byte_end":269950,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269955,"byte_end":269978,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269983,"byte_end":269986,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269991,"byte_end":270022,"line_start":407,"line_end":407,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270027,"byte_end":270104,"line_start":408,"line_end":408,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270109,"byte_end":270138,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270143,"byte_end":270146,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270151,"byte_end":270165,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270170,"byte_end":270173,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270178,"byte_end":270185,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270190,"byte_end":270231,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270236,"byte_end":270260,"line_start":415,"line_end":415,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270265,"byte_end":270311,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270316,"byte_end":270319,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270324,"byte_end":270393,"line_start":418,"line_end":418,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270398,"byte_end":270468,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270473,"byte_end":270476,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270481,"byte_end":270548,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270553,"byte_end":270592,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270597,"byte_end":270605,"line_start":423,"line_end":423,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270610,"byte_end":270617,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272547,"byte_end":272570,"line_start":477,"line_end":477,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn <Fut, F> (self, limit: impl Into<Option<usize>>, f: F) -> TryForEachConcurrent<Self, Fut, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270865,"byte_end":270947,"line_start":434,"line_end":434,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270952,"byte_end":271026,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271031,"byte_end":271081,"line_start":436,"line_end":436,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271086,"byte_end":271089,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271094,"byte_end":271116,"line_start":438,"line_end":438,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271121,"byte_end":271207,"line_start":439,"line_end":439,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271212,"byte_end":271297,"line_start":440,"line_end":440,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271302,"byte_end":271330,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271335,"byte_end":271338,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271343,"byte_end":271418,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271423,"byte_end":271480,"line_start":444,"line_end":444,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271485,"byte_end":271488,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271493,"byte_end":271507,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271512,"byte_end":271515,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271520,"byte_end":271527,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271532,"byte_end":271573,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271578,"byte_end":271612,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271617,"byte_end":271674,"line_start":451,"line_end":451,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271679,"byte_end":271682,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271687,"byte_end":271727,"line_start":453,"line_end":453,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271732,"byte_end":271772,"line_start":454,"line_end":454,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271777,"byte_end":271818,"line_start":455,"line_end":455,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271823,"byte_end":271826,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271831,"byte_end":271882,"line_start":457,"line_end":457,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271887,"byte_end":271940,"line_start":458,"line_end":458,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271945,"byte_end":271967,"line_start":459,"line_end":459,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271972,"byte_end":271997,"line_start":460,"line_end":460,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272002,"byte_end":272064,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272069,"byte_end":272084,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272089,"byte_end":272098,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272103,"byte_end":272109,"line_start":464,"line_end":464,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272114,"byte_end":272117,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272122,"byte_end":272148,"line_start":466,"line_end":466,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272153,"byte_end":272220,"line_start":467,"line_end":467,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272225,"byte_end":272239,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272244,"byte_end":272247,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272252,"byte_end":272313,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272318,"byte_end":272346,"line_start":471,"line_end":471,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272351,"byte_end":272401,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272406,"byte_end":272414,"line_start":473,"line_end":473,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272419,"byte_end":272426,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272514,"byte_end":272539,"line_start":476,"line_end":476,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273927,"byte_end":273938,"line_start":520,"line_end":520,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn <C> (self) -> TryCollect<Self, C>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272888,"byte_end":272940,"line_start":490,"line_end":490,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272945,"byte_end":273012,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273017,"byte_end":273020,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273025,"byte_end":273099,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273104,"byte_end":273185,"line_start":494,"line_end":494,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273190,"byte_end":273260,"line_start":495,"line_end":495,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273265,"byte_end":273268,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273273,"byte_end":273341,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273346,"byte_end":273349,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273354,"byte_end":273368,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273373,"byte_end":273376,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273381,"byte_end":273388,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273393,"byte_end":273434,"line_start":502,"line_end":502,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273439,"byte_end":273470,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273475,"byte_end":273513,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273518,"byte_end":273538,"line_start":505,"line_end":505,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273543,"byte_end":273546,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273551,"byte_end":273588,"line_start":507,"line_end":507,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273593,"byte_end":273596,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273601,"byte_end":273628,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273633,"byte_end":273657,"line_start":510,"line_end":510,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273662,"byte_end":273708,"line_start":511,"line_end":511,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273713,"byte_end":273722,"line_start":512,"line_end":512,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273727,"byte_end":273770,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273775,"byte_end":273782,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273787,"byte_end":273790,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273795,"byte_end":273858,"line_start":516,"line_end":516,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273863,"byte_end":273894,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273899,"byte_end":273907,"line_start":518,"line_end":518,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273912,"byte_end":273919,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275365,"byte_end":275375,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn <Fut, F> (self, f: F) -> TryFilter<Self, Fut, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274077,"byte_end":274150,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274155,"byte_end":274189,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274194,"byte_end":274197,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274202,"byte_end":274277,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274282,"byte_end":274357,"line_start":531,"line_end":531,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274362,"byte_end":274435,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274440,"byte_end":274511,"line_start":533,"line_end":533,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274516,"byte_end":274566,"line_start":534,"line_end":534,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274571,"byte_end":274574,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274579,"byte_end":274650,"line_start":536,"line_end":536,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274655,"byte_end":274658,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274663,"byte_end":274739,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274744,"byte_end":274814,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274819,"byte_end":274844,"line_start":540,"line_end":540,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274849,"byte_end":274852,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274857,"byte_end":274871,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274876,"byte_end":274883,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274888,"byte_end":274929,"line_start":544,"line_end":544,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274934,"byte_end":274958,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274963,"byte_end":275020,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275025,"byte_end":275028,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275033,"byte_end":275113,"line_start":548,"line_end":548,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275118,"byte_end":275161,"line_start":549,"line_end":549,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275166,"byte_end":275199,"line_start":550,"line_end":550,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275204,"byte_end":275211,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275216,"byte_end":275219,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275224,"byte_end":275272,"line_start":553,"line_end":553,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275277,"byte_end":275332,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275337,"byte_end":275345,"line_start":555,"line_end":555,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275350,"byte_end":275357,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276951,"byte_end":276965,"line_start":598,"line_end":598,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn <Fut, F, T> (self, f: F) -> TryFilterMap<Self, Fut, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275575,"byte_end":275637,"line_start":566,"line_end":566,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275642,"byte_end":275710,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275715,"byte_end":275749,"line_start":568,"line_end":568,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275754,"byte_end":275757,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275762,"byte_end":275837,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275842,"byte_end":275917,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275922,"byte_end":275998,"line_start":572,"line_end":572,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276003,"byte_end":276068,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276073,"byte_end":276076,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276081,"byte_end":276152,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276157,"byte_end":276160,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276165,"byte_end":276241,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276246,"byte_end":276320,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276325,"byte_end":276350,"line_start":579,"line_end":579,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276355,"byte_end":276358,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276363,"byte_end":276377,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276382,"byte_end":276389,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276394,"byte_end":276435,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276440,"byte_end":276497,"line_start":584,"line_end":584,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276502,"byte_end":276527,"line_start":585,"line_end":585,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276532,"byte_end":276535,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276540,"byte_end":276610,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276615,"byte_end":276670,"line_start":588,"line_end":588,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276675,"byte_end":276737,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276742,"byte_end":276757,"line_start":590,"line_end":590,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276762,"byte_end":276769,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276774,"byte_end":276777,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276782,"byte_end":276803,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276808,"byte_end":276857,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276862,"byte_end":276918,"line_start":595,"line_end":595,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276923,"byte_end":276931,"line_start":596,"line_end":596,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276936,"byte_end":276943,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278613,"byte_end":278624,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn (self) -> TryFlatten<Self>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277198,"byte_end":277263,"line_start":607,"line_end":607,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277268,"byte_end":277271,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277276,"byte_end":277349,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277354,"byte_end":277427,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277432,"byte_end":277505,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277510,"byte_end":277580,"line_start":612,"line_end":612,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277585,"byte_end":277588,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277593,"byte_end":277607,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277612,"byte_end":277615,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277620,"byte_end":277627,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277632,"byte_end":277673,"line_start":617,"line_end":617,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277678,"byte_end":277709,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277714,"byte_end":277765,"line_start":619,"line_end":619,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277770,"byte_end":277790,"line_start":620,"line_end":620,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277795,"byte_end":277798,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277803,"byte_end":277842,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277847,"byte_end":277886,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277891,"byte_end":277930,"line_start":624,"line_end":624,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277935,"byte_end":277938,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277943,"byte_end":277970,"line_start":626,"line_end":626,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277975,"byte_end":278018,"line_start":627,"line_end":627,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278023,"byte_end":278030,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278035,"byte_end":278062,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278067,"byte_end":278110,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278115,"byte_end":278159,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278164,"byte_end":278171,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278176,"byte_end":278203,"line_start":633,"line_end":633,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278208,"byte_end":278253,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278258,"byte_end":278303,"line_start":635,"line_end":635,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278308,"byte_end":278352,"line_start":636,"line_end":636,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278357,"byte_end":278364,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278369,"byte_end":278372,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278377,"byte_end":278416,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278421,"byte_end":278470,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278475,"byte_end":278524,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278529,"byte_end":278579,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278584,"byte_end":278593,"line_start":643,"line_end":643,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278598,"byte_end":278605,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280104,"byte_end":280112,"line_start":682,"line_end":682,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> TryFold<Self, Fut, T, F>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278817,"byte_end":278887,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278892,"byte_end":278952,"line_start":655,"line_end":655,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278957,"byte_end":278960,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278965,"byte_end":279035,"line_start":657,"line_end":657,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279040,"byte_end":279116,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279121,"byte_end":279197,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279202,"byte_end":279272,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279277,"byte_end":279303,"line_start":661,"line_end":661,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279308,"byte_end":279311,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279316,"byte_end":279396,"line_start":663,"line_end":663,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279401,"byte_end":279470,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279475,"byte_end":279496,"line_start":665,"line_end":665,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279501,"byte_end":279504,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279509,"byte_end":279523,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279528,"byte_end":279531,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279536,"byte_end":279543,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279548,"byte_end":279589,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279594,"byte_end":279640,"line_start":671,"line_end":671,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279645,"byte_end":279648,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279653,"byte_end":279722,"line_start":673,"line_end":673,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279727,"byte_end":279804,"line_start":674,"line_end":674,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279809,"byte_end":279842,"line_start":675,"line_end":675,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279847,"byte_end":279850,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279855,"byte_end":279941,"line_start":677,"line_end":677,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279946,"byte_end":280032,"line_start":678,"line_end":678,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280037,"byte_end":280071,"line_start":679,"line_end":679,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280076,"byte_end":280084,"line_start":680,"line_end":680,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280089,"byte_end":280096,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281594,"byte_end":281604,"line_start":725,"line_end":725,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn (self) -> TryConcat<Self>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280348,"byte_end":280410,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280415,"byte_end":280490,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280495,"byte_end":280498,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280503,"byte_end":280574,"line_start":694,"line_end":694,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280579,"byte_end":280655,"line_start":695,"line_end":695,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280660,"byte_end":280699,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280704,"byte_end":280707,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280712,"byte_end":280798,"line_start":698,"line_end":698,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280803,"byte_end":280806,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280811,"byte_end":280895,"line_start":700,"line_end":700,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280900,"byte_end":280956,"line_start":701,"line_end":701,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280961,"byte_end":280964,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280969,"byte_end":280983,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280988,"byte_end":280991,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280996,"byte_end":281003,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281008,"byte_end":281049,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281054,"byte_end":281085,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281090,"byte_end":281128,"line_start":708,"line_end":708,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281133,"byte_end":281153,"line_start":709,"line_end":709,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281158,"byte_end":281161,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281166,"byte_end":281227,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281232,"byte_end":281235,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281240,"byte_end":281267,"line_start":713,"line_end":713,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281272,"byte_end":281303,"line_start":714,"line_end":714,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281308,"byte_end":281334,"line_start":715,"line_end":715,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281339,"byte_end":281409,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281414,"byte_end":281423,"line_start":717,"line_end":717,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281428,"byte_end":281435,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281440,"byte_end":281443,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281448,"byte_end":281487,"line_start":720,"line_end":720,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281492,"byte_end":281495,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281500,"byte_end":281560,"line_start":722,"line_end":722,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281565,"byte_end":281574,"line_start":723,"line_end":723,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281579,"byte_end":281586,"line_start":724,"line_end":724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284307,"byte_end":284327,"line_start":792,"line_end":792,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn (self, n: usize) -> TryBufferUnordered<Self>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281807,"byte_end":281873,"line_start":733,"line_end":733,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281878,"byte_end":281881,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281886,"byte_end":281991,"line_start":735,"line_end":735,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281996,"byte_end":282039,"line_start":736,"line_end":736,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282044,"byte_end":282047,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282052,"byte_end":282120,"line_start":738,"line_end":738,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282125,"byte_end":282198,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282203,"byte_end":282259,"line_start":740,"line_end":740,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282264,"byte_end":282267,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282272,"byte_end":282347,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282352,"byte_end":282425,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282430,"byte_end":282495,"line_start":744,"line_end":744,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282500,"byte_end":282503,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282508,"byte_end":282583,"line_start":746,"line_end":746,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282588,"byte_end":282645,"line_start":747,"line_end":747,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282650,"byte_end":282653,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282658,"byte_end":282672,"line_start":749,"line_end":749,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282677,"byte_end":282680,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282685,"byte_end":282737,"line_start":751,"line_end":751,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282742,"byte_end":282749,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282754,"byte_end":282795,"line_start":753,"line_end":753,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282800,"byte_end":282834,"line_start":754,"line_end":754,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282839,"byte_end":282896,"line_start":755,"line_end":755,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282901,"byte_end":282904,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282909,"byte_end":282959,"line_start":757,"line_end":757,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282964,"byte_end":283014,"line_start":758,"line_end":758,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283019,"byte_end":283022,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283027,"byte_end":283102,"line_start":760,"line_end":760,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283107,"byte_end":283110,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283115,"byte_end":283181,"line_start":762,"line_end":762,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283186,"byte_end":283189,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283194,"byte_end":283219,"line_start":764,"line_end":764,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283224,"byte_end":283278,"line_start":765,"line_end":765,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283283,"byte_end":283286,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283291,"byte_end":283316,"line_start":767,"line_end":767,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283321,"byte_end":283375,"line_start":768,"line_end":768,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283380,"byte_end":283383,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283388,"byte_end":283432,"line_start":770,"line_end":770,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283437,"byte_end":283473,"line_start":771,"line_end":771,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283478,"byte_end":283485,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283490,"byte_end":283493,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283498,"byte_end":283558,"line_start":774,"line_end":774,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283563,"byte_end":283570,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283575,"byte_end":283616,"line_start":776,"line_end":776,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283621,"byte_end":283652,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283657,"byte_end":283708,"line_start":778,"line_end":778,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283713,"byte_end":283716,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283721,"byte_end":283775,"line_start":780,"line_end":780,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283780,"byte_end":283846,"line_start":781,"line_end":781,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283851,"byte_end":283854,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283859,"byte_end":283908,"line_start":783,"line_end":783,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283913,"byte_end":283967,"line_start":784,"line_end":784,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283972,"byte_end":283975,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283980,"byte_end":284033,"line_start":786,"line_end":786,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284038,"byte_end":284110,"line_start":787,"line_end":787,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284115,"byte_end":284174,"line_start":788,"line_end":788,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284179,"byte_end":284186,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284274,"byte_end":284299,"line_start":791,"line_end":791,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284703,"byte_end":284722,"line_start":804,"line_end":804,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284595,"byte_end":284673,"line_start":802,"line_end":802,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284678,"byte_end":284695,"line_start":803,"line_end":803,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286912,"byte_end":286927,"line_start":868,"line_end":868,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"fn (self) -> IntoAsyncRead<Self>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":285740,"byte_end":285822,"line_start":841,"line_end":841,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":285827,"byte_end":285830,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":285835,"byte_end":285950,"line_start":843,"line_end":843,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":285955,"byte_end":286046,"line_start":844,"line_end":844,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286051,"byte_end":286141,"line_start":845,"line_end":845,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286146,"byte_end":286231,"line_start":846,"line_end":846,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286236,"byte_end":286239,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286244,"byte_end":286308,"line_start":848,"line_end":848,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286313,"byte_end":286370,"line_start":849,"line_end":849,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286375,"byte_end":286378,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286383,"byte_end":286397,"line_start":851,"line_end":851,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286402,"byte_end":286405,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286410,"byte_end":286417,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286422,"byte_end":286463,"line_start":854,"line_end":854,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286468,"byte_end":286514,"line_start":855,"line_end":855,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286519,"byte_end":286553,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286558,"byte_end":286561,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286566,"byte_end":286627,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286632,"byte_end":286678,"line_start":859,"line_end":859,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286683,"byte_end":286712,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286717,"byte_end":286720,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286725,"byte_end":286781,"line_start":862,"line_end":862,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286786,"byte_end":286824,"line_start":863,"line_end":863,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286829,"byte_end":286837,"line_start":864,"line_end":864,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286842,"byte_end":286849,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286854,"byte_end":286876,"line_start":866,"line_end":866,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":286881,"byte_end":286904,"line_start":867,"line_end":867,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10916},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324658,"byte_end":324662,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":10918}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324543,"byte_end":324580,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324598,"byte_end":324646,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2650},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":325180,"byte_end":325184,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324714,"byte_end":324778,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324779,"byte_end":324807,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324808,"byte_end":324811,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324812,"byte_end":324885,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324886,"byte_end":324941,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324942,"byte_end":324945,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324946,"byte_end":324953,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324954,"byte_end":324995,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324996,"byte_end":325039,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":325040,"byte_end":325043,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":325044,"byte_end":325088,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":325089,"byte_end":325154,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":325155,"byte_end":325164,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":325165,"byte_end":325172,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10922},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":325826,"byte_end":325832,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":10924}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":325709,"byte_end":325748,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":325766,"byte_end":325814,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2668},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326356,"byte_end":326362,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":325854,"byte_end":325914,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":325915,"byte_end":325918,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":325919,"byte_end":325986,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":325987,"byte_end":326059,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326060,"byte_end":326117,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326118,"byte_end":326121,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326122,"byte_end":326129,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326130,"byte_end":326171,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326172,"byte_end":326215,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326216,"byte_end":326219,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326220,"byte_end":326255,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326256,"byte_end":326330,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326331,"byte_end":326340,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326341,"byte_end":326348,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10928},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327147,"byte_end":327152,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":10930}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327031,"byte_end":327069,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327087,"byte_end":327135,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2692},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327320,"byte_end":327325,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327190,"byte_end":327238,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327239,"byte_end":327242,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327243,"byte_end":327312,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2719},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328270,"byte_end":328274,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <Fut> (future: Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":327963,"byte_end":328004,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328005,"byte_end":328008,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328009,"byte_end":328016,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328017,"byte_end":328058,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328059,"byte_end":328102,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328103,"byte_end":328106,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328107,"byte_end":328151,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328152,"byte_end":328207,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328208,"byte_end":328244,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328245,"byte_end":328254,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328255,"byte_end":328262,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10934},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328545,"byte_end":328549,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":10936}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328485,"byte_end":328533,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328453,"byte_end":328467,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10952},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328545,"byte_end":328549,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":10955},{"krate":0,"index":10956}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10976},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329720,"byte_end":329727,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10978}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329600,"byte_end":329642,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329660,"byte_end":329708,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2743},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329903,"byte_end":329910,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329771,"byte_end":329825,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329826,"byte_end":329829,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329830,"byte_end":329895,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2765},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330616,"byte_end":330622,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2767}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330515,"byte_end":330555,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330556,"byte_end":330604,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2773},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331310,"byte_end":331317,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330822,"byte_end":330895,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330896,"byte_end":330899,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330900,"byte_end":330959,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330960,"byte_end":330963,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330964,"byte_end":330978,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330979,"byte_end":330982,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330983,"byte_end":330990,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330991,"byte_end":331024,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331025,"byte_end":331053,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331054,"byte_end":331057,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331058,"byte_end":331087,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331088,"byte_end":331091,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331092,"byte_end":331156,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331157,"byte_end":331210,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331211,"byte_end":331232,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331233,"byte_end":331286,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331287,"byte_end":331294,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331295,"byte_end":331302,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10982},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331978,"byte_end":331984,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10986},{"krate":0,"index":10987},{"krate":0,"index":10985}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331918,"byte_end":331966,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331886,"byte_end":331900,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11010},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331978,"byte_end":331984,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":11014},{"krate":0,"index":11015},{"krate":0,"index":11016}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2798},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332562,"byte_end":332568,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn <St1, St2> (stream1: St1, stream2: St2) -> Select<St1, St2>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332086,"byte_end":332154,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332155,"byte_end":332231,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332232,"byte_end":332280,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332281,"byte_end":332284,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332285,"byte_end":332359,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332360,"byte_end":332429,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332430,"byte_end":332457,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332458,"byte_end":332461,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332462,"byte_end":332533,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332534,"byte_end":332554,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332947,"byte_end":332954,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332839,"byte_end":332913,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332918,"byte_end":332935,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333310,"byte_end":333317,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333048,"byte_end":333116,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333121,"byte_end":333152,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333157,"byte_end":333160,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333165,"byte_end":333238,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333243,"byte_end":333298,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":11041},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333707,"byte_end":333718,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":334160,"byte_end":334170,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333924,"byte_end":333987,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":333992,"byte_end":333995,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":334000,"byte_end":334072,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":334077,"byte_end":334148,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2834},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337383,"byte_end":337389,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335941,"byte_end":336011,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336012,"byte_end":336015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336016,"byte_end":336085,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336086,"byte_end":336167,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336168,"byte_end":336199,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336200,"byte_end":336203,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336204,"byte_end":336283,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336284,"byte_end":336363,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336364,"byte_end":336418,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336419,"byte_end":336422,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336423,"byte_end":336503,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336504,"byte_end":336574,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336575,"byte_end":336597,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336598,"byte_end":336601,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336602,"byte_end":336679,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336680,"byte_end":336752,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336753,"byte_end":336830,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336831,"byte_end":336891,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336892,"byte_end":336895,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336896,"byte_end":336909,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336910,"byte_end":336913,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336914,"byte_end":336921,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336922,"byte_end":336963,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336964,"byte_end":337007,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337008,"byte_end":337011,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337012,"byte_end":337067,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337068,"byte_end":337091,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337092,"byte_end":337131,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337132,"byte_end":337169,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337170,"byte_end":337209,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337210,"byte_end":337226,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337227,"byte_end":337243,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337244,"byte_end":337253,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337254,"byte_end":337261,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337262,"byte_end":337265,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337266,"byte_end":337318,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337319,"byte_end":337357,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337358,"byte_end":337367,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337368,"byte_end":337375,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11043},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337720,"byte_end":337726,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":11047},{"krate":0,"index":11048},{"krate":0,"index":11049}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337660,"byte_end":337708,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337645,"byte_end":337659,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11075},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337720,"byte_end":337726,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":11080},{"krate":0,"index":11081}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11143},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563119,"byte_end":8563133,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":11145},{"krate":0,"index":11146},{"krate":0,"index":11147},{"krate":0,"index":11148}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561053,"byte_end":8561087,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561088,"byte_end":8561091,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561092,"byte_end":8561171,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561172,"byte_end":8561243,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561244,"byte_end":8561320,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561321,"byte_end":8561369,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561370,"byte_end":8561373,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561374,"byte_end":8561453,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561454,"byte_end":8561529,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561530,"byte_end":8561608,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561609,"byte_end":8561689,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561690,"byte_end":8561719,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561720,"byte_end":8561723,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561724,"byte_end":8561802,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561803,"byte_end":8561877,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561878,"byte_end":8561953,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8561954,"byte_end":8562029,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562030,"byte_end":8562105,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562106,"byte_end":8562164,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562165,"byte_end":8562168,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562169,"byte_end":8562242,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562243,"byte_end":8562321,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562322,"byte_end":8562380,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562381,"byte_end":8562454,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562455,"byte_end":8562523,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562524,"byte_end":8562600,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562601,"byte_end":8562669,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562670,"byte_end":8562723,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562724,"byte_end":8562727,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562728,"byte_end":8562794,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562795,"byte_end":8562874,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562875,"byte_end":8562922,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562923,"byte_end":8562926,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8562927,"byte_end":8563000,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563001,"byte_end":8563058,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563059,"byte_end":8563107,"line_start":92,"line_end":92,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11153},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563641,"byte_end":8563644,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn () -> FuturesOrdered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563421,"byte_end":8563465,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563470,"byte_end":8563473,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563478,"byte_end":8563553,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563558,"byte_end":8563629,"line_start":106,"line_end":106,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":11154},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564166,"byte_end":8564169,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563893,"byte_end":8563950,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563955,"byte_end":8563958,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563963,"byte_end":8564026,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564031,"byte_end":8564095,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564100,"byte_end":8564154,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":11155},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564327,"byte_end":8564335,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564264,"byte_end":8564315,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":11156},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564759,"byte_end":8564763,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn (&mut self, future: Fut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564440,"byte_end":8564473,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564478,"byte_end":8564481,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564486,"byte_end":8564562,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564567,"byte_end":8564641,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564646,"byte_end":8564719,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8564724,"byte_end":8564747,"line_start":135,"line_end":135,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":11178},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":11179},{"krate":0,"index":11180},{"krate":0,"index":11183},{"krate":0,"index":11186},{"krate":0,"index":11192},{"krate":0,"index":11193},{"krate":0,"index":11194},{"krate":0,"index":11197},{"krate":0,"index":11198},{"krate":0,"index":11199},{"krate":0,"index":11200},{"krate":0,"index":11201},{"krate":0,"index":11202},{"krate":0,"index":11208},{"krate":0,"index":11211},{"krate":0,"index":11214},{"krate":0,"index":11220},{"krate":0,"index":11258},{"krate":0,"index":11263},{"krate":0,"index":11304},{"krate":0,"index":11305},{"krate":0,"index":11341},{"krate":0,"index":11344},{"krate":0,"index":11345},{"krate":0,"index":11350},{"krate":0,"index":11352},{"krate":0,"index":11354},{"krate":0,"index":11356},{"krate":0,"index":11358},{"krate":0,"index":11360},{"krate":0,"index":11363},{"krate":0,"index":11378},{"krate":0,"index":11391},{"krate":0,"index":11394},{"krate":0,"index":11397},{"krate":0,"index":11402},{"krate":0,"index":11405}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139089,"byte_end":139114,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"! An unbounded set of futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8567014,"byte_end":8567046,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8567047,"byte_end":8567050,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8567051,"byte_end":8567126,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8567127,"byte_end":8567184,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11461},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8593433,"byte_end":8593443,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":11464},{"krate":0,"index":11465},{"krate":0,"index":11466}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8593362,"byte_end":8593421,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":11471},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8593679,"byte_end":8593686,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8593608,"byte_end":8593667,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":11480},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8593828,"byte_end":8593838,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":11483},{"krate":0,"index":11484},{"krate":0,"index":11485},{"krate":0,"index":11486}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8593755,"byte_end":8593816,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":11491},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8594125,"byte_end":8594129,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8594048,"byte_end":8594113,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":11345},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569898,"byte_end":8569914,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":11347},{"krate":0,"index":11348},{"krate":0,"index":11349}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8568803,"byte_end":8568856,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8568857,"byte_end":8568860,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8568861,"byte_end":8568929,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8568930,"byte_end":8569003,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569004,"byte_end":8569080,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569081,"byte_end":8569125,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569126,"byte_end":8569129,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569130,"byte_end":8569208,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569209,"byte_end":8569267,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569268,"byte_end":8569332,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569333,"byte_end":8569386,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569387,"byte_end":8569466,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569467,"byte_end":8569496,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569497,"byte_end":8569500,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569501,"byte_end":8569571,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569572,"byte_end":8569649,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569650,"byte_end":8569701,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569702,"byte_end":8569705,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569706,"byte_end":8569779,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569780,"byte_end":8569837,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8569838,"byte_end":8569886,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11365},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572584,"byte_end":8572587,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn () -> FuturesUnordered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572313,"byte_end":8572362,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572367,"byte_end":8572370,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572375,"byte_end":8572442,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572447,"byte_end":8572521,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572526,"byte_end":8572572,"line_start":135,"line_end":135,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":11366},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8573611,"byte_end":8573614,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8573473,"byte_end":8573528,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8573533,"byte_end":8573536,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8573541,"byte_end":8573599,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":11367},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8573778,"byte_end":8573786,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8573716,"byte_end":8573766,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":11368},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8574369,"byte_end":8574373,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn (&self, future: Fut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8573999,"byte_end":8574030,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8574035,"byte_end":8574038,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8574043,"byte_end":8574113,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8574118,"byte_end":8574204,"line_start":179,"line_end":179,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8574209,"byte_end":8574285,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8574290,"byte_end":8574357,"line_start":181,"line_end":181,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":11369},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8575648,"byte_end":8575652,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn (&self) -> Iter<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8575566,"byte_end":8575636,"line_start":209,"line_end":209,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":11371},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8576196,"byte_end":8576204,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8576115,"byte_end":8576184,"line_start":226,"line_end":226,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":11372},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8576394,"byte_end":8576406,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn (mut self: Pin<&mut Self>) -> IterPinMut<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8576313,"byte_end":8576382,"line_start":231,"line_end":231,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":11426},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605421,"byte_end":8605430,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":11428}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8604797,"byte_end":8604828,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8604829,"byte_end":8604832,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8604833,"byte_end":8604904,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8604905,"byte_end":8604942,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8604943,"byte_end":8604946,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8604947,"byte_end":8605013,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605014,"byte_end":8605085,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605086,"byte_end":8605166,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605167,"byte_end":8605170,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605171,"byte_end":8605232,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605233,"byte_end":8605307,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605308,"byte_end":8605360,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605361,"byte_end":8605409,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11434},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605887,"byte_end":8605890,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn () -> SelectAll<St>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605687,"byte_end":8605726,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605731,"byte_end":8605734,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605739,"byte_end":8605809,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605814,"byte_end":8605875,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":11435},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606114,"byte_end":8606117,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605976,"byte_end":8606031,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606036,"byte_end":8606039,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606044,"byte_end":8606102,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":11436},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606233,"byte_end":8606241,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606172,"byte_end":8606221,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":11437},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606603,"byte_end":8606607,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn (&mut self, stream: St) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606300,"byte_end":8606331,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606336,"byte_end":8606339,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606344,"byte_end":8606416,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606421,"byte_end":8606495,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606500,"byte_end":8606568,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606573,"byte_end":8606591,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":11448},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608383,"byte_end":8608393,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn <I> (streams: I) -> SelectAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8607762,"byte_end":8607836,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8607837,"byte_end":8607840,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8607841,"byte_end":8607920,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8607921,"byte_end":8607972,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8607973,"byte_end":8608047,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608048,"byte_end":8608107,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608108,"byte_end":8608111,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608112,"byte_end":8608184,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608185,"byte_end":8608235,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608236,"byte_end":8608239,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608240,"byte_end":8608317,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608318,"byte_end":8608375,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2862},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2868},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3252}],"decl_id":null,"docs":" Sinks","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11877,"byte_end":11901,"line_start":310,"line_end":310,"column_start":1,"column_end":25}},{"value":"! Sinks","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339168,"byte_end":339177,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339178,"byte_end":339181,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Sink`s,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339182,"byte_end":339254,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! including the `SinkExt` trait which adds methods to `Sink` types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339255,"byte_end":339324,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339325,"byte_end":339328,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `sink` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339329,"byte_end":339394,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":339395,"byte_end":339452,"line_start":7,"line_end":7,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11500},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":349105,"byte_end":349110,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":11504},{"krate":0,"index":11505}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":348949,"byte_end":349008,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":349026,"byte_end":349093,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11511},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350135,"byte_end":350140,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":11513}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350023,"byte_end":350059,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350077,"byte_end":350123,"line_start":9,"line_end":9,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":2903},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350539,"byte_end":350544,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"fn <T> () -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350177,"byte_end":350240,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350241,"byte_end":350244,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350245,"byte_end":350290,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350291,"byte_end":350294,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350295,"byte_end":350309,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350310,"byte_end":350313,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350314,"byte_end":350321,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350322,"byte_end":350363,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350364,"byte_end":350403,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350404,"byte_end":350407,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350408,"byte_end":350442,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350443,"byte_end":350468,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350469,"byte_end":350523,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350524,"byte_end":350531,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11517},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":351780,"byte_end":351786,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":11520},{"krate":0,"index":11521}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":351722,"byte_end":351768,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":351707,"byte_end":351721,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11542},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":351780,"byte_end":351786,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__Fanout","qualname":"::sink::fanout::_::__Fanout","value":"__Fanout {  }","parent":null,"children":[{"krate":0,"index":11546},{"krate":0,"index":11547},{"krate":0,"index":11548}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352058,"byte_end":352065,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"fn (&self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352000,"byte_end":352046,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352196,"byte_end":352203,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"fn (&mut self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352137,"byte_end":352184,"line_start":30,"line_end":30,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":11569},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352376,"byte_end":352387,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352787,"byte_end":352797,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"fn (self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352553,"byte_end":352614,"line_start":43,"line_end":43,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352619,"byte_end":352622,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352627,"byte_end":352696,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352701,"byte_end":352775,"line_start":46,"line_end":46,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":11574},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355243,"byte_end":355248,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":11578},{"krate":0,"index":11579}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355087,"byte_end":355146,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355164,"byte_end":355231,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11585},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":356525,"byte_end":356536,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":11589}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":356467,"byte_end":356513,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":356435,"byte_end":356449,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11611},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":356525,"byte_end":356536,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"__SinkErrInto","qualname":"::sink::err_into::_::__SinkErrInto","value":"__SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":11616},{"krate":0,"index":11617}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11658},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":357853,"byte_end":357863,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":11662},{"krate":0,"index":11661}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":357795,"byte_end":357841,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":357756,"byte_end":357770,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11683},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":357853,"byte_end":357863,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__SinkMapErr","qualname":"::sink::map_err::_::__SinkMapErr","value":"__SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":11687},{"krate":0,"index":11688}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11723},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":359817,"byte_end":359821,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":11727},{"krate":0,"index":11728}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":359663,"byte_end":359720,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":359738,"byte_end":359805,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3076},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":361508,"byte_end":361515,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":361272,"byte_end":361337,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":361338,"byte_end":361378,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":361429,"byte_end":361496,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11734},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":364642,"byte_end":364646,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":11742},{"krate":0,"index":11740},{"krate":0,"index":11743},{"krate":0,"index":11741}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":364584,"byte_end":364630,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":364569,"byte_end":364583,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11777},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":364642,"byte_end":364646,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__With","qualname":"::sink::with::_::__With","value":"__With {  }","parent":null,"children":[{"krate":0,"index":11784},{"krate":0,"index":11785},{"krate":0,"index":11786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11830},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":368150,"byte_end":368161,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":11839},{"krate":0,"index":11836},{"krate":0,"index":11840},{"krate":0,"index":11837},{"krate":0,"index":11838}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":368092,"byte_end":368138,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":368077,"byte_end":368091,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11876},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":368150,"byte_end":368161,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"__WithFlatMap","qualname":"::sink::with_flat_map::_::__WithFlatMap","value":"__WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":11883},{"krate":0,"index":11884},{"krate":0,"index":11885}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11929},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":372089,"byte_end":372095,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":11934},{"krate":0,"index":11932},{"krate":0,"index":11933}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":372031,"byte_end":372077,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":371999,"byte_end":372013,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11957},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":372089,"byte_end":372095,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"__Buffer","qualname":"::sink::buffer::_::__Buffer","value":"__Buffer {  }","parent":null,"children":[{"krate":0,"index":11961},{"krate":0,"index":11962}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3252},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340439,"byte_end":340446,"line_start":59,"line_end":59,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":3254},{"krate":0,"index":3259},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3277},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340330,"byte_end":340402,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340403,"byte_end":340428,"line_start":58,"line_end":58,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341038,"byte_end":341042,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"fn <U, Fut, F, E> (self, f: F) -> With<Self, Item, U, Fut, F>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340471,"byte_end":340518,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340523,"byte_end":340526,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340531,"byte_end":340602,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340607,"byte_end":340658,"line_start":63,"line_end":63,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340663,"byte_end":340666,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340671,"byte_end":340746,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340751,"byte_end":340827,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340832,"byte_end":340901,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340906,"byte_end":340909,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340914,"byte_end":340986,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340991,"byte_end":341030,"line_start":70,"line_end":70,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342387,"byte_end":342400,"line_start":112,"line_end":112,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"fn <U, St, F> (self, f: F) -> WithFlatMap<Self, Item, U, St, F>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341293,"byte_end":341340,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341345,"byte_end":341348,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341353,"byte_end":341424,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341429,"byte_end":341480,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341485,"byte_end":341488,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341493,"byte_end":341564,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341569,"byte_end":341645,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341650,"byte_end":341681,"line_start":87,"line_end":87,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341686,"byte_end":341689,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341694,"byte_end":341766,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341771,"byte_end":341815,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341820,"byte_end":341823,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341828,"byte_end":341842,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341847,"byte_end":341850,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341855,"byte_end":341862,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341867,"byte_end":341908,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341913,"byte_end":341944,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341949,"byte_end":341980,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":341985,"byte_end":342028,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342033,"byte_end":342036,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342041,"byte_end":342077,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342082,"byte_end":342085,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342090,"byte_end":342129,"line_start":102,"line_end":102,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342134,"byte_end":342171,"line_start":103,"line_end":103,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342176,"byte_end":342183,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342188,"byte_end":342191,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342196,"byte_end":342226,"line_start":106,"line_end":106,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342231,"byte_end":342244,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342249,"byte_end":342297,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342302,"byte_end":342353,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342358,"byte_end":342367,"line_start":110,"line_end":110,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":342372,"byte_end":342379,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343113,"byte_end":343125,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"fn <E, F> (self, f: F) -> SinkMapErr<Self, F>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343059,"byte_end":343105,"line_start":134,"line_end":134,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343468,"byte_end":343481,"line_start":145,"line_end":145,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"fn <E> (self) -> err_into::SinkErrInto<Self, Item, E>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343287,"byte_end":343362,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343367,"byte_end":343370,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343375,"byte_end":343460,"line_start":144,"line_end":144,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344292,"byte_end":344298,"line_start":166,"line_end":166,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"fn (self, capacity: usize) -> Buffer<Self, Item>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343643,"byte_end":343692,"line_start":153,"line_end":153,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343697,"byte_end":343700,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343705,"byte_end":343771,"line_start":155,"line_end":155,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343776,"byte_end":343852,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343857,"byte_end":343932,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343937,"byte_end":343975,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343980,"byte_end":343983,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":343988,"byte_end":344060,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344065,"byte_end":344104,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344109,"byte_end":344112,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344117,"byte_end":344192,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344197,"byte_end":344254,"line_start":164,"line_end":164,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344259,"byte_end":344284,"line_start":165,"line_end":165,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344451,"byte_end":344456,"line_start":173,"line_end":173,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"fn (&mut self) -> Close<'_, Self, Item>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344424,"byte_end":344443,"line_start":172,"line_end":172,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344741,"byte_end":344747,"line_start":183,"line_end":183,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"fn <Si> (self, other: Si) -> Fanout<Self, Si>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344562,"byte_end":344597,"line_start":179,"line_end":179,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344602,"byte_end":344605,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344610,"byte_end":344692,"line_start":181,"line_end":181,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344697,"byte_end":344733,"line_start":182,"line_end":182,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345142,"byte_end":345147,"line_start":195,"line_end":195,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"fn (&mut self) -> Flush<'_, Self, Item>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344941,"byte_end":344990,"line_start":191,"line_end":191,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":344995,"byte_end":344998,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345003,"byte_end":345084,"line_start":193,"line_end":193,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345089,"byte_end":345134,"line_start":194,"line_end":194,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345570,"byte_end":345574,"line_start":207,"line_end":207,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"fn (&mut self, item: Item) -> Send<'_, Self, Item>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345253,"byte_end":345326,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345331,"byte_end":345369,"line_start":202,"line_end":202,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345374,"byte_end":345377,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345382,"byte_end":345456,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `send_all`, rather than flushing","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345461,"byte_end":345533,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ between each item.**","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345538,"byte_end":345562,"line_start":206,"line_end":206,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346321,"byte_end":346329,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"fn <'a, St> (&'a mut self, stream: &'a mut St) -> SendAll<'a, Self, St>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345696,"byte_end":345771,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345776,"byte_end":345814,"line_start":214,"line_end":214,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345819,"byte_end":345822,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345827,"byte_end":345900,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345905,"byte_end":345981,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":345986,"byte_end":346060,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346065,"byte_end":346120,"line_start":219,"line_end":219,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346125,"byte_end":346128,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346133,"byte_end":346191,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346196,"byte_end":346271,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346276,"byte_end":346313,"line_start":223,"line_end":223,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346858,"byte_end":346867,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"fn <Si2> (self) -> Either<Self, Si2>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346585,"byte_end":346656,"line_start":234,"line_end":234,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346661,"byte_end":346682,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346687,"byte_end":346690,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346695,"byte_end":346773,"line_start":237,"line_end":237,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":346778,"byte_end":346850,"line_start":238,"line_end":238,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347299,"byte_end":347309,"line_start":251,"line_end":251,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"fn <Si1> (self) -> Either<Si1, Self>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347022,"byte_end":347098,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347103,"byte_end":347124,"line_start":247,"line_end":247,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347129,"byte_end":347132,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347137,"byte_end":347214,"line_start":249,"line_end":249,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347219,"byte_end":347291,"line_start":250,"line_end":250,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347864,"byte_end":347880,"line_start":269,"line_end":269,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347766,"byte_end":347836,"line_start":267,"line_end":267,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":347841,"byte_end":347856,"line_start":268,"line_end":268,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348126,"byte_end":348142,"line_start":277,"line_end":277,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"fn (&mut self, item: Item) -> Result<(), Self::Error>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348028,"byte_end":348098,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348103,"byte_end":348118,"line_start":276,"line_end":276,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348374,"byte_end":348390,"line_start":285,"line_end":285,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348276,"byte_end":348346,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348351,"byte_end":348366,"line_start":284,"line_end":284,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348636,"byte_end":348652,"line_start":293,"line_end":293,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":3252},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348538,"byte_end":348608,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":348613,"byte_end":348628,"line_start":292,"line_end":292,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3286},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":11992},{"krate":0,"index":11993},{"krate":0,"index":11994},{"krate":0,"index":11997},{"krate":0,"index":3287},{"krate":0,"index":3307},{"krate":0,"index":3310},{"krate":0,"index":3316},{"krate":0,"index":3323},{"krate":0,"index":3324}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":375016,"byte_end":375037,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3301},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376227,"byte_end":376235,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":3302}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376184,"byte_end":376216,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377232,"byte_end":377237,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn <Fut> (&self, future: Fut) -> Result<(), SpawnError>","parent":{"krate":0,"index":3301},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376249,"byte_end":376314,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376319,"byte_end":376334,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376339,"byte_end":376342,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376347,"byte_end":376417,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376422,"byte_end":376441,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376446,"byte_end":376449,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376454,"byte_end":376523,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376528,"byte_end":376601,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376606,"byte_end":376645,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376650,"byte_end":376653,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376658,"byte_end":376724,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376729,"byte_end":376795,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376800,"byte_end":376871,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376876,"byte_end":376932,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376937,"byte_end":376940,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376945,"byte_end":376952,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376957,"byte_end":376995,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377000,"byte_end":377032,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377037,"byte_end":377040,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377045,"byte_end":377091,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377096,"byte_end":377099,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377104,"byte_end":377141,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377146,"byte_end":377182,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377187,"byte_end":377194,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":377199,"byte_end":377224,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":3304},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":378882,"byte_end":378895,"line_start":95,"line_end":95,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":3305}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":378834,"byte_end":378871,"line_start":94,"line_end":94,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379938,"byte_end":379949,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn <Fut> (&self, future: Fut) -> Result<(), SpawnError>","parent":{"krate":0,"index":3304},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":378914,"byte_end":378979,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":378984,"byte_end":378999,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379004,"byte_end":379007,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379012,"byte_end":379082,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379087,"byte_end":379106,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379111,"byte_end":379114,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379119,"byte_end":379188,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379193,"byte_end":379266,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379271,"byte_end":379310,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379315,"byte_end":379318,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379323,"byte_end":379389,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379394,"byte_end":379460,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379465,"byte_end":379536,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379541,"byte_end":379597,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379602,"byte_end":379605,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379610,"byte_end":379617,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379622,"byte_end":379659,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379664,"byte_end":379701,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379706,"byte_end":379709,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379714,"byte_end":379750,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379755,"byte_end":379792,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379797,"byte_end":379800,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379805,"byte_end":379842,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379847,"byte_end":379888,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379893,"byte_end":379900,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":379905,"byte_end":379930,"line_start":121,"line_end":121,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":3325},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","parent":null,"children":[{"krate":0,"index":3326}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381299,"byte_end":381334,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381335,"byte_end":381391,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3326},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":382028,"byte_end":382033,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381393,"byte_end":381428,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381429,"byte_end":381432,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381433,"byte_end":381508,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381509,"byte_end":381546,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381547,"byte_end":381550,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381551,"byte_end":381615,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381616,"byte_end":381619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381620,"byte_end":381691,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381692,"byte_end":381743,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381744,"byte_end":381836,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381837,"byte_end":381840,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381841,"byte_end":381912,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":381913,"byte_end":382018,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":3327},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3592},{"krate":0,"index":3595},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3654},{"krate":0,"index":3657},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3900},{"krate":0,"index":3903},{"krate":0,"index":3923},{"krate":0,"index":3924},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":4004},{"krate":0,"index":4008},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4129},{"krate":0,"index":4131},{"krate":0,"index":4142},{"krate":0,"index":4144},{"krate":0,"index":4146},{"krate":0,"index":4148},{"krate":0,"index":4154}],"decl_id":null,"docs":" IO","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12062,"byte_end":12084,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12085,"byte_end":12108,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"! IO","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382064,"byte_end":382070,"line_start":1,"line_end":1,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382071,"byte_end":382074,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382075,"byte_end":382138,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"! `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` types, including","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382139,"byte_end":382218,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! the `AsyncReadExt`, `AsyncWriteExt`, `AsyncSeekExt`, and `AsyncBufReadExt`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382219,"byte_end":382297,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! traits which add methods to the `AsyncRead`, `AsyncWrite`, `AsyncSeek`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382298,"byte_end":382373,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! and `AsyncBufRead` types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382374,"byte_end":382403,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382404,"byte_end":382407,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `io` and `std` features of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382408,"byte_end":382482,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":382483,"byte_end":382540,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11998},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406062,"byte_end":406072,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405413,"byte_end":405478,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405479,"byte_end":405528,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405529,"byte_end":405600,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405601,"byte_end":405604,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405605,"byte_end":405681,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405682,"byte_end":405753,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405754,"byte_end":405822,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405823,"byte_end":405891,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405892,"byte_end":405967,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":405968,"byte_end":405982,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406636,"byte_end":406639,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"fn (io: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406566,"byte_end":406624,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406754,"byte_end":406761,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406691,"byte_end":406742,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406875,"byte_end":406882,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406804,"byte_end":406863,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":407003,"byte_end":407013,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406937,"byte_end":406991,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":12035},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":411942,"byte_end":411951,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":12040},{"krate":0,"index":12037},{"krate":0,"index":12038},{"krate":0,"index":12039}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":411916,"byte_end":411930,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12062},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":411942,"byte_end":411951,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufReader","qualname":"::io::buf_reader::_::__BufReader","value":"__BufReader {  }","parent":null,"children":[{"krate":0,"index":12065},{"krate":0,"index":12066}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412220,"byte_end":412223,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412078,"byte_end":412170,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412175,"byte_end":412208,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412385,"byte_end":412398,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412308,"byte_end":412373,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412981,"byte_end":412987,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412821,"byte_end":412877,"line_start":63,"line_end":63,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412882,"byte_end":412885,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412890,"byte_end":412969,"line_start":65,"line_end":65,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":12092},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":419970,"byte_end":419979,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":12096},{"krate":0,"index":12094},{"krate":0,"index":12095}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":419944,"byte_end":419958,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12116},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":419970,"byte_end":419979,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufWriter","qualname":"::io::buf_writer::_::__BufWriter","value":"__BufWriter {  }","parent":null,"children":[{"krate":0,"index":12119},{"krate":0,"index":12120}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":420232,"byte_end":420235,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":420090,"byte_end":420182,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":420187,"byte_end":420220,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":420397,"byte_end":420410,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":420320,"byte_end":420385,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":421580,"byte_end":421586,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":421512,"byte_end":421568,"line_start":86,"line_end":86,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12145},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424435,"byte_end":424440,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12149},{"krate":0,"index":12150},{"krate":0,"index":12148}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424375,"byte_end":424423,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424360,"byte_end":424374,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12173},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424435,"byte_end":424440,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::io::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":12177},{"krate":0,"index":12178},{"krate":0,"index":12179}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424825,"byte_end":424832,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424751,"byte_end":424813,"line_start":34,"line_end":34,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425164,"byte_end":425171,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424901,"byte_end":424971,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424976,"byte_end":424979,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424984,"byte_end":425057,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425062,"byte_end":425135,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425140,"byte_end":425152,"line_start":43,"line_end":43,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425530,"byte_end":425541,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425260,"byte_end":425337,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425342,"byte_end":425345,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425350,"byte_end":425423,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425428,"byte_end":425501,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425506,"byte_end":425518,"line_start":52,"line_end":52,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425841,"byte_end":425851,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425773,"byte_end":425829,"line_start":60,"line_end":60,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12205},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":428850,"byte_end":428855,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":12208}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":428688,"byte_end":428753,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":428771,"byte_end":428838,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3561},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430404,"byte_end":430408,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"fn <R, W> (reader: R, writer: &mut W) -> Copy<'_, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429555,"byte_end":429630,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429631,"byte_end":429634,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429635,"byte_end":429718,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429719,"byte_end":429799,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429800,"byte_end":429872,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429873,"byte_end":429886,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429887,"byte_end":429890,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429891,"byte_end":429938,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429939,"byte_end":429942,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429943,"byte_end":429957,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429958,"byte_end":429961,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429962,"byte_end":429969,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":429970,"byte_end":430011,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430012,"byte_end":430063,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430064,"byte_end":430067,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430068,"byte_end":430111,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430112,"byte_end":430159,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430160,"byte_end":430163,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430164,"byte_end":430217,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430218,"byte_end":430244,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430245,"byte_end":430248,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430249,"byte_end":430274,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430275,"byte_end":430328,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430329,"byte_end":430388,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430389,"byte_end":430396,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12213},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430750,"byte_end":430754,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":12217}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430671,"byte_end":430738,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430639,"byte_end":430653,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12239},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430750,"byte_end":430754,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"__Copy","qualname":"::io::copy::_::__Copy","value":"__Copy {  }","parent":null,"children":[{"krate":0,"index":12244},{"krate":0,"index":12245},{"krate":0,"index":12246}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3585},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432121,"byte_end":432129,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"fn <R, W> (reader: R, writer: &mut W) -> CopyBuf<'_, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431265,"byte_end":431340,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431341,"byte_end":431344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431345,"byte_end":431431,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431432,"byte_end":431512,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431513,"byte_end":431585,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431586,"byte_end":431599,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431600,"byte_end":431603,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431604,"byte_end":431651,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431652,"byte_end":431655,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431656,"byte_end":431670,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431671,"byte_end":431674,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431675,"byte_end":431682,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431683,"byte_end":431724,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431725,"byte_end":431776,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431777,"byte_end":431780,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431781,"byte_end":431824,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431825,"byte_end":431872,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431873,"byte_end":431876,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431877,"byte_end":431934,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431935,"byte_end":431961,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431962,"byte_end":431965,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431966,"byte_end":431991,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":431992,"byte_end":432045,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432046,"byte_end":432105,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432106,"byte_end":432113,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12277},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432475,"byte_end":432482,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":12283},{"krate":0,"index":12281},{"krate":0,"index":12282}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432396,"byte_end":432463,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432364,"byte_end":432378,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12309},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432475,"byte_end":432482,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"__CopyBuf","qualname":"::io::copy_buf::_::__CopyBuf","value":"__CopyBuf {  }","parent":null,"children":[{"krate":0,"index":12314},{"krate":0,"index":12315},{"krate":0,"index":12316}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12348},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434430,"byte_end":434436,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":12350}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":433655,"byte_end":433718,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":433719,"byte_end":433752,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":433753,"byte_end":433756,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":433757,"byte_end":433825,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":433826,"byte_end":433908,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":433909,"byte_end":433988,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":433989,"byte_end":434014,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434015,"byte_end":434018,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434019,"byte_end":434093,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434094,"byte_end":434161,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434162,"byte_end":434195,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434196,"byte_end":434199,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434200,"byte_end":434239,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434240,"byte_end":434279,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434280,"byte_end":434321,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434322,"byte_end":434385,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435016,"byte_end":435019,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn (inner: T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434495,"byte_end":434570,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434575,"byte_end":434578,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434583,"byte_end":434657,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434662,"byte_end":434730,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434735,"byte_end":434773,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434778,"byte_end":434781,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434786,"byte_end":434800,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434805,"byte_end":434808,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434813,"byte_end":434820,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434825,"byte_end":434853,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434858,"byte_end":434861,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434866,"byte_end":434905,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434910,"byte_end":434958,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434963,"byte_end":434992,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434997,"byte_end":435004,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435471,"byte_end":435481,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435126,"byte_end":435183,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435188,"byte_end":435191,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435196,"byte_end":435210,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435215,"byte_end":435218,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435223,"byte_end":435230,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435235,"byte_end":435263,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435268,"byte_end":435271,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435276,"byte_end":435315,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435320,"byte_end":435368,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435373,"byte_end":435402,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435407,"byte_end":435410,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435415,"byte_end":435447,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435452,"byte_end":435459,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435889,"byte_end":435896,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435538,"byte_end":435598,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435603,"byte_end":435606,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435611,"byte_end":435625,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435630,"byte_end":435633,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435638,"byte_end":435645,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435650,"byte_end":435678,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435683,"byte_end":435686,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435691,"byte_end":435730,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435735,"byte_end":435783,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435788,"byte_end":435817,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435822,"byte_end":435825,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435830,"byte_end":435865,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435870,"byte_end":435877,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436468,"byte_end":436475,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":435952,"byte_end":436020,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436025,"byte_end":436028,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436033,"byte_end":436106,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436111,"byte_end":436173,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436178,"byte_end":436181,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436186,"byte_end":436200,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436205,"byte_end":436208,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436213,"byte_end":436220,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436225,"byte_end":436253,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436258,"byte_end":436261,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436266,"byte_end":436309,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436314,"byte_end":436362,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436367,"byte_end":436396,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436401,"byte_end":436404,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436409,"byte_end":436444,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436449,"byte_end":436456,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437133,"byte_end":437141,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436539,"byte_end":436587,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436592,"byte_end":436595,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436600,"byte_end":436614,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436619,"byte_end":436622,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436627,"byte_end":436634,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436639,"byte_end":436680,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436685,"byte_end":436739,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436744,"byte_end":436747,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436752,"byte_end":436804,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436809,"byte_end":436812,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436817,"byte_end":436852,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436857,"byte_end":436860,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436865,"byte_end":436908,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436913,"byte_end":436948,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436953,"byte_end":436956,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":436961,"byte_end":437005,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437010,"byte_end":437045,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437050,"byte_end":437109,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437114,"byte_end":437121,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437609,"byte_end":437621,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn (&mut self, pos: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437199,"byte_end":437236,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437241,"byte_end":437244,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437249,"byte_end":437263,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437268,"byte_end":437271,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437276,"byte_end":437283,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437288,"byte_end":437316,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437321,"byte_end":437324,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437329,"byte_end":437381,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437386,"byte_end":437389,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437394,"byte_end":437429,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437434,"byte_end":437437,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437442,"byte_end":437467,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437472,"byte_end":437507,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437512,"byte_end":437515,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437520,"byte_end":437545,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437550,"byte_end":437585,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437590,"byte_end":437597,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3644},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440402,"byte_end":440407,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3645}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440301,"byte_end":440341,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440342,"byte_end":440390,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3646},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440967,"byte_end":440972,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440428,"byte_end":440475,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440476,"byte_end":440479,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440480,"byte_end":440552,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440553,"byte_end":440556,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440557,"byte_end":440571,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440572,"byte_end":440575,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440576,"byte_end":440641,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440642,"byte_end":440645,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440646,"byte_end":440653,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440654,"byte_end":440695,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440696,"byte_end":440738,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440739,"byte_end":440742,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440743,"byte_end":440778,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440779,"byte_end":440812,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440813,"byte_end":440859,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440860,"byte_end":440891,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440892,"byte_end":440951,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":440952,"byte_end":440959,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12376},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":442030,"byte_end":442035,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":12379}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":441868,"byte_end":441933,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":441951,"byte_end":442018,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12391},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/into_sink.rs","byte_start":442932,"byte_end":442940,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"IntoSink","qualname":"::io::into_sink::IntoSink","value":"IntoSink {  }","parent":null,"children":[{"krate":0,"index":12395},{"krate":0,"index":12394}],"decl_id":null,"docs":" Sink for the [`into_sink`](super::AsyncWriteExt::into_sink) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/into_sink.rs","byte_start":442857,"byte_end":442903,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/into_sink.rs","byte_start":442842,"byte_end":442856,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12416},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/into_sink.rs","byte_start":442932,"byte_end":442940,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"__IntoSink","qualname":"::io::into_sink::_::__IntoSink","value":"__IntoSink {  }","parent":null,"children":[{"krate":0,"index":12420},{"krate":0,"index":12421}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12447},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":445691,"byte_end":445696,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":12452},{"krate":0,"index":12449},{"krate":0,"index":12450},{"krate":0,"index":12451}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":445631,"byte_end":445679,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":445599,"byte_end":445613,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12474},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":445691,"byte_end":445696,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"__Lines","qualname":"::io::lines::_::__Lines","value":"__Lines {  }","parent":null,"children":[{"krate":0,"index":12477},{"krate":0,"index":12478}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12498},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":446940,"byte_end":446944,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":12501},{"krate":0,"index":12502}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":446781,"byte_end":446843,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":446861,"byte_end":446928,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12507},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":447836,"byte_end":447848,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":12510},{"krate":0,"index":12511}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":447659,"byte_end":447739,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":447757,"byte_end":447824,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12516},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":448789,"byte_end":448798,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":12519},{"krate":0,"index":12520}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":448618,"byte_end":448692,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":448710,"byte_end":448777,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12525},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":450117,"byte_end":450125,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":12528},{"krate":0,"index":12529},{"krate":0,"index":12530},{"krate":0,"index":12531}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":449945,"byte_end":450020,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":450038,"byte_end":450105,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12536},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":451966,"byte_end":451975,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":12539},{"krate":0,"index":12540},{"krate":0,"index":12541}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":451793,"byte_end":451869,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":451887,"byte_end":451954,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12546},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":454707,"byte_end":454719,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":12549},{"krate":0,"index":12550},{"krate":0,"index":12551},{"krate":0,"index":12552}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":454528,"byte_end":454610,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":454628,"byte_end":454695,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12557},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":456637,"byte_end":456646,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":12560},{"krate":0,"index":12561},{"krate":0,"index":12562},{"krate":0,"index":12563}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":456463,"byte_end":456540,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":456558,"byte_end":456625,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3892},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458400,"byte_end":458406,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3893}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458298,"byte_end":458339,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458340,"byte_end":458388,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3894},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458963,"byte_end":458969,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458426,"byte_end":458495,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458496,"byte_end":458499,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458500,"byte_end":458580,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458581,"byte_end":458600,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458601,"byte_end":458604,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458605,"byte_end":458619,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458620,"byte_end":458623,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458624,"byte_end":458631,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458632,"byte_end":458673,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458674,"byte_end":458716,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458717,"byte_end":458720,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458721,"byte_end":458749,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458750,"byte_end":458789,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458790,"byte_end":458840,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458841,"byte_end":458887,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458888,"byte_end":458947,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":458948,"byte_end":458955,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12568},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460241,"byte_end":460245,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":12571},{"krate":0,"index":12572}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460078,"byte_end":460144,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460162,"byte_end":460229,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3934},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461015,"byte_end":461019,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3935}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":460915,"byte_end":460954,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":460955,"byte_end":461003,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3936},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461627,"byte_end":461631,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461040,"byte_end":461117,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461118,"byte_end":461121,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461122,"byte_end":461217,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461218,"byte_end":461275,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461276,"byte_end":461279,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461280,"byte_end":461294,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461295,"byte_end":461298,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461299,"byte_end":461310,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461311,"byte_end":461352,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461353,"byte_end":461396,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461397,"byte_end":461400,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461401,"byte_end":461438,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461439,"byte_end":461471,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461472,"byte_end":461521,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461522,"byte_end":461551,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461552,"byte_end":461611,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461612,"byte_end":461619,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12577},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":462793,"byte_end":462801,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":12579}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":462696,"byte_end":462764,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":12583},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":462930,"byte_end":462939,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":12585}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":462833,"byte_end":462901,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463685,"byte_end":463692,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"fn (self, other: WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463439,"byte_end":463516,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463521,"byte_end":463592,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463597,"byte_end":463673,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":464192,"byte_end":464199,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"fn (self, other: ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463946,"byte_end":464023,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":464028,"byte_end":464099,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":464104,"byte_end":464180,"line_start":50,"line_end":50,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3991},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":465711,"byte_end":465723,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":465555,"byte_end":465630,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":465631,"byte_end":465699,"line_start":93,"line_end":93,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":12589},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":466660,"byte_end":466664,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12592},{"krate":0,"index":12591}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":466581,"byte_end":466648,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private ())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":466549,"byte_end":466563,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12610},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":466660,"byte_end":466664,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::io::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":12613},{"krate":0,"index":12614}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467655,"byte_end":467660,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":466902,"byte_end":466955,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":466960,"byte_end":467006,"line_start":26,"line_end":26,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467011,"byte_end":467014,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467019,"byte_end":467029,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467034,"byte_end":467037,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467042,"byte_end":467119,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467124,"byte_end":467193,"line_start":31,"line_end":31,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467198,"byte_end":467201,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467206,"byte_end":467220,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467225,"byte_end":467228,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467233,"byte_end":467240,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467245,"byte_end":467286,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467291,"byte_end":467335,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467340,"byte_end":467343,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467348,"byte_end":467395,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467400,"byte_end":467428,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467433,"byte_end":467436,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467441,"byte_end":467475,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467480,"byte_end":467522,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467527,"byte_end":467530,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467535,"byte_end":467567,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467572,"byte_end":467631,"line_start":46,"line_end":46,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467636,"byte_end":467643,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468572,"byte_end":468581,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467708,"byte_end":467779,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467784,"byte_end":467858,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467863,"byte_end":467938,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467943,"byte_end":467967,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467972,"byte_end":467975,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467980,"byte_end":467994,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":467999,"byte_end":468002,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468007,"byte_end":468014,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468019,"byte_end":468060,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468065,"byte_end":468109,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468114,"byte_end":468117,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468122,"byte_end":468169,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468174,"byte_end":468202,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468207,"byte_end":468210,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468215,"byte_end":468249,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468254,"byte_end":468296,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468301,"byte_end":468304,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468309,"byte_end":468330,"line_start":69,"line_end":69,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468335,"byte_end":468367,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468372,"byte_end":468375,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468380,"byte_end":468403,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468408,"byte_end":468450,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468455,"byte_end":468476,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468481,"byte_end":468484,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468489,"byte_end":468548,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468553,"byte_end":468560,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12640},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471255,"byte_end":471261,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":12642},{"krate":0,"index":12643}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470300,"byte_end":470347,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470348,"byte_end":470351,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470352,"byte_end":470428,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470429,"byte_end":470507,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470508,"byte_end":470584,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470585,"byte_end":470660,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470661,"byte_end":470734,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470735,"byte_end":470766,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470767,"byte_end":470770,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470771,"byte_end":470842,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470843,"byte_end":470922,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470923,"byte_end":470950,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470951,"byte_end":470954,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":470955,"byte_end":471029,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471030,"byte_end":471104,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471105,"byte_end":471184,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471185,"byte_end":471226,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4039},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471570,"byte_end":471573,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471346,"byte_end":471417,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471422,"byte_end":471432,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471437,"byte_end":471440,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471445,"byte_end":471519,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471524,"byte_end":471558,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471785,"byte_end":471792,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471688,"byte_end":471755,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471760,"byte_end":471773,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4041},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471937,"byte_end":471944,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471839,"byte_end":471907,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471912,"byte_end":471925,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472075,"byte_end":472085,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472003,"byte_end":472063,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4043},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472226,"byte_end":472231,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472129,"byte_end":472201,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472206,"byte_end":472214,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472378,"byte_end":472381,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472286,"byte_end":472353,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472358,"byte_end":472366,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":4045},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472827,"byte_end":472830,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"fn <R> (&mut self, range: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472434,"byte_end":472494,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472499,"byte_end":472502,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472507,"byte_end":472519,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472524,"byte_end":472527,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472532,"byte_end":472605,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472610,"byte_end":472687,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472692,"byte_end":472695,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472700,"byte_end":472757,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":472762,"byte_end":472815,"line_start":76,"line_end":76,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":12647},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":474017,"byte_end":474022,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":12650},{"krate":0,"index":12651}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":473855,"byte_end":473920,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":473938,"byte_end":474005,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12656},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":474913,"byte_end":474926,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":12659},{"krate":0,"index":12660}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":474733,"byte_end":474816,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":474834,"byte_end":474901,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12665},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":475860,"byte_end":475868,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":12668},{"krate":0,"index":12669}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":475690,"byte_end":475763,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":475781,"byte_end":475848,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":4114},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385055,"byte_end":385067,"line_start":133,"line_end":133,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4119},{"krate":0,"index":4121},{"krate":0,"index":4123},{"krate":0,"index":4125},{"krate":0,"index":4127},{"krate":0,"index":4128}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":384973,"byte_end":385044,"line_start":132,"line_end":132,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4115},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385920,"byte_end":385925,"line_start":157,"line_end":157,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385085,"byte_end":385150,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385155,"byte_end":385158,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385163,"byte_end":385243,"line_start":136,"line_end":136,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385248,"byte_end":385320,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385325,"byte_end":385346,"line_start":138,"line_end":138,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385351,"byte_end":385354,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385359,"byte_end":385373,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385378,"byte_end":385381,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385386,"byte_end":385393,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385398,"byte_end":385439,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385444,"byte_end":385488,"line_start":144,"line_end":144,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385493,"byte_end":385496,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385501,"byte_end":385545,"line_start":146,"line_end":146,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385550,"byte_end":385594,"line_start":147,"line_end":147,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385599,"byte_end":385602,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385607,"byte_end":385651,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385656,"byte_end":385688,"line_start":150,"line_end":150,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385693,"byte_end":385696,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385701,"byte_end":385734,"line_start":152,"line_end":152,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385739,"byte_end":385782,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385787,"byte_end":385836,"line_start":154,"line_end":154,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385841,"byte_end":385900,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385905,"byte_end":385912,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4117},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386965,"byte_end":386969,"line_start":189,"line_end":189,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386063,"byte_end":386137,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386142,"byte_end":386178,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386183,"byte_end":386186,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386191,"byte_end":386269,"line_start":168,"line_end":168,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386274,"byte_end":386301,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386306,"byte_end":386309,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386314,"byte_end":386328,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386333,"byte_end":386336,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386341,"byte_end":386348,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386353,"byte_end":386394,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386399,"byte_end":386443,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386448,"byte_end":386451,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386456,"byte_end":386503,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386508,"byte_end":386538,"line_start":178,"line_end":178,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386543,"byte_end":386546,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386551,"byte_end":386603,"line_start":180,"line_end":180,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386608,"byte_end":386611,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386616,"byte_end":386687,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386692,"byte_end":386756,"line_start":183,"line_end":183,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386761,"byte_end":386806,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386811,"byte_end":386836,"line_start":185,"line_end":185,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386841,"byte_end":386881,"line_start":186,"line_end":186,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386886,"byte_end":386945,"line_start":187,"line_end":187,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":386950,"byte_end":386957,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387336,"byte_end":387349,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"fn <'a> (&'a mut self, bufs: &'a mut [IoSliceMut<'a>]) -> ReadVectored<'a, Self>","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387098,"byte_end":387182,"line_start":195,"line_end":195,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387187,"byte_end":387205,"line_start":196,"line_end":196,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387210,"byte_end":387213,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387218,"byte_end":387296,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387301,"byte_end":387328,"line_start":199,"line_end":199,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4121},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388721,"byte_end":388731,"line_start":243,"line_end":243,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387508,"byte_end":387580,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387585,"byte_end":387643,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387648,"byte_end":387651,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387656,"byte_end":387730,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387735,"byte_end":387738,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387743,"byte_end":387820,"line_start":211,"line_end":211,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387825,"byte_end":387847,"line_start":212,"line_end":212,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387852,"byte_end":387855,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387860,"byte_end":387874,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387879,"byte_end":387882,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387887,"byte_end":387894,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387899,"byte_end":387940,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387945,"byte_end":387989,"line_start":218,"line_end":218,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":387994,"byte_end":387997,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388002,"byte_end":388049,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388054,"byte_end":388084,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388089,"byte_end":388092,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388097,"byte_end":388139,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388144,"byte_end":388147,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388152,"byte_end":388189,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388194,"byte_end":388253,"line_start":226,"line_end":226,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388258,"byte_end":388265,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388270,"byte_end":388273,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388278,"byte_end":388318,"line_start":229,"line_end":229,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388323,"byte_end":388326,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388331,"byte_end":388338,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388343,"byte_end":388384,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388389,"byte_end":388439,"line_start":233,"line_end":233,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388444,"byte_end":388447,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388452,"byte_end":388499,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388504,"byte_end":388534,"line_start":236,"line_end":236,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388539,"byte_end":388542,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388547,"byte_end":388601,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388606,"byte_end":388609,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388614,"byte_end":388687,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388692,"byte_end":388701,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388706,"byte_end":388713,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389523,"byte_end":389534,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388893,"byte_end":388966,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388971,"byte_end":388974,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":388979,"byte_end":389037,"line_start":254,"line_end":254,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389042,"byte_end":389045,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389050,"byte_end":389064,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389069,"byte_end":389072,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389077,"byte_end":389084,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389089,"byte_end":389130,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389135,"byte_end":389179,"line_start":260,"line_end":260,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389184,"byte_end":389187,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389192,"byte_end":389239,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389244,"byte_end":389287,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389292,"byte_end":389295,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389300,"byte_end":389355,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389360,"byte_end":389363,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389368,"byte_end":389393,"line_start":267,"line_end":267,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389398,"byte_end":389439,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389444,"byte_end":389503,"line_start":269,"line_end":269,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389508,"byte_end":389515,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390339,"byte_end":390353,"line_start":299,"line_end":299,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389699,"byte_end":389772,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389777,"byte_end":389780,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389785,"byte_end":389843,"line_start":282,"line_end":282,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389848,"byte_end":389851,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389856,"byte_end":389870,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389875,"byte_end":389878,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389883,"byte_end":389890,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389895,"byte_end":389936,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389941,"byte_end":389985,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389990,"byte_end":389993,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":389998,"byte_end":390045,"line_start":290,"line_end":290,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390050,"byte_end":390096,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390101,"byte_end":390104,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390109,"byte_end":390167,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390172,"byte_end":390175,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390180,"byte_end":390205,"line_start":295,"line_end":295,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390210,"byte_end":390255,"line_start":296,"line_end":296,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390260,"byte_end":390319,"line_start":297,"line_end":297,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390324,"byte_end":390331,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391680,"byte_end":391685,"line_start":337,"line_end":337,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"fn (self) -> (ReadHalf<Self>, WriteHalf<Self>)","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390523,"byte_end":390594,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390599,"byte_end":390602,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390607,"byte_end":390677,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390682,"byte_end":390707,"line_start":311,"line_end":311,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390712,"byte_end":390715,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390720,"byte_end":390734,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390739,"byte_end":390742,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390747,"byte_end":390754,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390759,"byte_end":390800,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390805,"byte_end":390855,"line_start":317,"line_end":317,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390860,"byte_end":390863,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390868,"byte_end":390938,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":390943,"byte_end":391013,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391018,"byte_end":391069,"line_start":321,"line_end":321,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391074,"byte_end":391077,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391082,"byte_end":391125,"line_start":323,"line_end":323,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391130,"byte_end":391193,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391198,"byte_end":391245,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391250,"byte_end":391253,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391258,"byte_end":391263,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391268,"byte_end":391339,"line_start":328,"line_end":328,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391344,"byte_end":391396,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391401,"byte_end":391453,"line_start":330,"line_end":330,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391458,"byte_end":391463,"line_start":331,"line_end":331,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391468,"byte_end":391471,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391476,"byte_end":391538,"line_start":333,"line_end":333,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391543,"byte_end":391596,"line_start":334,"line_end":334,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391601,"byte_end":391660,"line_start":335,"line_end":335,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391665,"byte_end":391672,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392406,"byte_end":392410,"line_start":362,"line_end":362,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391813,"byte_end":391883,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391888,"byte_end":391919,"line_start":344,"line_end":344,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391924,"byte_end":391927,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391932,"byte_end":391946,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391951,"byte_end":391954,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391959,"byte_end":391966,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":391971,"byte_end":392012,"line_start":349,"line_end":349,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392017,"byte_end":392061,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392066,"byte_end":392069,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392074,"byte_end":392121,"line_start":352,"line_end":352,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392126,"byte_end":392154,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392159,"byte_end":392162,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392167,"byte_end":392201,"line_start":355,"line_end":355,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392206,"byte_end":392248,"line_start":356,"line_end":356,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392253,"byte_end":392256,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392261,"byte_end":392282,"line_start":358,"line_end":358,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392287,"byte_end":392322,"line_start":359,"line_end":359,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392327,"byte_end":392386,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":392391,"byte_end":392398,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4131},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393140,"byte_end":393153,"line_start":385,"line_end":385,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4136},{"krate":0,"index":4138},{"krate":0,"index":4140}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393057,"byte_end":393129,"line_start":384,"line_end":384,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393894,"byte_end":393899,"line_start":408,"line_end":408,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393172,"byte_end":393237,"line_start":386,"line_end":386,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393242,"byte_end":393245,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393250,"byte_end":393264,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393269,"byte_end":393272,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393277,"byte_end":393284,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393289,"byte_end":393330,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393335,"byte_end":393384,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393389,"byte_end":393426,"line_start":393,"line_end":393,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393431,"byte_end":393434,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393439,"byte_end":393473,"line_start":395,"line_end":395,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393478,"byte_end":393481,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393486,"byte_end":393491,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393496,"byte_end":393542,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393547,"byte_end":393614,"line_start":399,"line_end":399,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393619,"byte_end":393662,"line_start":400,"line_end":400,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393667,"byte_end":393710,"line_start":401,"line_end":401,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393715,"byte_end":393747,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393752,"byte_end":393757,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393762,"byte_end":393765,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393770,"byte_end":393810,"line_start":405,"line_end":405,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393815,"byte_end":393874,"line_start":406,"line_end":406,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393879,"byte_end":393886,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394072,"byte_end":394077,"line_start":415,"line_end":415,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"fn (&mut self) -> Close<'_, Self>","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393999,"byte_end":394064,"line_start":414,"line_end":414,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4134},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394383,"byte_end":394388,"line_start":425,"line_end":425,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394177,"byte_end":394248,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394253,"byte_end":394256,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394261,"byte_end":394343,"line_start":423,"line_end":423,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394348,"byte_end":394375,"line_start":424,"line_end":424,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4136},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394759,"byte_end":394773,"line_start":436,"line_end":436,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"fn <'a> (&'a mut self, bufs: &'a [IoSlice<'a>]) -> WriteVectored<'a, Self>","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394515,"byte_end":394601,"line_start":431,"line_end":431,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394606,"byte_end":394624,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394629,"byte_end":394632,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394637,"byte_end":394719,"line_start":434,"line_end":434,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394724,"byte_end":394751,"line_start":435,"line_end":435,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395580,"byte_end":395589,"line_start":462,"line_end":462,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394927,"byte_end":394959,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394964,"byte_end":394967,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":394972,"byte_end":395053,"line_start":444,"line_end":444,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395058,"byte_end":395080,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395085,"byte_end":395088,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395093,"byte_end":395171,"line_start":447,"line_end":447,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395176,"byte_end":395179,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395184,"byte_end":395198,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395203,"byte_end":395206,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395211,"byte_end":395218,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395223,"byte_end":395264,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395269,"byte_end":395314,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395319,"byte_end":395322,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395327,"byte_end":395374,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395379,"byte_end":395382,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395387,"byte_end":395430,"line_start":457,"line_end":457,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395435,"byte_end":395438,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395443,"byte_end":395496,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395501,"byte_end":395560,"line_start":460,"line_end":460,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":395565,"byte_end":395572,"line_start":461,"line_end":461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398922,"byte_end":398931,"line_start":559,"line_end":559,"column_start":8,"column_end":17},"name":"into_sink","qualname":"::io::AsyncWriteExt::into_sink","value":"fn <Item> (self) -> IntoSink<Self, Item>","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","sig":null,"attributes":[{"value":"/ Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398015,"byte_end":398104,"line_start":532,"line_end":532,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398109,"byte_end":398112,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a sink that will write each value passed to it","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398117,"byte_end":398189,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/ into the underlying writer.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398194,"byte_end":398225,"line_start":535,"line_end":535,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398230,"byte_end":398233,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given writer, returning a wrapped","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398238,"byte_end":398312,"line_start":537,"line_end":537,"column_start":5,"column_end":79}},{"value":"/ version.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398317,"byte_end":398329,"line_start":538,"line_end":538,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398334,"byte_end":398337,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398342,"byte_end":398356,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398361,"byte_end":398364,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398369,"byte_end":398376,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398381,"byte_end":398422,"line_start":543,"line_end":543,"column_start":5,"column_end":46}},{"value":"/ use futures::io::AsyncWriteExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398427,"byte_end":398462,"line_start":544,"line_end":544,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398467,"byte_end":398510,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398515,"byte_end":398518,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok([1, 2, 3]), Ok([4, 5, 6])]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398523,"byte_end":398589,"line_start":547,"line_end":547,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398594,"byte_end":398597,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ let mut writer = vec![];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398602,"byte_end":398630,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398635,"byte_end":398638,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ stream.forward((&mut writer).into_sink()).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398643,"byte_end":398696,"line_start":551,"line_end":551,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398701,"byte_end":398704,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer, vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398709,"byte_end":398756,"line_start":553,"line_end":553,"column_start":5,"column_end":52}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398761,"byte_end":398807,"line_start":554,"line_end":554,"column_start":5,"column_end":51}},{"value":"/ # })?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398812,"byte_end":398822,"line_start":555,"line_end":555,"column_start":5,"column_end":15}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398827,"byte_end":398873,"line_start":556,"line_end":556,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398878,"byte_end":398885,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":398890,"byte_end":398914,"line_start":558,"line_end":558,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":4144},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399186,"byte_end":399198,"line_start":569,"line_end":569,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":4145}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399104,"byte_end":399175,"line_start":568,"line_end":568,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4145},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399468,"byte_end":399472,"line_start":575,"line_end":575,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399216,"byte_end":399285,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399290,"byte_end":399343,"line_start":571,"line_end":571,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399348,"byte_end":399351,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399356,"byte_end":399433,"line_start":573,"line_end":573,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399438,"byte_end":399460,"line_start":574,"line_end":574,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":4148},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399724,"byte_end":399739,"line_start":585,"line_end":585,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":4149},{"krate":0,"index":4151},{"krate":0,"index":4153}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399639,"byte_end":399713,"line_start":584,"line_end":584,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401343,"byte_end":401353,"line_start":627,"line_end":627,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399760,"byte_end":399835,"line_start":586,"line_end":586,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399840,"byte_end":399907,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399912,"byte_end":400009,"line_start":588,"line_end":588,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400014,"byte_end":400017,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400022,"byte_end":400092,"line_start":590,"line_end":590,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400097,"byte_end":400171,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400176,"byte_end":400231,"line_start":592,"line_end":592,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400236,"byte_end":400239,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400244,"byte_end":400322,"line_start":594,"line_end":594,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400327,"byte_end":400354,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400359,"byte_end":400362,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400367,"byte_end":400444,"line_start":597,"line_end":597,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400449,"byte_end":400471,"line_start":598,"line_end":598,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400476,"byte_end":400479,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400484,"byte_end":400498,"line_start":600,"line_end":600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400503,"byte_end":400506,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400511,"byte_end":400518,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400523,"byte_end":400564,"line_start":603,"line_end":603,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400569,"byte_end":400616,"line_start":604,"line_end":604,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400621,"byte_end":400624,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400629,"byte_end":400678,"line_start":606,"line_end":606,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400683,"byte_end":400708,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400713,"byte_end":400716,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400721,"byte_end":400744,"line_start":609,"line_end":609,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400749,"byte_end":400810,"line_start":610,"line_end":610,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400815,"byte_end":400844,"line_start":611,"line_end":611,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400849,"byte_end":400880,"line_start":612,"line_end":612,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400885,"byte_end":400901,"line_start":613,"line_end":613,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400906,"byte_end":400909,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400914,"byte_end":400937,"line_start":615,"line_end":615,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":400942,"byte_end":401003,"line_start":616,"line_end":616,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401008,"byte_end":401037,"line_start":617,"line_end":617,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401042,"byte_end":401072,"line_start":618,"line_end":618,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401077,"byte_end":401093,"line_start":619,"line_end":619,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401098,"byte_end":401101,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401106,"byte_end":401129,"line_start":621,"line_end":621,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401134,"byte_end":401195,"line_start":622,"line_end":622,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401200,"byte_end":401229,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401234,"byte_end":401259,"line_start":624,"line_end":624,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401264,"byte_end":401323,"line_start":625,"line_end":625,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401328,"byte_end":401335,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4151},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403524,"byte_end":403533,"line_start":688,"line_end":688,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401542,"byte_end":401617,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401622,"byte_end":401693,"line_start":638,"line_end":638,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401698,"byte_end":401793,"line_start":639,"line_end":639,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401798,"byte_end":401801,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401806,"byte_end":401876,"line_start":641,"line_end":641,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401881,"byte_end":401956,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":401961,"byte_end":402031,"line_start":643,"line_end":643,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402036,"byte_end":402046,"line_start":644,"line_end":644,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402051,"byte_end":402054,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402059,"byte_end":402137,"line_start":646,"line_end":646,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402142,"byte_end":402169,"line_start":647,"line_end":647,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402174,"byte_end":402177,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402182,"byte_end":402259,"line_start":649,"line_end":649,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402264,"byte_end":402286,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402291,"byte_end":402294,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402299,"byte_end":402311,"line_start":652,"line_end":652,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402316,"byte_end":402319,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402324,"byte_end":402397,"line_start":654,"line_end":654,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402402,"byte_end":402475,"line_start":655,"line_end":655,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402480,"byte_end":402554,"line_start":656,"line_end":656,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402559,"byte_end":402615,"line_start":657,"line_end":657,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402620,"byte_end":402623,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402628,"byte_end":402675,"line_start":659,"line_end":659,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402680,"byte_end":402683,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402688,"byte_end":402702,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402707,"byte_end":402710,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402715,"byte_end":402722,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402727,"byte_end":402768,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402773,"byte_end":402820,"line_start":665,"line_end":665,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402825,"byte_end":402828,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402833,"byte_end":402879,"line_start":667,"line_end":667,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402884,"byte_end":402916,"line_start":668,"line_end":668,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402921,"byte_end":402924,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402929,"byte_end":402952,"line_start":670,"line_end":670,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":402957,"byte_end":403011,"line_start":671,"line_end":671,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403016,"byte_end":403045,"line_start":672,"line_end":672,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403050,"byte_end":403079,"line_start":673,"line_end":673,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403084,"byte_end":403100,"line_start":674,"line_end":674,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403105,"byte_end":403108,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403113,"byte_end":403136,"line_start":676,"line_end":676,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403141,"byte_end":403195,"line_start":677,"line_end":677,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403200,"byte_end":403229,"line_start":678,"line_end":678,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403234,"byte_end":403261,"line_start":679,"line_end":679,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403266,"byte_end":403282,"line_start":680,"line_end":680,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403287,"byte_end":403290,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403295,"byte_end":403318,"line_start":682,"line_end":682,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403323,"byte_end":403377,"line_start":683,"line_end":683,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403382,"byte_end":403411,"line_start":684,"line_end":684,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403416,"byte_end":403440,"line_start":685,"line_end":685,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403445,"byte_end":403504,"line_start":686,"line_end":686,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403509,"byte_end":403516,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":405018,"byte_end":405023,"line_start":726,"line_end":726,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403672,"byte_end":403723,"line_start":694,"line_end":694,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403728,"byte_end":403815,"line_start":695,"line_end":695,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403820,"byte_end":403823,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403828,"byte_end":403894,"line_start":697,"line_end":697,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403899,"byte_end":403981,"line_start":698,"line_end":698,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":403986,"byte_end":404046,"line_start":699,"line_end":699,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404051,"byte_end":404054,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404059,"byte_end":404094,"line_start":701,"line_end":701,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404099,"byte_end":404121,"line_start":702,"line_end":702,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404126,"byte_end":404129,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404134,"byte_end":404146,"line_start":704,"line_end":704,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404151,"byte_end":404154,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404159,"byte_end":404250,"line_start":706,"line_end":706,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404255,"byte_end":404258,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404263,"byte_end":404325,"line_start":708,"line_end":708,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404330,"byte_end":404333,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404338,"byte_end":404352,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404357,"byte_end":404360,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404365,"byte_end":404372,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404377,"byte_end":404418,"line_start":713,"line_end":713,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404423,"byte_end":404470,"line_start":714,"line_end":714,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404475,"byte_end":404510,"line_start":715,"line_end":715,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404515,"byte_end":404518,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404523,"byte_end":404578,"line_start":717,"line_end":717,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404583,"byte_end":404586,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404591,"byte_end":404653,"line_start":719,"line_end":719,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404658,"byte_end":404729,"line_start":720,"line_end":720,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404734,"byte_end":404805,"line_start":721,"line_end":721,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404810,"byte_end":404881,"line_start":722,"line_end":722,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404886,"byte_end":404934,"line_start":723,"line_end":723,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":404939,"byte_end":404998,"line_start":724,"line_end":724,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":405003,"byte_end":405010,"line_start":725,"line_end":725,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4166},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":476860,"byte_end":476867,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4168},{"krate":0,"index":4169}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4168},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":476882,"byte_end":476888,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":4166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":476897,"byte_end":476906,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn (self, arg: A) -> Self::Output","parent":{"krate":0,"index":4166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4176},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":477098,"byte_end":477104,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4178}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4178},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":477129,"byte_end":477137,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn (&mut self, arg: A) -> Self::Output","parent":{"krate":0,"index":4176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4193},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":478441,"byte_end":478445,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12692},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":478801,"byte_end":478808,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12713},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479542,"byte_end":479555,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12729},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479897,"byte_end":479906,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12744},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480612,"byte_end":480619,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12759},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481330,"byte_end":481338,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12774},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482058,"byte_end":482069,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12786},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482887,"byte_end":482899,"line_start":272,"line_end":272,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12798},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":483980,"byte_end":483994,"line_start":309,"line_end":309,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4357},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484753,"byte_end":484759,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":12831},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":12832},{"krate":0,"index":12980},{"krate":0,"index":12985},{"krate":0,"index":13043}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12305,"byte_end":12330,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"! Futures-powered synchronization primitives.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8633509,"byte_end":8633556,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8633557,"byte_end":8633560,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8633561,"byte_end":8633636,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8633637,"byte_end":8633694,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":12853},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634814,"byte_end":8634819,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":12855},{"krate":0,"index":12856},{"krate":0,"index":12857}],"decl_id":null,"docs":" A futures-aware mutex.\n \n # Fairness\n \n This mutex provides no fairness guarantees. Tasks may not acquire the mutex\n in the order that they requested the lock, and it's possible for a single task\n which repeatedly takes the lock to starve other tasks, which may be left waiting\n indefinitely.\n","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634485,"byte_end":8634511,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634512,"byte_end":8634516,"line_start":12,"line_end":12,"column_start":1,"column_end":5}},{"value":"/ # Fairness","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634517,"byte_end":8634531,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/ ","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634532,"byte_end":8634536,"line_start":14,"line_end":14,"column_start":1,"column_end":5}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634537,"byte_end":8634616,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634617,"byte_end":8634699,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634700,"byte_end":8634784,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634785,"byte_end":8634802,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":12880},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636148,"byte_end":8636151,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636098,"byte_end":8636136,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":12881},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636583,"byte_end":8636593,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636337,"byte_end":8636392,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636397,"byte_end":8636400,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636405,"byte_end":8636419,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636424,"byte_end":8636427,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636432,"byte_end":8636439,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636444,"byte_end":8636473,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636478,"byte_end":8636481,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636486,"byte_end":8636516,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636521,"byte_end":8636559,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636564,"byte_end":8636571,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12884},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636807,"byte_end":8636815,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636679,"byte_end":8636723,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636728,"byte_end":8636731,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636736,"byte_end":8636795,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":12885},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637236,"byte_end":8637240,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexLockFuture<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637071,"byte_end":8637107,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637112,"byte_end":8637115,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637120,"byte_end":8637193,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637198,"byte_end":8637224,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":12886},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637901,"byte_end":8637908,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637391,"byte_end":8637446,"line_start":121,"line_end":121,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637451,"byte_end":8637454,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637459,"byte_end":8637534,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637539,"byte_end":8637613,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637618,"byte_end":8637621,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637626,"byte_end":8637640,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637645,"byte_end":8637648,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637653,"byte_end":8637660,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637665,"byte_end":8637706,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637711,"byte_end":8637740,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637745,"byte_end":8637748,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637753,"byte_end":8637787,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637792,"byte_end":8637818,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637823,"byte_end":8637863,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637868,"byte_end":8637877,"line_start":135,"line_end":135,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8637882,"byte_end":8637889,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12890},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8639631,"byte_end":8639646,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":12893},{"krate":0,"index":12894}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8639538,"byte_end":8639619,"line_start":181,"line_end":181,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":12909},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642260,"byte_end":8642270,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":12912}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642096,"byte_end":8642160,"line_start":258,"line_end":258,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642161,"byte_end":8642234,"line_start":259,"line_end":259,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642235,"byte_end":8642248,"line_start":260,"line_end":260,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":12916},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642839,"byte_end":8642842,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"fn <U, F> (this: Self, f: F) -> MappedMutexGuard<'a, T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642360,"byte_end":8642420,"line_start":266,"line_end":266,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642425,"byte_end":8642428,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642433,"byte_end":8642446,"line_start":268,"line_end":268,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642451,"byte_end":8642454,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642459,"byte_end":8642466,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642471,"byte_end":8642512,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642517,"byte_end":8642560,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642565,"byte_end":8642568,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642573,"byte_end":8642626,"line_start":274,"line_end":274,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642631,"byte_end":8642636,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642641,"byte_end":8642730,"line_start":276,"line_end":276,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642735,"byte_end":8642777,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642782,"byte_end":8642787,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642792,"byte_end":8642801,"line_start":279,"line_end":279,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642806,"byte_end":8642813,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642818,"byte_end":8642827,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":12932},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644151,"byte_end":8644167,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":12936},{"krate":0,"index":12937}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643967,"byte_end":8644055,"line_start":323,"line_end":323,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644056,"byte_end":8644139,"line_start":324,"line_end":324,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":12942},"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644896,"byte_end":8644899,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"fn <V, F> (this: Self, f: F) -> MappedMutexGuard<'a, T, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644307,"byte_end":8644367,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644372,"byte_end":8644375,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644380,"byte_end":8644393,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644398,"byte_end":8644401,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644406,"byte_end":8644413,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644418,"byte_end":8644459,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644464,"byte_end":8644525,"line_start":337,"line_end":337,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644530,"byte_end":8644533,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644538,"byte_end":8644591,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644596,"byte_end":8644601,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644606,"byte_end":8644695,"line_start":341,"line_end":341,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644700,"byte_end":8644790,"line_start":342,"line_end":342,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644795,"byte_end":8644834,"line_start":343,"line_end":343,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644839,"byte_end":8644844,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644849,"byte_end":8644858,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644863,"byte_end":8644870,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644875,"byte_end":8644884,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35079,"byte_end":35086,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35213,"byte_end":35220,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35454,"byte_end":35461,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":4440}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36266,"byte_end":36273,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36507,"byte_end":36514,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":4441}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":37399,"byte_end":37406,"line_start":103,"line_end":103,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39610,"byte_end":39614,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39716,"byte_end":39720,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41444,"byte_end":41448,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41557,"byte_end":41561,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42557,"byte_end":42577,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42709,"byte_end":42712,"line_start":33,"line_end":33,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42887,"byte_end":42890,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":43154,"byte_end":43157,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":4551}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45056,"byte_end":45067,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45221,"byte_end":45232,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46412,"byte_end":46418,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46461,"byte_end":46467,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46725,"byte_end":46730,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46957,"byte_end":46962,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47059,"byte_end":47064,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47308,"byte_end":47314,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47780,"byte_end":47786,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48478,"byte_end":48483,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":50180,"byte_end":50186,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":50338,"byte_end":50344,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":51882,"byte_end":51887,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":53674,"byte_end":53680,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":53874,"byte_end":53880,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":54308,"byte_end":54316,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18656,"byte_end":18657,"line_start":115,"line_end":115,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76250,"byte_end":76260,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76425,"byte_end":76435,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76541,"byte_end":76551,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77189,"byte_end":77199,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77329,"byte_end":77339,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77592,"byte_end":77602,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":5273}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":78659,"byte_end":78669,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":78922,"byte_end":78932,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":5274}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":80074,"byte_end":80084,"line_start":113,"line_end":113,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82470,"byte_end":82483,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82616,"byte_end":82629,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82885,"byte_end":82898,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":5350}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59219,"byte_end":59222,"line_start":133,"line_end":133,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84293,"byte_end":84297,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84870,"byte_end":84874,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":85006,"byte_end":85010,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85587,"byte_end":85594,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86145,"byte_end":86152,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86297,"byte_end":86304,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86331,"byte_end":86338,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87624,"byte_end":87633,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6424},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":89070,"byte_end":89079,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":89295,"byte_end":89304,"line_start":93,"line_end":93,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":6425}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90708,"byte_end":90720,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6486},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":92184,"byte_end":92196,"line_start":69,"line_end":69,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":92424,"byte_end":92436,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":6487}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93982,"byte_end":93994,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":94327,"byte_end":94339,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":94522,"byte_end":94534,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94944,"byte_end":94950,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95620,"byte_end":95626,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95768,"byte_end":95774,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96251,"byte_end":96256,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96435,"byte_end":96440,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96472,"byte_end":96477,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96574,"byte_end":96579,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103871,"byte_end":103878,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105543,"byte_end":105550,"line_start":89,"line_end":89,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":106247,"byte_end":106254,"line_start":116,"line_end":116,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106724,"byte_end":106730,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":108090,"byte_end":108096,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":108799,"byte_end":108805,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109342,"byte_end":109351,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":110331,"byte_end":110340,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":111046,"byte_end":111055,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119272,"byte_end":119282,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":121044,"byte_end":121054,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":122227,"byte_end":122237,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122719,"byte_end":122728,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124434,"byte_end":124443,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125796,"byte_end":125804,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126774,"byte_end":126782,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":128226,"byte_end":128234,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128881,"byte_end":128887,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129272,"byte_end":129278,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129659,"byte_end":129665,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129906,"byte_end":129912,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":7388}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130282,"byte_end":130288,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130564,"byte_end":130570,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":7389}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130953,"byte_end":130959,"line_start":101,"line_end":101,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":131266,"byte_end":131272,"line_start":115,"line_end":115,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7393}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":132841,"byte_end":132847,"line_start":172,"line_end":172,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7394},{"krate":0,"index":7395}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":133986,"byte_end":133992,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":7398},{"krate":0,"index":7399}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":135467,"byte_end":135473,"line_start":262,"line_end":262,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7400}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":135945,"byte_end":135951,"line_start":281,"line_end":281,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7401},{"krate":0,"index":7402}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8477972,"byte_end":8477981,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7418}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479283,"byte_end":8479294,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7420}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8481170,"byte_end":8481177,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7424}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8481360,"byte_end":8481367,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8481393,"byte_end":8481402,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7428},{"krate":0,"index":7429}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482376,"byte_end":8482387,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7431}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186120,"byte_end":186125,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186394,"byte_end":186399,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186604,"byte_end":186609,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":7522},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188207,"byte_end":188214,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188525,"byte_end":188532,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188708,"byte_end":188715,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189668,"byte_end":189674,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189949,"byte_end":189955,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":7623}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":190764,"byte_end":190770,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191450,"byte_end":191459,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":7668},{"krate":0,"index":7669},{"krate":0,"index":7670},{"krate":0,"index":7671}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191692,"byte_end":191701,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191819,"byte_end":191828,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":7672},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":192546,"byte_end":192555,"line_start":63,"line_end":63,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":7673},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7676}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193265,"byte_end":193271,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193663,"byte_end":193669,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":7745},{"krate":0,"index":7746},{"krate":0,"index":7747},{"krate":0,"index":7748}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":194063,"byte_end":194069,"line_start":57,"line_end":57,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":194337,"byte_end":194343,"line_start":67,"line_end":67,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":7749},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":195796,"byte_end":195802,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":7750},{"krate":0,"index":7751},{"krate":0,"index":7752},{"krate":0,"index":7753}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196544,"byte_end":196553,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196850,"byte_end":196859,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":7819},{"krate":0,"index":7820},{"krate":0,"index":7821},{"krate":0,"index":7822}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":197160,"byte_end":197169,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":197446,"byte_end":197455,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":7823},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":198947,"byte_end":198956,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":7824},{"krate":0,"index":7825},{"krate":0,"index":7826},{"krate":0,"index":7827}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199584,"byte_end":199591,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":7884},{"krate":0,"index":7885},{"krate":0,"index":7886},{"krate":0,"index":7887}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199760,"byte_end":199767,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199959,"byte_end":199966,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":7888}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":200826,"byte_end":200833,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":7889},{"krate":0,"index":7890},{"krate":0,"index":7891},{"krate":0,"index":7892}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201457,"byte_end":201461,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201817,"byte_end":201821,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":202154,"byte_end":202158,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":202405,"byte_end":202409,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":8039}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":204027,"byte_end":204034,"line_start":21,"line_end":21,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":204282,"byte_end":204289,"line_start":31,"line_end":31,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":204491,"byte_end":204498,"line_start":41,"line_end":41,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":8110}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206301,"byte_end":206308,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206601,"byte_end":206608,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206902,"byte_end":206909,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":207160,"byte_end":207167,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":8244}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208263,"byte_end":208267,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":8289},{"krate":0,"index":8290},{"krate":0,"index":8291},{"krate":0,"index":8292}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208768,"byte_end":208772,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208870,"byte_end":208874,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":8293},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":209619,"byte_end":209623,"line_start":74,"line_end":74,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":8294},{"krate":0,"index":8295},{"krate":0,"index":8296},{"krate":0,"index":8297}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210110,"byte_end":210122,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212636,"byte_end":212648,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212768,"byte_end":212780,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":213639,"byte_end":213642,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":213857,"byte_end":213860,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":8440},{"krate":0,"index":8441},{"krate":0,"index":8442},{"krate":0,"index":8443}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":214034,"byte_end":214037,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":214211,"byte_end":214214,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":8444},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":214809,"byte_end":214812,"line_start":72,"line_end":72,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":8446},{"krate":0,"index":8447},{"krate":0,"index":8448},{"krate":0,"index":8449}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215385,"byte_end":215389,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215440,"byte_end":215444,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215595,"byte_end":215599,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215738,"byte_end":215742,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216391,"byte_end":216405,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216566,"byte_end":216580,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216724,"byte_end":216738,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":217924,"byte_end":217932,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":8612},{"krate":0,"index":8613},{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":1517},{"krate":0,"index":8616}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":219158,"byte_end":219166,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":219308,"byte_end":219316,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":8617},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220148,"byte_end":220156,"line_start":98,"line_end":98,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":8618},{"krate":0,"index":8619},{"krate":0,"index":8620},{"krate":0,"index":8621}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220521,"byte_end":220525,"line_start":114,"line_end":114,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220796,"byte_end":220800,"line_start":126,"line_end":126,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220911,"byte_end":220915,"line_start":132,"line_end":132,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":221772,"byte_end":221776,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":8714},{"krate":0,"index":8715},{"krate":0,"index":8716},{"krate":0,"index":8717}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":222004,"byte_end":222008,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":222126,"byte_end":222130,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":8718},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":223082,"byte_end":223086,"line_start":71,"line_end":71,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":8719},{"krate":0,"index":8720},{"krate":0,"index":8721},{"krate":0,"index":8722}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":223803,"byte_end":223812,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":224264,"byte_end":224273,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8797}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":224702,"byte_end":224711,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":224971,"byte_end":224980,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":8798},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":226676,"byte_end":226685,"line_start":121,"line_end":121,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":8799},{"krate":0,"index":8800},{"krate":0,"index":8801},{"krate":0,"index":8802}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":227321,"byte_end":227325,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":8847},{"krate":0,"index":8848},{"krate":0,"index":8849},{"krate":0,"index":8850}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":227535,"byte_end":227539,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":8851},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":228578,"byte_end":228582,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":228830,"byte_end":228834,"line_start":83,"line_end":83,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":8852},{"krate":0,"index":8853},{"krate":0,"index":8854},{"krate":0,"index":8855}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229540,"byte_end":229549,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229997,"byte_end":230006,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":8927},{"krate":0,"index":8928},{"krate":0,"index":8929},{"krate":0,"index":8930}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":230428,"byte_end":230437,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":8931},{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":232046,"byte_end":232055,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":232423,"byte_end":232432,"line_start":123,"line_end":123,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":8932},{"krate":0,"index":8933},{"krate":0,"index":8934},{"krate":0,"index":8935}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233378,"byte_end":233387,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233714,"byte_end":233723,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":8994},{"krate":0,"index":8995},{"krate":0,"index":8996},{"krate":0,"index":8997},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235916,"byte_end":235925,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":8998},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":236995,"byte_end":237004,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":237241,"byte_end":237250,"line_start":170,"line_end":170,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":8999},{"krate":0,"index":9000},{"krate":0,"index":9001},{"krate":0,"index":9002}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":237889,"byte_end":237893,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":238183,"byte_end":238187,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":9068},{"krate":0,"index":9069},{"krate":0,"index":9070},{"krate":0,"index":9071}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":238496,"byte_end":238500,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":238738,"byte_end":238742,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":9072},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":239990,"byte_end":239994,"line_start":101,"line_end":101,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":9073},{"krate":0,"index":9074},{"krate":0,"index":9075},{"krate":0,"index":9076}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240653,"byte_end":240656,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242407,"byte_end":242410,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242601,"byte_end":242604,"line_start":75,"line_end":75,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":9139},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245275,"byte_end":245281,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":9187},{"krate":0,"index":9188},{"krate":0,"index":9189},{"krate":0,"index":9190}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245792,"byte_end":245798,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":9191},{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":247465,"byte_end":247471,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":247694,"byte_end":247700,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":9192},{"krate":0,"index":9193},{"krate":0,"index":9194},{"krate":0,"index":9195}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248411,"byte_end":248422,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":9243},{"krate":0,"index":9244},{"krate":0,"index":9245},{"krate":0,"index":9246}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248787,"byte_end":248798,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":9247},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":250915,"byte_end":250926,"line_start":97,"line_end":97,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":251149,"byte_end":251160,"line_start":105,"line_end":105,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":9248},{"krate":0,"index":9249},{"krate":0,"index":9250},{"krate":0,"index":9251}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":251867,"byte_end":251871,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":252357,"byte_end":252361,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":252525,"byte_end":252529,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":9327},{"krate":0,"index":9328},{"krate":0,"index":9329},{"krate":0,"index":9330}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":252996,"byte_end":253000,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":9331},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":254263,"byte_end":254267,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":254637,"byte_end":254641,"line_start":128,"line_end":128,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1917},{"krate":0,"index":9332},{"krate":0,"index":9333},{"krate":0,"index":9334},{"krate":0,"index":9335}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8515835,"byte_end":8515850,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9356}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8516182,"byte_end":8516197,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9359},{"krate":0,"index":9508},{"krate":0,"index":9509},{"krate":0,"index":9510},{"krate":0,"index":9511}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8516610,"byte_end":8516625,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9362},{"krate":0,"index":13340},{"krate":0,"index":9363}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8518152,"byte_end":8518167,"line_start":108,"line_end":108,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9366}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8518451,"byte_end":8518466,"line_start":120,"line_end":120,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9370},{"krate":0,"index":9512},{"krate":0,"index":9513},{"krate":0,"index":9514},{"krate":0,"index":9515}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8519208,"byte_end":8519216,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9390}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8519563,"byte_end":8519571,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9393},{"krate":0,"index":9516},{"krate":0,"index":9517},{"krate":0,"index":9518},{"krate":0,"index":9519}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8519908,"byte_end":8519916,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9396},{"krate":0,"index":13295},{"krate":0,"index":9397}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8521499,"byte_end":8521507,"line_start":107,"line_end":107,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9401},{"krate":0,"index":9520},{"krate":0,"index":9521},{"krate":0,"index":9522},{"krate":0,"index":9523}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8522282,"byte_end":8522299,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9424}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8522645,"byte_end":8522662,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9429}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8523133,"byte_end":8523150,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9434}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8523392,"byte_end":8523409,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":9439},{"krate":0,"index":13226}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525608,"byte_end":8525619,"line_start":14,"line_end":14,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525642,"byte_end":8525653,"line_start":16,"line_end":16,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9454}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526082,"byte_end":8526093,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9458},{"krate":0,"index":9459}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526644,"byte_end":8526653,"line_start":51,"line_end":51,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526701,"byte_end":8526710,"line_start":53,"line_end":53,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9469}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8527198,"byte_end":8527207,"line_start":64,"line_end":64,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9474},{"krate":0,"index":9475}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8527875,"byte_end":8527884,"line_start":81,"line_end":81,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9479},{"krate":0,"index":9480},{"krate":0,"index":9481},{"krate":0,"index":9482},{"krate":0,"index":9483}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529443,"byte_end":8529455,"line_start":124,"line_end":124,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9496}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529657,"byte_end":8529669,"line_start":132,"line_end":132,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9500}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529918,"byte_end":8529930,"line_start":139,"line_end":139,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":255260,"byte_end":255271,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":9584},{"krate":0,"index":9585},{"krate":0,"index":9586},{"krate":0,"index":9587}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":255481,"byte_end":255492,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":9588},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":256439,"byte_end":256450,"line_start":63,"line_end":63,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145315,"byte_end":145316,"line_start":194,"line_end":194,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287654,"byte_end":287661,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287954,"byte_end":287961,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":9656},{"krate":0,"index":9657},{"krate":0,"index":9658},{"krate":0,"index":9659}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":288254,"byte_end":288261,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":9660},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":289475,"byte_end":289482,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":289840,"byte_end":289847,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":9661},{"krate":0,"index":9662},{"krate":0,"index":9663},{"krate":0,"index":9664}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290377,"byte_end":290387,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":9961},{"krate":0,"index":9962},{"krate":0,"index":9963},{"krate":0,"index":9964}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290586,"byte_end":290596,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290717,"byte_end":290727,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":291174,"byte_end":291184,"line_start":50,"line_end":50,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":9965},{"krate":0,"index":9966},{"krate":0,"index":9967},{"krate":0,"index":9968}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":291792,"byte_end":291798,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":292090,"byte_end":292096,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":10204},{"krate":0,"index":10205},{"krate":0,"index":10206},{"krate":0,"index":10207}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":292386,"byte_end":292392,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":10208},{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":293740,"byte_end":293746,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":294101,"byte_end":294107,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":10209},{"krate":0,"index":10210},{"krate":0,"index":10211},{"krate":0,"index":10212}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294662,"byte_end":294669,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294723,"byte_end":294730,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294896,"byte_end":294903,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":295045,"byte_end":295052,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":295794,"byte_end":295804,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":296100,"byte_end":296110,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":296424,"byte_end":296434,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":10286}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":297811,"byte_end":297820,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":298216,"byte_end":298225,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":10355},{"krate":0,"index":10356},{"krate":0,"index":10357},{"krate":0,"index":10358}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":298529,"byte_end":298538,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":298807,"byte_end":298816,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":10359},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":300296,"byte_end":300305,"line_start":109,"line_end":109,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":10360},{"krate":0,"index":10361},{"krate":0,"index":10362},{"krate":0,"index":10363}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":300989,"byte_end":301001,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":301301,"byte_end":301313,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2327},{"krate":0,"index":10429},{"krate":0,"index":10430},{"krate":0,"index":10431},{"krate":0,"index":10432}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":301518,"byte_end":301530,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":301820,"byte_end":301832,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2339},{"krate":0,"index":10433},{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":303387,"byte_end":303399,"line_start":98,"line_end":98,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":10434},{"krate":0,"index":10435},{"krate":0,"index":10436},{"krate":0,"index":10437}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":304002,"byte_end":304012,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":10483},{"krate":0,"index":10484},{"krate":0,"index":10485},{"krate":0,"index":10486}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":304277,"byte_end":304287,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":304533,"byte_end":304543,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":10487}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":305502,"byte_end":305512,"line_start":76,"line_end":76,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":10488},{"krate":0,"index":10489},{"krate":0,"index":10490},{"krate":0,"index":10491}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":306139,"byte_end":306149,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":306341,"byte_end":306351,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":306539,"byte_end":306549,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":10547}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":307560,"byte_end":307569,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":307835,"byte_end":307844,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":10592}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":309082,"byte_end":309089,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":309448,"byte_end":309455,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":309813,"byte_end":309820,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":310086,"byte_end":310093,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":10671}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313899,"byte_end":313908,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":314209,"byte_end":314218,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2485},{"krate":0,"index":10736}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":315956,"byte_end":315968,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":316424,"byte_end":316436,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2513},{"krate":0,"index":10808},{"krate":0,"index":10809},{"krate":0,"index":10810},{"krate":0,"index":10811}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":316885,"byte_end":316897,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2518},{"krate":0,"index":10812},{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":318450,"byte_end":318462,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":318841,"byte_end":318853,"line_start":118,"line_end":118,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":10813},{"krate":0,"index":10814},{"krate":0,"index":10815},{"krate":0,"index":10816}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8549884,"byte_end":8549902,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10840},{"krate":0,"index":10889},{"krate":0,"index":10890},{"krate":0,"index":10891},{"krate":0,"index":10892}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8550261,"byte_end":8550279,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10843},{"krate":0,"index":13178}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8551638,"byte_end":8551656,"line_start":80,"line_end":80,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10848},{"krate":0,"index":10893},{"krate":0,"index":10894},{"krate":0,"index":10895},{"krate":0,"index":10896}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8552492,"byte_end":8552512,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10872}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8552877,"byte_end":8552897,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10877}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8553148,"byte_end":8553168,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10882}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8553660,"byte_end":8553680,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10887},{"krate":0,"index":13109}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319527,"byte_end":319540,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319756,"byte_end":319769,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":320023,"byte_end":320036,"line_start":48,"line_end":48,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":321904,"byte_end":321917,"line_start":103,"line_end":103,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":322579,"byte_end":322592,"line_start":131,"line_end":131,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261013,"byte_end":261014,"line_start":128,"line_end":128,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324702,"byte_end":324706,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":325312,"byte_end":325316,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326450,"byte_end":326456,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326483,"byte_end":326489,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326796,"byte_end":326802,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327414,"byte_end":327419,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327451,"byte_end":327456,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327541,"byte_end":327546,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328605,"byte_end":328609,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328738,"byte_end":328742,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":10975},{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":329382,"byte_end":329386,"line_start":64,"line_end":64,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329996,"byte_end":330003,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":330035,"byte_end":330042,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":330127,"byte_end":330134,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330659,"byte_end":330665,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330696,"byte_end":330702,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331444,"byte_end":331450,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332816,"byte_end":332822,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":11041},{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":334296,"byte_end":334302,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":334520,"byte_end":334526,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2814},{"krate":0,"index":11042}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337839,"byte_end":337845,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":338148,"byte_end":338154,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":338380,"byte_end":338386,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":11107}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560238,"byte_end":8560250,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11129}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560355,"byte_end":8560367,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560398,"byte_end":8560410,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11134}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560533,"byte_end":8560545,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11137}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560726,"byte_end":8560738,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":11140},{"krate":0,"index":11141}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563355,"byte_end":8563369,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563395,"byte_end":8563409,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11153},{"krate":0,"index":11154},{"krate":0,"index":11155},{"krate":0,"index":11156}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8565033,"byte_end":8565047,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":11159}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8565165,"byte_end":8565179,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":11162},{"krate":0,"index":11163},{"krate":0,"index":11164}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8566363,"byte_end":8566377,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":11167}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8566543,"byte_end":8566557,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11170}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8566815,"byte_end":8566829,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":11175}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/abort.rs","byte_start":8593025,"byte_end":8593036,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11219}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8594208,"byte_end":8594218,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11229},{"krate":0,"index":11230},{"krate":0,"index":11231}],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8595075,"byte_end":8595085,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":830,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8595133,"byte_end":8595140,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":11237},{"krate":0,"index":11238},{"krate":0,"index":11239}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8595404,"byte_end":8595411,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8595452,"byte_end":8595462,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11245},{"krate":0,"index":11246},{"krate":0,"index":11247}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8596379,"byte_end":8596389,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8596437,"byte_end":8596441,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11253},{"krate":0,"index":11254},{"krate":0,"index":11255}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8596697,"byte_end":8596701,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8598190,"byte_end":8598194,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8598229,"byte_end":8598233,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8598265,"byte_end":8598269,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11295}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8599346,"byte_end":8599350,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11298},{"krate":0,"index":11300}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8600362,"byte_end":8600366,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11303}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8601816,"byte_end":8601831,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11335},{"krate":0,"index":11336},{"krate":0,"index":11337}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8603681,"byte_end":8603696,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11340}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570075,"byte_end":8570091,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570132,"byte_end":8570148,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570177,"byte_end":8570193,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570218,"byte_end":8570234,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":11357}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570431,"byte_end":8570447,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11359}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572166,"byte_end":8572182,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11362}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572285,"byte_end":8572301,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11365},{"krate":0,"index":11366},{"krate":0,"index":11367},{"krate":0,"index":11368},{"krate":0,"index":11369},{"krate":0,"index":11370},{"krate":0,"index":11371},{"krate":0,"index":11372},{"krate":0,"index":11373},{"krate":0,"index":11374},{"krate":0,"index":11375},{"krate":0,"index":11376},{"krate":0,"index":11377}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8583961,"byte_end":8583977,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":11380},{"krate":0,"index":11381},{"krate":0,"index":11390}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8588374,"byte_end":8588378,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11389}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8590716,"byte_end":8590732,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11393}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8590879,"byte_end":8590895,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11396}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8592335,"byte_end":8592351,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":11399}],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8592607,"byte_end":8592623,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11404}],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8592745,"byte_end":8592761,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":11407}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605513,"byte_end":8605522,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11431}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605667,"byte_end":8605676,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11434},{"krate":0,"index":11435},{"krate":0,"index":11436},{"krate":0,"index":11437}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606726,"byte_end":8606735,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11440}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606848,"byte_end":8606857,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":11443},{"krate":0,"index":11444}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8607664,"byte_end":8607673,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11447}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608649,"byte_end":8608658,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":11452}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608803,"byte_end":8608812,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":11456}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":349238,"byte_end":349243,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":349438,"byte_end":349443,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2888}],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":349653,"byte_end":349658,"line_start":29,"line_end":29,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350619,"byte_end":350624,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350652,"byte_end":350657,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":874,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":351870,"byte_end":351876,"line_start":20,"line_end":20,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":11569},{"krate":0,"index":2936}],"docs":"","sig":null,"attributes":[]},{"id":875,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352901,"byte_end":352907,"line_start":52,"line_end":52,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":876,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":353158,"byte_end":353164,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2945},{"krate":0,"index":11570},{"krate":0,"index":11571},{"krate":0,"index":11572},{"krate":0,"index":11573}],"docs":"","sig":null,"attributes":[]},{"id":877,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355414,"byte_end":355419,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355770,"byte_end":355775,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":879,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355985,"byte_end":355990,"line_start":33,"line_end":33,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":885,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":356642,"byte_end":356653,"line_start":15,"line_end":15,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":11648},{"krate":0,"index":11649},{"krate":0,"index":11650},{"krate":0,"index":11651}],"docs":"","sig":null,"attributes":[]},{"id":886,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":356944,"byte_end":356955,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2989},{"krate":0,"index":11652},{"krate":0,"index":11653},{"krate":0,"index":11654},{"krate":0,"index":11655}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":357165,"byte_end":357176,"line_start":38,"line_end":38,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":11656},{"krate":0,"index":11657}],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":357343,"byte_end":357354,"line_start":47,"line_end":47,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":894,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":357931,"byte_end":357941,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":11717},{"krate":0,"index":11718},{"krate":0,"index":11719},{"krate":0,"index":11720},{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":895,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":358263,"byte_end":358273,"line_start":29,"line_end":29,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3025},{"krate":0,"index":3027},{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":896,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":359327,"byte_end":359337,"line_start":65,"line_end":65,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":11721},{"krate":0,"index":11722}],"docs":"","sig":null,"attributes":[]},{"id":897,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":359443,"byte_end":359453,"line_start":71,"line_end":71,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":898,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":359978,"byte_end":359982,"line_start":15,"line_end":15,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":899,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":360049,"byte_end":360053,"line_start":17,"line_end":17,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":900,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":360269,"byte_end":360273,"line_start":26,"line_end":26,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3058},{"krate":0,"index":3059}],"docs":"","sig":null,"attributes":[]},{"id":901,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":361693,"byte_end":361700,"line_start":22,"line_end":22,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":902,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":362139,"byte_end":362146,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":903,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":362257,"byte_end":362264,"line_start":44,"line_end":44,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":904,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":363157,"byte_end":363164,"line_start":78,"line_end":78,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":910,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":364826,"byte_end":364830,"line_start":22,"line_end":22,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":911,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":365132,"byte_end":365136,"line_start":35,"line_end":35,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":912,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":365596,"byte_end":365600,"line_start":55,"line_end":55,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":11822},{"krate":0,"index":11823}],"docs":"","sig":null,"attributes":[]},{"id":913,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":365795,"byte_end":365799,"line_start":65,"line_end":65,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11824},{"krate":0,"index":11825},{"krate":0,"index":11826},{"krate":0,"index":11827},{"krate":0,"index":11828}],"docs":"","sig":null,"attributes":[]},{"id":914,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":366554,"byte_end":366558,"line_start":92,"line_end":92,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":11829},{"krate":0,"index":3157},{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":920,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":368356,"byte_end":368367,"line_start":22,"line_end":22,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":921,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":368740,"byte_end":368751,"line_start":37,"line_end":37,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3187},{"krate":0,"index":11921},{"krate":0,"index":11922},{"krate":0,"index":11923},{"krate":0,"index":11924},{"krate":0,"index":11925}],"docs":"","sig":null,"attributes":[]},{"id":922,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":370166,"byte_end":370177,"line_start":85,"line_end":85,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":11926},{"krate":0,"index":11927}],"docs":"","sig":null,"attributes":[]},{"id":923,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":370400,"byte_end":370411,"line_start":96,"line_end":96,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":924,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":370660,"byte_end":370671,"line_start":107,"line_end":107,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":11928},{"krate":0,"index":3210},{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":930,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":372288,"byte_end":372294,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":11987},{"krate":0,"index":11988},{"krate":0,"index":11989},{"krate":0,"index":11990},{"krate":0,"index":11991}],"docs":"","sig":null,"attributes":[]},{"id":931,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":373121,"byte_end":373127,"line_start":51,"line_end":51,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":932,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":373452,"byte_end":373458,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3239}],"docs":"","sig":null,"attributes":[]},{"id":933,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":373627,"byte_end":373633,"line_start":69,"line_end":69,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":934,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340304,"byte_end":340305,"line_start":55,"line_end":55,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":935,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376099,"byte_end":376101,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":936,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376156,"byte_end":376158,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":937,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406099,"byte_end":406109,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":938,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406546,"byte_end":406556,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":939,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":407073,"byte_end":407083,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":940,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":407623,"byte_end":407633,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380}],"docs":"","sig":null,"attributes":[]},{"id":941,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":408382,"byte_end":408392,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":942,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":409112,"byte_end":409122,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3390},{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":943,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":409710,"byte_end":409720,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":944,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":409859,"byte_end":409869,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":945,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":410107,"byte_end":410117,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":946,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":410328,"byte_end":410338,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3405}],"docs":"","sig":null,"attributes":[]},{"id":952,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412059,"byte_end":412068,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":12082},{"krate":0,"index":12083},{"krate":0,"index":12084},{"krate":0,"index":12085},{"krate":0,"index":3433},{"krate":0,"index":12086}],"docs":"","sig":null,"attributes":[]},{"id":953,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":413336,"byte_end":413345,"line_start":81,"line_end":81,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":954,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":414957,"byte_end":414966,"line_start":125,"line_end":125,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":12087},{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":955,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":415831,"byte_end":415840,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":12088},{"krate":0,"index":12089},{"krate":0,"index":12090},{"krate":0,"index":12091}],"docs":"","sig":null,"attributes":[]},{"id":956,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":415918,"byte_end":415927,"line_start":155,"line_end":155,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3446}],"docs":"","sig":null,"attributes":[]},{"id":957,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":416243,"byte_end":416252,"line_start":164,"line_end":164,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":963,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":420071,"byte_end":420080,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":12136},{"krate":0,"index":12137},{"krate":0,"index":12138},{"krate":0,"index":12139},{"krate":0,"index":12140},{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":964,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":421667,"byte_end":421676,"line_start":92,"line_end":92,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":965,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":423099,"byte_end":423108,"line_start":135,"line_end":135,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":12141},{"krate":0,"index":12142}],"docs":"","sig":null,"attributes":[]},{"id":966,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":423189,"byte_end":423198,"line_start":139,"line_end":139,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12143},{"krate":0,"index":12144}],"docs":"","sig":null,"attributes":[]},{"id":967,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":423279,"byte_end":423288,"line_start":143,"line_end":143,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":968,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":423647,"byte_end":423656,"line_start":153,"line_end":153,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":974,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424536,"byte_end":424541,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":975,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425939,"byte_end":425944,"line_start":66,"line_end":66,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":976,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":426274,"byte_end":426279,"line_start":80,"line_end":80,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":12200},{"krate":0,"index":12201}],"docs":"","sig":null,"attributes":[]},{"id":977,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":427722,"byte_end":427727,"line_start":134,"line_end":134,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":12203},{"krate":0,"index":12204}],"docs":"","sig":null,"attributes":[]},{"id":978,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":428933,"byte_end":428938,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":979,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":428991,"byte_end":428996,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3540}],"docs":"","sig":null,"attributes":[]},{"id":980,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":429139,"byte_end":429144,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3543},{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]},{"id":986,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430892,"byte_end":430896,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3568}],"docs":"","sig":null,"attributes":[]},{"id":992,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432591,"byte_end":432598,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3591},{"krate":0,"index":12347}],"docs":"","sig":null,"attributes":[]},{"id":993,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434479,"byte_end":434485,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":994,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437713,"byte_end":437719,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":995,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":438006,"byte_end":438012,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3622},{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":996,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":438644,"byte_end":438650,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":3627}],"docs":"","sig":null,"attributes":[]},{"id":997,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":439799,"byte_end":439805,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12360},{"krate":0,"index":12361},{"krate":0,"index":12362},{"krate":0,"index":12363}],"docs":"","sig":null,"attributes":[]},{"id":998,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":439880,"byte_end":439886,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12364},{"krate":0,"index":12365},{"krate":0,"index":12366},{"krate":0,"index":12367}],"docs":"","sig":null,"attributes":[]},{"id":999,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":439964,"byte_end":439970,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12368},{"krate":0,"index":12369},{"krate":0,"index":12370},{"krate":0,"index":12371}],"docs":"","sig":null,"attributes":[]},{"id":1000,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":440043,"byte_end":440049,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12372},{"krate":0,"index":12373},{"krate":0,"index":12374},{"krate":0,"index":12375}],"docs":"","sig":null,"attributes":[]},{"id":1001,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":441032,"byte_end":441037,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":1002,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":441385,"byte_end":441390,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651}],"docs":"","sig":null,"attributes":[]},{"id":1003,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":441622,"byte_end":441627,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":1004,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":442113,"byte_end":442118,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1005,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":442171,"byte_end":442176,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":1006,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":442290,"byte_end":442295,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3673},{"krate":0,"index":3674}],"docs":"","sig":null,"attributes":[]},{"id":1012,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/into_sink.rs","byte_start":443206,"byte_end":443214,"line_start":26,"line_end":26,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3690},{"krate":0,"index":12446}],"docs":"","sig":null,"attributes":[]},{"id":1013,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/into_sink.rs","byte_start":444198,"byte_end":444206,"line_start":58,"line_end":58,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3698}],"docs":"","sig":null,"attributes":[]},{"id":1019,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":445807,"byte_end":445812,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":1020,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":446032,"byte_end":446037,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3718},{"krate":0,"index":12497}],"docs":"","sig":null,"attributes":[]},{"id":1021,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":447045,"byte_end":447049,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1022,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":447101,"byte_end":447105,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3733}],"docs":"","sig":null,"attributes":[]},{"id":1023,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":447270,"byte_end":447274,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":1024,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":447962,"byte_end":447974,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1025,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":448026,"byte_end":448038,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3754}],"docs":"","sig":null,"attributes":[]},{"id":1026,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":448217,"byte_end":448229,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3757},{"krate":0,"index":3758}],"docs":"","sig":null,"attributes":[]},{"id":1027,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":448899,"byte_end":448908,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1028,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":448960,"byte_end":448969,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3774}],"docs":"","sig":null,"attributes":[]},{"id":1029,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":449139,"byte_end":449148,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3777},{"krate":0,"index":3778}],"docs":"","sig":null,"attributes":[]},{"id":1030,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":450265,"byte_end":450273,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1031,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":450328,"byte_end":450336,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":1032,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":451363,"byte_end":451371,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3802},{"krate":0,"index":3803}],"docs":"","sig":null,"attributes":[]},{"id":1033,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":452101,"byte_end":452110,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1034,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":452162,"byte_end":452171,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3819}],"docs":"","sig":null,"attributes":[]},{"id":1035,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":452452,"byte_end":452457,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":1036,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":454007,"byte_end":454016,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3830},{"krate":0,"index":3831}],"docs":"","sig":null,"attributes":[]},{"id":1037,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":454864,"byte_end":454876,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1038,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":454928,"byte_end":454940,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3851}],"docs":"","sig":null,"attributes":[]},{"id":1039,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":455974,"byte_end":455986,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3857},{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":1040,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":456781,"byte_end":456790,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1041,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":456845,"byte_end":456854,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3874}],"docs":"","sig":null,"attributes":[]},{"id":1042,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":457826,"byte_end":457835,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3879},{"krate":0,"index":3880}],"docs":"","sig":null,"attributes":[]},{"id":1043,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":459034,"byte_end":459040,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3897}],"docs":"","sig":null,"attributes":[]},{"id":1044,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":459820,"byte_end":459826,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3899}],"docs":"","sig":null,"attributes":[]},{"id":1045,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460340,"byte_end":460344,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1046,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460396,"byte_end":460400,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":1047,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460557,"byte_end":460561,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3921},{"krate":0,"index":3922}],"docs":"","sig":null,"attributes":[]},{"id":1048,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461690,"byte_end":461694,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":1049,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":462412,"byte_end":462416,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":1050,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463421,"byte_end":463429,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":1051,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463927,"byte_end":463936,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":1052,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":464328,"byte_end":464336,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3977},{"krate":0,"index":3979}],"docs":"","sig":null,"attributes":[]},{"id":1053,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":464801,"byte_end":464810,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3985},{"krate":0,"index":3987},{"krate":0,"index":3989}],"docs":"","sig":null,"attributes":[]},{"id":1054,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":465787,"byte_end":465799,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3998}],"docs":"","sig":null,"attributes":[]},{"id":1055,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":465989,"byte_end":466001,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4001}],"docs":"","sig":null,"attributes":[]},{"id":1056,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":466235,"byte_end":466247,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1062,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":466789,"byte_end":466793,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":12633},{"krate":0,"index":12634},{"krate":0,"index":12635},{"krate":0,"index":12636}],"docs":"","sig":null,"attributes":[]},{"id":1063,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468720,"byte_end":468724,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12637}],"docs":"","sig":null,"attributes":[]},{"id":1064,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":469405,"byte_end":469409,"line_start":111,"line_end":111,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":12638},{"krate":0,"index":12639}],"docs":"","sig":null,"attributes":[]},{"id":1065,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471330,"byte_end":471336,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4040},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045}],"docs":"","sig":null,"attributes":[]},{"id":1066,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":473439,"byte_end":473445,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4049}],"docs":"","sig":null,"attributes":[]},{"id":1067,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":473592,"byte_end":473598,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4052}],"docs":"","sig":null,"attributes":[]},{"id":1068,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":474119,"byte_end":474124,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1069,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":474177,"byte_end":474182,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4067}],"docs":"","sig":null,"attributes":[]},{"id":1070,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":474344,"byte_end":474349,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4070},{"krate":0,"index":4071}],"docs":"","sig":null,"attributes":[]},{"id":1071,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":475033,"byte_end":475046,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1072,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":475099,"byte_end":475112,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4088}],"docs":"","sig":null,"attributes":[]},{"id":1073,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":475285,"byte_end":475298,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4091},{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":1074,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":475965,"byte_end":475973,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1075,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":476026,"byte_end":476034,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4108}],"docs":"","sig":null,"attributes":[]},{"id":1076,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":476200,"byte_end":476208,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4111},{"krate":0,"index":4112}],"docs":"","sig":null,"attributes":[]},{"id":1077,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393051,"byte_end":393052,"line_start":382,"line_end":382,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1078,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399098,"byte_end":399099,"line_start":566,"line_end":566,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1079,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399633,"byte_end":399634,"line_start":582,"line_end":582,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1080,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":405163,"byte_end":405164,"line_start":733,"line_end":733,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1081,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":476970,"byte_end":476971,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4174},{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":1082,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":477205,"byte_end":477206,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4183}],"docs":"","sig":null,"attributes":[]},{"id":1083,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":477475,"byte_end":477476,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4191}],"docs":"","sig":null,"attributes":[]},{"id":1084,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":478491,"byte_end":478495,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4199}],"docs":"","sig":null,"attributes":[]},{"id":1085,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":478589,"byte_end":478593,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4204}],"docs":"","sig":null,"attributes":[]},{"id":1091,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":478852,"byte_end":478859,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4209},{"krate":0,"index":4210}],"docs":"","sig":null,"attributes":[]},{"id":1092,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479082,"byte_end":479089,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4215}],"docs":"","sig":null,"attributes":[]},{"id":1093,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479280,"byte_end":479287,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":1094,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479592,"byte_end":479605,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":1100,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479941,"byte_end":479950,"line_start":143,"line_end":143,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":1101,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480151,"byte_end":480160,"line_start":153,"line_end":153,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4238}],"docs":"","sig":null,"attributes":[]},{"id":1102,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480339,"byte_end":480348,"line_start":162,"line_end":162,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":1103,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480668,"byte_end":480675,"line_start":178,"line_end":178,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4250},{"krate":0,"index":4251}],"docs":"","sig":null,"attributes":[]},{"id":1104,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480894,"byte_end":480901,"line_start":187,"line_end":187,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":1105,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481079,"byte_end":481086,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4263}],"docs":"","sig":null,"attributes":[]},{"id":1106,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481387,"byte_end":481395,"line_start":210,"line_end":210,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4271},{"krate":0,"index":4272}],"docs":"","sig":null,"attributes":[]},{"id":1107,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481618,"byte_end":481626,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4278}],"docs":"","sig":null,"attributes":[]},{"id":1108,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481808,"byte_end":481816,"line_start":227,"line_end":227,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4284}],"docs":"","sig":null,"attributes":[]},{"id":1109,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482126,"byte_end":482137,"line_start":242,"line_end":242,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4293},{"krate":0,"index":4294}],"docs":"","sig":null,"attributes":[]},{"id":1110,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482374,"byte_end":482385,"line_start":251,"line_end":251,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4300}],"docs":"","sig":null,"attributes":[]},{"id":1111,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482600,"byte_end":482611,"line_start":259,"line_end":259,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4306}],"docs":"","sig":null,"attributes":[]},{"id":1112,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482956,"byte_end":482968,"line_start":274,"line_end":274,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4314},{"krate":0,"index":4315}],"docs":"","sig":null,"attributes":[]},{"id":1113,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":483206,"byte_end":483218,"line_start":283,"line_end":283,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":1114,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":483434,"byte_end":483446,"line_start":291,"line_end":291,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":1115,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484043,"byte_end":484057,"line_start":311,"line_end":311,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4340},{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":1116,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484278,"byte_end":484292,"line_start":320,"line_end":320,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":1117,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484491,"byte_end":484505,"line_start":328,"line_end":328,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4353}],"docs":"","sig":null,"attributes":[]},{"id":1118,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484809,"byte_end":484815,"line_start":342,"line_end":342,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":1119,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484910,"byte_end":484916,"line_start":347,"line_end":347,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4367},{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":1125,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634954,"byte_end":8634959,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12860}],"docs":"","sig":null,"attributes":[]},{"id":1126,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8635292,"byte_end":8635297,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":12863}],"docs":"","sig":null,"attributes":[]},{"id":1127,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8635390,"byte_end":8635395,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":12866}],"docs":"","sig":null,"attributes":[]},{"id":1128,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8635533,"byte_end":8635539,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":12874},{"krate":0,"index":12875}],"docs":"","sig":null,"attributes":[]},{"id":1129,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636083,"byte_end":8636088,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":12880},{"krate":0,"index":12881}],"docs":"","sig":null,"attributes":[]},{"id":1130,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636664,"byte_end":8636669,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":12884},{"krate":0,"index":12885},{"krate":0,"index":12886},{"krate":0,"index":12887},{"krate":0,"index":12888}],"docs":"","sig":null,"attributes":[]},{"id":1131,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8639818,"byte_end":8639833,"line_start":188,"line_end":188,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":12897}],"docs":"","sig":null,"attributes":[]},{"id":1132,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8640343,"byte_end":8640358,"line_start":204,"line_end":204,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":12900}],"docs":"","sig":null,"attributes":[]},{"id":1133,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8640475,"byte_end":8640490,"line_start":210,"line_end":210,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":12904},{"krate":0,"index":12905}],"docs":"","sig":null,"attributes":[]},{"id":1134,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8641719,"byte_end":8641734,"line_start":246,"line_end":246,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":12908}],"docs":"","sig":null,"attributes":[]},{"id":1135,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642336,"byte_end":8642346,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":12916}],"docs":"","sig":null,"attributes":[]},{"id":1136,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643336,"byte_end":8643346,"line_start":295,"line_end":295,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":12921}],"docs":"","sig":null,"attributes":[]},{"id":1137,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643591,"byte_end":8643601,"line_start":304,"line_end":304,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12924}],"docs":"","sig":null,"attributes":[]},{"id":1138,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643699,"byte_end":8643709,"line_start":310,"line_end":310,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12927},{"krate":0,"index":12928}],"docs":"","sig":null,"attributes":[]},{"id":1139,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643850,"byte_end":8643860,"line_start":317,"line_end":317,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":12931}],"docs":"","sig":null,"attributes":[]},{"id":1140,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644274,"byte_end":8644290,"line_start":330,"line_end":330,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":12942}],"docs":"","sig":null,"attributes":[]},{"id":1141,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8645398,"byte_end":8645414,"line_start":361,"line_end":361,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":12948}],"docs":"","sig":null,"attributes":[]},{"id":1142,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8645679,"byte_end":8645695,"line_start":370,"line_end":370,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":12952}],"docs":"","sig":null,"attributes":[]},{"id":1143,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8645807,"byte_end":8645823,"line_start":376,"line_end":376,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":12956},{"krate":0,"index":12957}],"docs":"","sig":null,"attributes":[]},{"id":1144,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8645966,"byte_end":8645982,"line_start":383,"line_end":383,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":12961}],"docs":"","sig":null,"attributes":[]},{"id":1145,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646259,"byte_end":8646264,"line_start":391,"line_end":391,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1146,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646310,"byte_end":8646315,"line_start":392,"line_end":392,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1147,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646482,"byte_end":8646497,"line_start":396,"line_end":396,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1148,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646601,"byte_end":8646616,"line_start":398,"line_end":398,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1149,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646820,"byte_end":8646830,"line_start":402,"line_end":402,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1150,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646880,"byte_end":8646890,"line_start":403,"line_end":403,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1151,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646951,"byte_end":8646967,"line_start":404,"line_end":404,"column_start":51,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1152,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8647031,"byte_end":8647047,"line_start":405,"line_end":405,"column_start":51,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1153,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8649001,"byte_end":8649006,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1154,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8649043,"byte_end":8649048,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1155,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8649064,"byte_end":8649070,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":13006},{"krate":0,"index":13007},{"krate":0,"index":13009},{"krate":0,"index":13010}],"docs":"","sig":null,"attributes":[]},{"id":1156,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8654701,"byte_end":8654706,"line_start":187,"line_end":187,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":13013}],"docs":"","sig":null,"attributes":[]},{"id":1157,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8654828,"byte_end":8654833,"line_start":193,"line_end":193,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":13016}],"docs":"","sig":null,"attributes":[]},{"id":1158,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8655111,"byte_end":8655123,"line_start":203,"line_end":203,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":13024}],"docs":"","sig":null,"attributes":[]},{"id":1159,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8655313,"byte_end":8655325,"line_start":211,"line_end":211,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":13027}],"docs":"","sig":null,"attributes":[]},{"id":1160,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8655546,"byte_end":8655558,"line_start":218,"line_end":218,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1161,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8655890,"byte_end":8655901,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":13032},{"krate":0,"index":13033}],"docs":"","sig":null,"attributes":[]},{"id":1162,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8656064,"byte_end":8656075,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":13036}],"docs":"","sig":null,"attributes":[]},{"id":1163,"kind":"Inherent","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8656213,"byte_end":8656224,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":13039}],"docs":"","sig":null,"attributes":[]},{"id":1164,"kind":"Direct","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8656576,"byte_end":8656587,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":13042}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11721,"byte_end":11727,"line_start":304,"line_end":304,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11803,"byte_end":11809,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1003}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139127,"byte_end":139144,"line_start":90,"line_end":90,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":11178}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11910,"byte_end":11914,"line_start":311,"line_end":311,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2862}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11995,"byte_end":11999,"line_start":315,"line_end":315,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3286}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12010,"byte_end":12015,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3325}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12117,"byte_end":12119,"line_start":324,"line_end":324,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3327}},{"kind":"Mod","span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12343,"byte_end":12347,"line_start":334,"line_end":334,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":12831}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35079,"byte_end":35086,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35213,"byte_end":35220,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4369},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35454,"byte_end":35461,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4369},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36266,"byte_end":36273,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4369},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36507,"byte_end":36514,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4369},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":37399,"byte_end":37406,"line_start":103,"line_end":103,"column_start":32,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4369},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39610,"byte_end":39614,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39716,"byte_end":39720,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41444,"byte_end":41448,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4446},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41557,"byte_end":41561,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4446},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42557,"byte_end":42577,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42709,"byte_end":42712,"line_start":33,"line_end":33,"column_start":14,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42887,"byte_end":42890,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4490},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":43154,"byte_end":43157,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45056,"byte_end":45067,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45221,"byte_end":45232,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5114},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46412,"byte_end":46418,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46461,"byte_end":46467,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46725,"byte_end":46730,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":193},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46957,"byte_end":46962,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":193},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47059,"byte_end":47064,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":193},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47308,"byte_end":47314,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47780,"byte_end":47786,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48478,"byte_end":48483,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":50180,"byte_end":50186,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":189},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":50338,"byte_end":50344,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":51882,"byte_end":51887,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":53674,"byte_end":53680,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":53874,"byte_end":53880,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":54308,"byte_end":54316,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":197},"to":{"krate":17,"index":260}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18656,"byte_end":18657,"line_start":115,"line_end":115,"column_start":31,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":260},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18788,"byte_end":18794,"line_start":119,"line_end":119,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":8075},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76250,"byte_end":76260,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76425,"byte_end":76435,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5158},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76541,"byte_end":76551,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5158},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77189,"byte_end":77199,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77329,"byte_end":77339,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5202},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77592,"byte_end":77602,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5202},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":78659,"byte_end":78669,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5202},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":78922,"byte_end":78932,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5202},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":80074,"byte_end":80084,"line_start":113,"line_end":113,"column_start":32,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5202},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82470,"byte_end":82483,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82616,"byte_end":82629,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5279},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82885,"byte_end":82898,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5279},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59219,"byte_end":59222,"line_start":133,"line_end":133,"column_start":48,"column_end":51},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":413},"to":{"krate":0,"index":414}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59305,"byte_end":59314,"line_start":136,"line_end":136,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":32},"to":{"krate":0,"index":414}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84293,"byte_end":84297,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6352},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84870,"byte_end":84874,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":6352},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":85006,"byte_end":85010,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6352},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85587,"byte_end":85594,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6358},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86145,"byte_end":86152,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6358},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86297,"byte_end":86304,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6358},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86331,"byte_end":86338,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6358},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87624,"byte_end":87633,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":89070,"byte_end":89079,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6364},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":89295,"byte_end":89304,"line_start":93,"line_end":93,"column_start":30,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6364},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90708,"byte_end":90720,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":6426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":92184,"byte_end":92196,"line_start":69,"line_end":69,"column_start":38,"column_end":50},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":6426},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":92424,"byte_end":92436,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":6426},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93982,"byte_end":93994,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":6488},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":94327,"byte_end":94339,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":6488},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":94522,"byte_end":94534,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":6488},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94944,"byte_end":94950,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95620,"byte_end":95626,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95768,"byte_end":95774,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96251,"byte_end":96256,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":6535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96435,"byte_end":96440,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6535},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96472,"byte_end":96477,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6535},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96574,"byte_end":96579,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6535},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103871,"byte_end":103878,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105543,"byte_end":105550,"line_start":89,"line_end":89,"column_start":20,"column_end":27},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":106247,"byte_end":106254,"line_start":116,"line_end":116,"column_start":37,"column_end":44},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106724,"byte_end":106730,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6929},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":108090,"byte_end":108096,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6929},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":108799,"byte_end":108805,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6929},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109342,"byte_end":109351,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":6937},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":110331,"byte_end":110340,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":6937},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":111046,"byte_end":111055,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":6937},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119272,"byte_end":119282,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":121044,"byte_end":121054,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":122227,"byte_end":122237,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122719,"byte_end":122728,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":7305},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124434,"byte_end":124443,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":7305},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125796,"byte_end":125804,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":7313},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126774,"byte_end":126782,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":7313},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":128226,"byte_end":128234,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":7313},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128881,"byte_end":128887,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":7319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129272,"byte_end":129278,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":7319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129659,"byte_end":129665,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":7319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129906,"byte_end":129912,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":7319},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130282,"byte_end":130288,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":7319},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130564,"byte_end":130570,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":7319},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130953,"byte_end":130959,"line_start":101,"line_end":101,"column_start":28,"column_end":34},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":7319},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":131266,"byte_end":131272,"line_start":115,"line_end":115,"column_start":33,"column_end":39},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":7319},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":132841,"byte_end":132847,"line_start":172,"line_end":172,"column_start":30,"column_end":36},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":7319},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":133986,"byte_end":133992,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":7319},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":135467,"byte_end":135473,"line_start":262,"line_end":262,"column_start":30,"column_end":36},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":7319},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":135945,"byte_end":135951,"line_start":281,"line_end":281,"column_start":33,"column_end":39},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":7319},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8477972,"byte_end":8477981,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":13385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8479283,"byte_end":8479294,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":7442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8481170,"byte_end":8481177,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":7453},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8481360,"byte_end":8481367,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":7453},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8481393,"byte_end":8481402,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":13385},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8482376,"byte_end":8482387,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":7442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186120,"byte_end":186125,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":7466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186394,"byte_end":186399,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7466},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186604,"byte_end":186609,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":7466},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188207,"byte_end":188214,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188525,"byte_end":188532,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7523},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188708,"byte_end":188715,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7523},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189668,"byte_end":189674,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":7579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189949,"byte_end":189955,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":7579},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":190764,"byte_end":190770,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":7579},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191450,"byte_end":191459,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191692,"byte_end":191701,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7624},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191819,"byte_end":191828,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7624},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":192546,"byte_end":192555,"line_start":63,"line_end":63,"column_start":30,"column_end":39},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7624},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193265,"byte_end":193271,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7677},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193663,"byte_end":193669,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":194063,"byte_end":194069,"line_start":57,"line_end":57,"column_start":34,"column_end":40},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7677},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":194337,"byte_end":194343,"line_start":67,"line_end":67,"column_start":29,"column_end":35},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7677},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":195796,"byte_end":195802,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7677},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196544,"byte_end":196553,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7754},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196850,"byte_end":196859,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":197160,"byte_end":197169,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7754},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":197446,"byte_end":197455,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7754},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":198947,"byte_end":198956,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7754},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199584,"byte_end":199591,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199760,"byte_end":199767,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7828},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199959,"byte_end":199966,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7828},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":200826,"byte_end":200833,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7828},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201457,"byte_end":201461,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7961},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201817,"byte_end":201821,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":202154,"byte_end":202158,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7961},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":202405,"byte_end":202409,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7961},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":204027,"byte_end":204034,"line_start":21,"line_end":21,"column_start":20,"column_end":27},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":8040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":204282,"byte_end":204289,"line_start":31,"line_end":31,"column_start":39,"column_end":46},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":8040},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/forward.rs","byte_start":204491,"byte_end":204498,"line_start":41,"line_end":41,"column_start":34,"column_end":41},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":8040},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206301,"byte_end":206308,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":8179},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206601,"byte_end":206608,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":8179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":206902,"byte_end":206909,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":8179},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":207160,"byte_end":207167,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":8179},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208263,"byte_end":208267,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":8245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208768,"byte_end":208772,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":8245},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":208870,"byte_end":208874,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":8245},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":209619,"byte_end":209623,"line_start":74,"line_end":74,"column_start":51,"column_end":55},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":8245},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210110,"byte_end":210122,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":8298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212636,"byte_end":212648,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":8298},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":212768,"byte_end":212780,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":8298},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":213639,"byte_end":213642,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":8389},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":213857,"byte_end":213860,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":8389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":214034,"byte_end":214037,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":8389},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":214211,"byte_end":214214,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":8389},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":214809,"byte_end":214812,"line_start":72,"line_end":72,"column_start":34,"column_end":37},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":8389},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215385,"byte_end":215389,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":8552},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215440,"byte_end":215444,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215595,"byte_end":215599,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8552},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":215738,"byte_end":215742,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":8552},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216391,"byte_end":216405,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":8560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216566,"byte_end":216580,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":8560},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":216724,"byte_end":216738,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":8560},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":217924,"byte_end":217932,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":219158,"byte_end":219166,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8568},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":219308,"byte_end":219316,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8568},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220148,"byte_end":220156,"line_start":98,"line_end":98,"column_start":30,"column_end":38},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8568},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220521,"byte_end":220525,"line_start":114,"line_end":114,"column_start":25,"column_end":29},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8622},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220796,"byte_end":220800,"line_start":126,"line_end":126,"column_start":34,"column_end":38},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8622},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":220911,"byte_end":220915,"line_start":132,"line_end":132,"column_start":25,"column_end":29},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8622},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":221772,"byte_end":221776,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":8670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":222004,"byte_end":222008,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":8670},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":222126,"byte_end":222130,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":8670},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":223082,"byte_end":223086,"line_start":71,"line_end":71,"column_start":30,"column_end":34},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":8670},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":223803,"byte_end":223812,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":8723},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":224264,"byte_end":224273,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":8723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":224702,"byte_end":224711,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":8723},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":224971,"byte_end":224980,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":8723},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":226676,"byte_end":226685,"line_start":121,"line_end":121,"column_start":38,"column_end":47},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":8723},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":227321,"byte_end":227325,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":227535,"byte_end":227539,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8803},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":228578,"byte_end":228582,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8803},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":228830,"byte_end":228834,"line_start":83,"line_end":83,"column_start":30,"column_end":34},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8803},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229540,"byte_end":229549,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":8856},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229997,"byte_end":230006,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":8856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":230428,"byte_end":230437,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":8856},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":232046,"byte_end":232055,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":8856},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":232423,"byte_end":232432,"line_start":123,"line_end":123,"column_start":38,"column_end":47},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":8856},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233378,"byte_end":233387,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":8936},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233714,"byte_end":233723,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":8936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":235916,"byte_end":235925,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8936},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":236995,"byte_end":237004,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8936},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":237241,"byte_end":237250,"line_start":170,"line_end":170,"column_start":35,"column_end":44},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8936},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":237889,"byte_end":237893,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":9003},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":238183,"byte_end":238187,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":9003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":238496,"byte_end":238500,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":9003},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":238738,"byte_end":238742,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":9003},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":239990,"byte_end":239994,"line_start":101,"line_end":101,"column_start":38,"column_end":42},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":9003},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240653,"byte_end":240656,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":9077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242407,"byte_end":242410,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":9077},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":242601,"byte_end":242604,"line_start":75,"line_end":75,"column_start":27,"column_end":30},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":9077},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245275,"byte_end":245281,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":9140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245792,"byte_end":245798,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":9140},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":247465,"byte_end":247471,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":9140},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":247694,"byte_end":247700,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":9140},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248411,"byte_end":248422,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":9196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248787,"byte_end":248798,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":9196},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":250915,"byte_end":250926,"line_start":97,"line_end":97,"column_start":39,"column_end":50},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":9196},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":251149,"byte_end":251160,"line_start":105,"line_end":105,"column_start":30,"column_end":41},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":9196},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":251867,"byte_end":251871,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":9252},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":252357,"byte_end":252361,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":9252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":252525,"byte_end":252529,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":9252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":252996,"byte_end":253000,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":9252},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":254263,"byte_end":254267,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":9252},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":254637,"byte_end":254641,"line_start":128,"line_end":128,"column_start":38,"column_end":42},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":9252},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8515835,"byte_end":8515850,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":13341},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8516182,"byte_end":8516197,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":13341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8516610,"byte_end":8516625,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":13341},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8518152,"byte_end":8518167,"line_start":108,"line_end":108,"column_start":26,"column_end":41},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":13341},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8518451,"byte_end":8518466,"line_start":120,"line_end":120,"column_start":30,"column_end":45},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":13341},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8519208,"byte_end":8519216,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":13296},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8519563,"byte_end":8519571,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":13296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8519908,"byte_end":8519916,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":13296},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8521499,"byte_end":8521507,"line_start":107,"line_end":107,"column_start":30,"column_end":38},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":13296},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8522282,"byte_end":8522299,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":13228},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8522645,"byte_end":8522662,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":13228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8523133,"byte_end":8523150,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":13228},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8523392,"byte_end":8523409,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":13228},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525608,"byte_end":8525619,"line_start":14,"line_end":14,"column_start":19,"column_end":30},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":9524},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8525642,"byte_end":8525653,"line_start":16,"line_end":16,"column_start":16,"column_end":27},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":9524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526082,"byte_end":8526093,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":9524},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526644,"byte_end":8526653,"line_start":51,"line_end":51,"column_start":25,"column_end":34},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":9531},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8526701,"byte_end":8526710,"line_start":53,"line_end":53,"column_start":35,"column_end":44},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":9531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8527198,"byte_end":8527207,"line_start":64,"line_end":64,"column_start":27,"column_end":36},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":9531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8527875,"byte_end":8527884,"line_start":81,"line_end":81,"column_start":42,"column_end":51},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":9531},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529443,"byte_end":8529455,"line_start":124,"line_end":124,"column_start":30,"column_end":42},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":9487},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529657,"byte_end":8529669,"line_start":132,"line_end":132,"column_start":32,"column_end":44},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":9487},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/split.rs","byte_start":8529918,"byte_end":8529930,"line_start":139,"line_end":139,"column_start":53,"column_end":65},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":9487},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":255260,"byte_end":255271,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":9540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":255481,"byte_end":255492,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":9540},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":256439,"byte_end":256450,"line_start":63,"line_end":63,"column_start":52,"column_end":63},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":9540},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145315,"byte_end":145316,"line_start":194,"line_end":194,"column_start":31,"column_end":32},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":1947},"to":{"krate":0,"index":1948}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145459,"byte_end":145465,"line_start":198,"line_end":198,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":68},"to":{"krate":0,"index":1948}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287654,"byte_end":287661,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":9591},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287954,"byte_end":287961,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":9591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":288254,"byte_end":288261,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":9591},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":289475,"byte_end":289482,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":9591},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":289840,"byte_end":289847,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":9591},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290377,"byte_end":290387,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":9920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290586,"byte_end":290596,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":9920},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":290717,"byte_end":290727,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":9920},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":291174,"byte_end":291184,"line_start":50,"line_end":50,"column_start":42,"column_end":52},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":9920},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":291792,"byte_end":291798,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":10139},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":292090,"byte_end":292096,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":10139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":292386,"byte_end":292392,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":10139},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":293740,"byte_end":293746,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":10139},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":294101,"byte_end":294107,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":10139},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294662,"byte_end":294669,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":10213},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294723,"byte_end":294730,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":10213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":294896,"byte_end":294903,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":10213},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":295045,"byte_end":295052,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":10213},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":295794,"byte_end":295804,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":10221},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":296100,"byte_end":296110,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":10221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":296424,"byte_end":296434,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":10221},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":297811,"byte_end":297820,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":10287},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":298216,"byte_end":298225,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":10287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":298529,"byte_end":298538,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":10287},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":298807,"byte_end":298816,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":10287},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":300296,"byte_end":300305,"line_start":109,"line_end":109,"column_start":41,"column_end":50},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":10287},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":300989,"byte_end":301001,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":10364},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":301301,"byte_end":301313,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":10364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":301518,"byte_end":301530,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":10364},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":301820,"byte_end":301832,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":10364},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":303387,"byte_end":303399,"line_start":98,"line_end":98,"column_start":38,"column_end":50},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":10364},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":304002,"byte_end":304012,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":10438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":304277,"byte_end":304287,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":10438},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":304533,"byte_end":304543,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":10438},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":305502,"byte_end":305512,"line_start":76,"line_end":76,"column_start":30,"column_end":40},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":10438},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":306139,"byte_end":306149,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":10492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":306341,"byte_end":306351,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":10492},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":306539,"byte_end":306549,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":10492},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":307560,"byte_end":307569,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":10548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":307835,"byte_end":307844,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":10548},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":309082,"byte_end":309089,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":10593},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":309448,"byte_end":309455,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":10593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":309813,"byte_end":309820,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":10593},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":310086,"byte_end":310093,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":10593},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":313899,"byte_end":313908,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":10672},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":314209,"byte_end":314218,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":10672},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":315956,"byte_end":315968,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":10737},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":316424,"byte_end":316436,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":10737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":316885,"byte_end":316897,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":10737},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":318450,"byte_end":318462,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":10737},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":318841,"byte_end":318853,"line_start":118,"line_end":118,"column_start":41,"column_end":53},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":10737},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8549884,"byte_end":8549902,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":13179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8550261,"byte_end":8550279,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":13179},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8551638,"byte_end":8551656,"line_start":80,"line_end":80,"column_start":33,"column_end":51},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":13179},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8552492,"byte_end":8552512,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":13111},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8552877,"byte_end":8552897,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":13111},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8553148,"byte_end":8553168,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":13111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8553660,"byte_end":8553680,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":13111},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319527,"byte_end":319540,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":10897},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319756,"byte_end":319769,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":10897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":320023,"byte_end":320036,"line_start":48,"line_end":48,"column_start":24,"column_end":37},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":10897},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":321904,"byte_end":321917,"line_start":103,"line_end":103,"column_start":25,"column_end":38},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":10897},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":322579,"byte_end":322592,"line_start":131,"line_end":131,"column_start":27,"column_end":40},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":10897},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261013,"byte_end":261014,"line_start":128,"line_end":128,"column_start":46,"column_end":47},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":2567},"to":{"krate":0,"index":2568}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261095,"byte_end":261104,"line_start":131,"line_end":131,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":97},"to":{"krate":0,"index":2568}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":324702,"byte_end":324706,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":10916},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":325312,"byte_end":325316,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":10916},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326450,"byte_end":326456,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":10922},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326483,"byte_end":326489,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":10922},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":326796,"byte_end":326802,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":10922},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327414,"byte_end":327419,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":10928},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327451,"byte_end":327456,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":10928},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":327541,"byte_end":327546,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":10928},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328605,"byte_end":328609,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":10934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":328738,"byte_end":328742,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":10934},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":329382,"byte_end":329386,"line_start":64,"line_end":64,"column_start":35,"column_end":39},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":10934},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":329996,"byte_end":330003,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":10976},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":330035,"byte_end":330042,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":10976},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":330127,"byte_end":330134,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":10976},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330659,"byte_end":330665,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":2765},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":330696,"byte_end":330702,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":2765},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":331444,"byte_end":331450,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":2765},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332816,"byte_end":332822,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":10982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":334296,"byte_end":334302,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":10982},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":334520,"byte_end":334526,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":10982},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":337839,"byte_end":337845,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":11043},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":338148,"byte_end":338154,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":11043},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":338380,"byte_end":338386,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":11043},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560238,"byte_end":8560250,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":13065},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560355,"byte_end":8560367,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":13065},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560398,"byte_end":8560410,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":13065},"to":{"krate":2,"index":1655}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560533,"byte_end":8560545,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":13065},"to":{"krate":2,"index":1644}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8560726,"byte_end":8560738,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":13065},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563355,"byte_end":8563369,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":11143},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8563395,"byte_end":8563409,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":11143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8565033,"byte_end":8565047,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":11143},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8565165,"byte_end":8565179,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":11143},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8566363,"byte_end":8566377,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":11143},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8566543,"byte_end":8566557,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":11143},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8566815,"byte_end":8566829,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":11143},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/abort.rs","byte_start":8593025,"byte_end":8593036,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":11216},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8594208,"byte_end":8594218,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":11461},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8595075,"byte_end":8595085,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":11461},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8595133,"byte_end":8595140,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":830}},"from":{"krate":0,"index":11471},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8595404,"byte_end":8595411,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":11471},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8595452,"byte_end":8595462,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":11480},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8596379,"byte_end":8596389,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":11480},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8596437,"byte_end":8596441,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":11491},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8596697,"byte_end":8596701,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":11491},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8598190,"byte_end":8598194,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":11280},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8598229,"byte_end":8598233,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":11280},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8598265,"byte_end":8598269,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":11280},"to":{"krate":17,"index":260}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8599346,"byte_end":8599350,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":11280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8600362,"byte_end":8600366,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":11280},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8601816,"byte_end":8601831,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":11327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8603681,"byte_end":8603696,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":11327},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570075,"byte_end":8570091,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":11345},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570132,"byte_end":8570148,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":11345},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570177,"byte_end":8570193,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":11345},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570218,"byte_end":8570234,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":11345},"to":{"krate":17,"index":10}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8570431,"byte_end":8570447,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":11345},"to":{"krate":17,"index":13}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572166,"byte_end":8572182,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":11345},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8572285,"byte_end":8572301,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":11345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8583961,"byte_end":8583977,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":11345},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8588374,"byte_end":8588378,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8590716,"byte_end":8590732,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":11345},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8590879,"byte_end":8590895,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":11345},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8592335,"byte_end":8592351,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":11345},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8592607,"byte_end":8592623,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":11345},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8592745,"byte_end":8592761,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":11345},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605513,"byte_end":8605522,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":11426},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8605667,"byte_end":8605676,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":11426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606726,"byte_end":8606735,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":11426},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8606848,"byte_end":8606857,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":11426},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8607664,"byte_end":8607673,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":11426},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608649,"byte_end":8608658,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":11426},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8608803,"byte_end":8608812,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":11426},"to":{"krate":2,"index":4688}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":349238,"byte_end":349243,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":11500},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":349438,"byte_end":349443,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":11500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/close.rs","byte_start":349653,"byte_end":349658,"line_start":29,"line_end":29,"column_start":56,"column_end":61},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":11500},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350619,"byte_end":350624,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":11511},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/drain.rs","byte_start":350652,"byte_end":350657,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":11511},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":351870,"byte_end":351876,"line_start":20,"line_end":20,"column_start":16,"column_end":22},"kind":{"Impl":{"id":874}},"from":{"krate":0,"index":11517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":352901,"byte_end":352907,"line_start":52,"line_end":52,"column_start":40,"column_end":46},"kind":{"Impl":{"id":875}},"from":{"krate":0,"index":11517},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/fanout.rs","byte_start":353158,"byte_end":353164,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"kind":{"Impl":{"id":876}},"from":{"krate":0,"index":11517},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355414,"byte_end":355419,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":877}},"from":{"krate":0,"index":11574},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355770,"byte_end":355775,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":11574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/flush.rs","byte_start":355985,"byte_end":355990,"line_start":33,"line_end":33,"column_start":56,"column_end":61},"kind":{"Impl":{"id":879}},"from":{"krate":0,"index":11574},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":356642,"byte_end":356653,"line_start":15,"line_end":15,"column_start":19,"column_end":30},"kind":{"Impl":{"id":885}},"from":{"krate":0,"index":11585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":356944,"byte_end":356955,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":886}},"from":{"krate":0,"index":11585},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":357165,"byte_end":357176,"line_start":38,"line_end":38,"column_start":29,"column_end":40},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":11585},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/err_into.rs","byte_start":357343,"byte_end":357354,"line_start":47,"line_end":47,"column_start":34,"column_end":45},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":11585},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":357931,"byte_end":357941,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"kind":{"Impl":{"id":894}},"from":{"krate":0,"index":11658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":358263,"byte_end":358273,"line_start":29,"line_end":29,"column_start":37,"column_end":47},"kind":{"Impl":{"id":895}},"from":{"krate":0,"index":11658},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":359327,"byte_end":359337,"line_start":65,"line_end":65,"column_start":31,"column_end":41},"kind":{"Impl":{"id":896}},"from":{"krate":0,"index":11658},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/map_err.rs","byte_start":359443,"byte_end":359453,"line_start":71,"line_end":71,"column_start":41,"column_end":51},"kind":{"Impl":{"id":897}},"from":{"krate":0,"index":11658},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":359978,"byte_end":359982,"line_start":15,"line_end":15,"column_start":42,"column_end":46},"kind":{"Impl":{"id":898}},"from":{"krate":0,"index":11723},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":360049,"byte_end":360053,"line_start":17,"line_end":17,"column_start":49,"column_end":53},"kind":{"Impl":{"id":899}},"from":{"krate":0,"index":11723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send.rs","byte_start":360269,"byte_end":360273,"line_start":26,"line_end":26,"column_start":56,"column_end":60},"kind":{"Impl":{"id":900}},"from":{"krate":0,"index":11723},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":361693,"byte_end":361700,"line_start":22,"line_end":22,"column_start":29,"column_end":36},"kind":{"Impl":{"id":901}},"from":{"krate":0,"index":3076},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":362139,"byte_end":362146,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"kind":{"Impl":{"id":902}},"from":{"krate":0,"index":3076},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":362257,"byte_end":362264,"line_start":44,"line_end":44,"column_start":29,"column_end":36},"kind":{"Impl":{"id":903}},"from":{"krate":0,"index":3076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/send_all.rs","byte_start":363157,"byte_end":363164,"line_start":78,"line_end":78,"column_start":36,"column_end":43},"kind":{"Impl":{"id":904}},"from":{"krate":0,"index":3076},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":364826,"byte_end":364830,"line_start":22,"line_end":22,"column_start":42,"column_end":46},"kind":{"Impl":{"id":910}},"from":{"krate":0,"index":11734},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":365132,"byte_end":365136,"line_start":35,"line_end":35,"column_start":27,"column_end":31},"kind":{"Impl":{"id":911}},"from":{"krate":0,"index":11734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":365596,"byte_end":365600,"line_start":55,"line_end":55,"column_start":37,"column_end":41},"kind":{"Impl":{"id":912}},"from":{"krate":0,"index":11734},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":365795,"byte_end":365799,"line_start":65,"line_end":65,"column_start":30,"column_end":34},"kind":{"Impl":{"id":913}},"from":{"krate":0,"index":11734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with.rs","byte_start":366554,"byte_end":366558,"line_start":92,"line_end":92,"column_start":42,"column_end":46},"kind":{"Impl":{"id":914}},"from":{"krate":0,"index":11734},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":368356,"byte_end":368367,"line_start":22,"line_end":22,"column_start":41,"column_end":52},"kind":{"Impl":{"id":920}},"from":{"krate":0,"index":11830},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":368740,"byte_end":368751,"line_start":37,"line_end":37,"column_start":26,"column_end":37},"kind":{"Impl":{"id":921}},"from":{"krate":0,"index":11830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":370166,"byte_end":370177,"line_start":85,"line_end":85,"column_start":36,"column_end":47},"kind":{"Impl":{"id":922}},"from":{"krate":0,"index":11830},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":370400,"byte_end":370411,"line_start":96,"line_end":96,"column_start":41,"column_end":52},"kind":{"Impl":{"id":923}},"from":{"krate":0,"index":11830},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/with_flat_map.rs","byte_start":370660,"byte_end":370671,"line_start":107,"line_end":107,"column_start":38,"column_end":49},"kind":{"Impl":{"id":924}},"from":{"krate":0,"index":11830},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":372288,"byte_end":372294,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"kind":{"Impl":{"id":930}},"from":{"krate":0,"index":11929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":373121,"byte_end":373127,"line_start":51,"line_end":51,"column_start":26,"column_end":32},"kind":{"Impl":{"id":931}},"from":{"krate":0,"index":11929},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":373452,"byte_end":373458,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"kind":{"Impl":{"id":932}},"from":{"krate":0,"index":11929},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/buffer.rs","byte_start":373627,"byte_end":373633,"line_start":69,"line_end":69,"column_start":43,"column_end":49},"kind":{"Impl":{"id":933}},"from":{"krate":0,"index":11929},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340304,"byte_end":340305,"line_start":55,"line_end":55,"column_start":41,"column_end":42},"kind":{"Impl":{"id":934}},"from":{"krate":0,"index":3250},"to":{"krate":0,"index":3252}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/sink/mod.rs","byte_start":340454,"byte_end":340458,"line_start":59,"line_end":59,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":19,"index":9},"to":{"krate":0,"index":3252}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376099,"byte_end":376101,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":935}},"from":{"krate":0,"index":3298},"to":{"krate":0,"index":3301}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376156,"byte_end":376158,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":936}},"from":{"krate":0,"index":3300},"to":{"krate":0,"index":3304}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":376237,"byte_end":376242,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":3301}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":378897,"byte_end":378907,"line_start":95,"line_end":95,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":13},"to":{"krate":0,"index":3304}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406099,"byte_end":406109,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":937}},"from":{"krate":0,"index":11998},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":406546,"byte_end":406556,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":938}},"from":{"krate":0,"index":11998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":407073,"byte_end":407083,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":939}},"from":{"krate":0,"index":11998},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":407623,"byte_end":407633,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"kind":{"Impl":{"id":940}},"from":{"krate":0,"index":11998},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":408382,"byte_end":408392,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":941}},"from":{"krate":0,"index":11998},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":409112,"byte_end":409122,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":942}},"from":{"krate":0,"index":11998},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":409710,"byte_end":409720,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"kind":{"Impl":{"id":943}},"from":{"krate":0,"index":11998},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":409859,"byte_end":409869,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":944}},"from":{"krate":0,"index":11998},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":410107,"byte_end":410117,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":945}},"from":{"krate":0,"index":11998},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":410328,"byte_end":410338,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"kind":{"Impl":{"id":946}},"from":{"krate":0,"index":11998},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":412059,"byte_end":412068,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"kind":{"Impl":{"id":952}},"from":{"krate":0,"index":12035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":413336,"byte_end":413345,"line_start":81,"line_end":81,"column_start":34,"column_end":43},"kind":{"Impl":{"id":953}},"from":{"krate":0,"index":12035},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":414957,"byte_end":414966,"line_start":125,"line_end":125,"column_start":37,"column_end":46},"kind":{"Impl":{"id":954}},"from":{"krate":0,"index":12035},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":415831,"byte_end":415840,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":955}},"from":{"krate":0,"index":12035},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":415918,"byte_end":415927,"line_start":155,"line_end":155,"column_start":36,"column_end":45},"kind":{"Impl":{"id":956}},"from":{"krate":0,"index":12035},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":416243,"byte_end":416252,"line_start":164,"line_end":164,"column_start":46,"column_end":55},"kind":{"Impl":{"id":957}},"from":{"krate":0,"index":12035},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":420071,"byte_end":420080,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"kind":{"Impl":{"id":963}},"from":{"krate":0,"index":12092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":421667,"byte_end":421676,"line_start":92,"line_end":92,"column_start":36,"column_end":45},"kind":{"Impl":{"id":964}},"from":{"krate":0,"index":12092},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":423099,"byte_end":423108,"line_start":135,"line_end":135,"column_start":34,"column_end":43},"kind":{"Impl":{"id":965}},"from":{"krate":0,"index":12092},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":423189,"byte_end":423198,"line_start":139,"line_end":139,"column_start":40,"column_end":49},"kind":{"Impl":{"id":966}},"from":{"krate":0,"index":12092},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":423279,"byte_end":423288,"line_start":143,"line_end":143,"column_start":36,"column_end":45},"kind":{"Impl":{"id":967}},"from":{"krate":0,"index":12092},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":423647,"byte_end":423656,"line_start":153,"line_end":153,"column_start":47,"column_end":56},"kind":{"Impl":{"id":968}},"from":{"krate":0,"index":12092},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":424536,"byte_end":424541,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":974}},"from":{"krate":0,"index":12145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":425939,"byte_end":425944,"line_start":66,"line_end":66,"column_start":27,"column_end":32},"kind":{"Impl":{"id":975}},"from":{"krate":0,"index":12145},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":426274,"byte_end":426279,"line_start":80,"line_end":80,"column_start":26,"column_end":31},"kind":{"Impl":{"id":976}},"from":{"krate":0,"index":12145},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":427722,"byte_end":427727,"line_start":134,"line_end":134,"column_start":29,"column_end":34},"kind":{"Impl":{"id":977}},"from":{"krate":0,"index":12145},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":428933,"byte_end":428938,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":978}},"from":{"krate":0,"index":12205},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":428991,"byte_end":428996,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":979}},"from":{"krate":0,"index":12205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":429139,"byte_end":429144,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":980}},"from":{"krate":0,"index":12205},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":430892,"byte_end":430896,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"kind":{"Impl":{"id":986}},"from":{"krate":0,"index":12213},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":432591,"byte_end":432598,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"kind":{"Impl":{"id":992}},"from":{"krate":0,"index":12277},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":434479,"byte_end":434485,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":993}},"from":{"krate":0,"index":12348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":437713,"byte_end":437719,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":994}},"from":{"krate":0,"index":12348},"to":{"krate":23,"index":25}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":438006,"byte_end":438012,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"kind":{"Impl":{"id":995}},"from":{"krate":0,"index":12348},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":438644,"byte_end":438650,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"kind":{"Impl":{"id":996}},"from":{"krate":0,"index":12348},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":439799,"byte_end":439805,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"kind":{"Impl":{"id":997}},"from":{"krate":0,"index":12348},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":439880,"byte_end":439886,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":998}},"from":{"krate":0,"index":12348},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":439964,"byte_end":439970,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"kind":{"Impl":{"id":999}},"from":{"krate":0,"index":12348},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":440043,"byte_end":440049,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"kind":{"Impl":{"id":1000}},"from":{"krate":0,"index":12348},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":441032,"byte_end":441037,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":1001}},"from":{"krate":0,"index":3644},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":441385,"byte_end":441390,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1002}},"from":{"krate":0,"index":3644},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":441622,"byte_end":441627,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1003}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":442113,"byte_end":442118,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":1004}},"from":{"krate":0,"index":12376},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":442171,"byte_end":442176,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":1005}},"from":{"krate":0,"index":12376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":442290,"byte_end":442295,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":1006}},"from":{"krate":0,"index":12376},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/into_sink.rs","byte_start":443206,"byte_end":443214,"line_start":26,"line_end":26,"column_start":40,"column_end":48},"kind":{"Impl":{"id":1012}},"from":{"krate":0,"index":12391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/into_sink.rs","byte_start":444198,"byte_end":444206,"line_start":58,"line_end":58,"column_start":55,"column_end":63},"kind":{"Impl":{"id":1013}},"from":{"krate":0,"index":12391},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":445807,"byte_end":445812,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1019}},"from":{"krate":0,"index":12447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":446032,"byte_end":446037,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"kind":{"Impl":{"id":1020}},"from":{"krate":0,"index":12447},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":447045,"byte_end":447049,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":1021}},"from":{"krate":0,"index":12498},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":447101,"byte_end":447105,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":1022}},"from":{"krate":0,"index":12498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":447270,"byte_end":447274,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":1023}},"from":{"krate":0,"index":12498},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":447962,"byte_end":447974,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":1024}},"from":{"krate":0,"index":12507},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":448026,"byte_end":448038,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":1025}},"from":{"krate":0,"index":12507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":448217,"byte_end":448229,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":1026}},"from":{"krate":0,"index":12507},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":448899,"byte_end":448908,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"kind":{"Impl":{"id":1027}},"from":{"krate":0,"index":12516},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":448960,"byte_end":448969,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"kind":{"Impl":{"id":1028}},"from":{"krate":0,"index":12516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":449139,"byte_end":449148,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"kind":{"Impl":{"id":1029}},"from":{"krate":0,"index":12516},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":450265,"byte_end":450273,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"kind":{"Impl":{"id":1030}},"from":{"krate":0,"index":12525},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":450328,"byte_end":450336,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"kind":{"Impl":{"id":1031}},"from":{"krate":0,"index":12525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":451363,"byte_end":451371,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"kind":{"Impl":{"id":1032}},"from":{"krate":0,"index":12525},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":452101,"byte_end":452110,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":1033}},"from":{"krate":0,"index":12536},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":452162,"byte_end":452171,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":1034}},"from":{"krate":0,"index":12536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":452452,"byte_end":452457,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":1035}},"from":{"krate":0,"index":3820},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":454007,"byte_end":454016,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":1036}},"from":{"krate":0,"index":12536},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":454864,"byte_end":454876,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"Impl":{"id":1037}},"from":{"krate":0,"index":12546},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":454928,"byte_end":454940,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"kind":{"Impl":{"id":1038}},"from":{"krate":0,"index":12546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":455974,"byte_end":455986,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":1039}},"from":{"krate":0,"index":12546},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":456781,"byte_end":456790,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":1040}},"from":{"krate":0,"index":12557},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":456845,"byte_end":456854,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"kind":{"Impl":{"id":1041}},"from":{"krate":0,"index":12557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":457826,"byte_end":457835,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"kind":{"Impl":{"id":1042}},"from":{"krate":0,"index":12557},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":459034,"byte_end":459040,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":1043}},"from":{"krate":0,"index":3892},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":459820,"byte_end":459826,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"kind":{"Impl":{"id":1044}},"from":{"krate":0,"index":3892},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460340,"byte_end":460344,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":1045}},"from":{"krate":0,"index":12568},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460396,"byte_end":460400,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":1046}},"from":{"krate":0,"index":12568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":460557,"byte_end":460561,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":1047}},"from":{"krate":0,"index":12568},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":461690,"byte_end":461694,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":1048}},"from":{"krate":0,"index":3934},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":462412,"byte_end":462416,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":1049}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463421,"byte_end":463429,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"kind":{"Impl":{"id":1050}},"from":{"krate":0,"index":12577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":463927,"byte_end":463936,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1051}},"from":{"krate":0,"index":12583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":464328,"byte_end":464336,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"kind":{"Impl":{"id":1052}},"from":{"krate":0,"index":12577},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":464801,"byte_end":464810,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"kind":{"Impl":{"id":1053}},"from":{"krate":0,"index":12583},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":465787,"byte_end":465799,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1054}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":465989,"byte_end":466001,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"kind":{"Impl":{"id":1055}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":466235,"byte_end":466247,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"kind":{"Impl":{"id":1056}},"from":{"krate":0,"index":3991},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":466789,"byte_end":466793,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":{"Impl":{"id":1062}},"from":{"krate":0,"index":12589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":468720,"byte_end":468724,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"kind":{"Impl":{"id":1063}},"from":{"krate":0,"index":12589},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":469405,"byte_end":469409,"line_start":111,"line_end":111,"column_start":40,"column_end":44},"kind":{"Impl":{"id":1064}},"from":{"krate":0,"index":12589},"to":{"krate":23,"index":27}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":471330,"byte_end":471336,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":1065}},"from":{"krate":0,"index":12640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":473439,"byte_end":473445,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"kind":{"Impl":{"id":1066}},"from":{"krate":0,"index":12640},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":473592,"byte_end":473598,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"kind":{"Impl":{"id":1067}},"from":{"krate":0,"index":12640},"to":{"krate":2,"index":1800}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":474119,"byte_end":474124,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":1068}},"from":{"krate":0,"index":12647},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":474177,"byte_end":474182,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":1069}},"from":{"krate":0,"index":12647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":474344,"byte_end":474349,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":1070}},"from":{"krate":0,"index":12647},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":475033,"byte_end":475046,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":1071}},"from":{"krate":0,"index":12656},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":475099,"byte_end":475112,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":1072}},"from":{"krate":0,"index":12656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":475285,"byte_end":475298,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":1073}},"from":{"krate":0,"index":12656},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":475965,"byte_end":475973,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"kind":{"Impl":{"id":1074}},"from":{"krate":0,"index":12665},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":476026,"byte_end":476034,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"kind":{"Impl":{"id":1075}},"from":{"krate":0,"index":12665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":476200,"byte_end":476208,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"kind":{"Impl":{"id":1076}},"from":{"krate":0,"index":12665},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":385069,"byte_end":385078,"line_start":133,"line_end":133,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":23,"index":17},"to":{"krate":0,"index":4114}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393051,"byte_end":393052,"line_start":382,"line_end":382,"column_start":46,"column_end":47},"kind":{"Impl":{"id":1077}},"from":{"krate":0,"index":4130},"to":{"krate":0,"index":4114}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":393155,"byte_end":393165,"line_start":385,"line_end":385,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":23,"index":20},"to":{"krate":0,"index":4131}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399098,"byte_end":399099,"line_start":566,"line_end":566,"column_start":48,"column_end":49},"kind":{"Impl":{"id":1078}},"from":{"krate":0,"index":4143},"to":{"krate":0,"index":4131}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399200,"byte_end":399209,"line_start":569,"line_end":569,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":23,"index":25},"to":{"krate":0,"index":4144}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399633,"byte_end":399634,"line_start":582,"line_end":582,"column_start":46,"column_end":47},"kind":{"Impl":{"id":1079}},"from":{"krate":0,"index":4147},"to":{"krate":0,"index":4144}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":399741,"byte_end":399753,"line_start":585,"line_end":585,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":23,"index":27},"to":{"krate":0,"index":4148}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":405163,"byte_end":405164,"line_start":733,"line_end":733,"column_start":52,"column_end":53},"kind":{"Impl":{"id":1080}},"from":{"krate":0,"index":4155},"to":{"krate":0,"index":4148}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":476970,"byte_end":476971,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1081}},"from":{"krate":0,"index":4171},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":477109,"byte_end":477116,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":4166},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":477205,"byte_end":477206,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":1082}},"from":{"krate":0,"index":4180},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":477391,"byte_end":477397,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":4176},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":477475,"byte_end":477476,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":1083}},"from":{"krate":0,"index":4188},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":478491,"byte_end":478495,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":1084}},"from":{"krate":0,"index":4193},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":478589,"byte_end":478593,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":1085}},"from":{"krate":0,"index":4193},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":478852,"byte_end":478859,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":1091}},"from":{"krate":0,"index":12692},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479082,"byte_end":479089,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":1092}},"from":{"krate":0,"index":12692},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479280,"byte_end":479287,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":1093}},"from":{"krate":0,"index":12692},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479592,"byte_end":479605,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":1094}},"from":{"krate":0,"index":12713},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":479941,"byte_end":479950,"line_start":143,"line_end":143,"column_start":27,"column_end":36},"kind":{"Impl":{"id":1100}},"from":{"krate":0,"index":12729},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480151,"byte_end":480160,"line_start":153,"line_end":153,"column_start":26,"column_end":35},"kind":{"Impl":{"id":1101}},"from":{"krate":0,"index":12729},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480339,"byte_end":480348,"line_start":162,"line_end":162,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1102}},"from":{"krate":0,"index":12729},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480668,"byte_end":480675,"line_start":178,"line_end":178,"column_start":41,"column_end":48},"kind":{"Impl":{"id":1103}},"from":{"krate":0,"index":12744},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":480894,"byte_end":480901,"line_start":187,"line_end":187,"column_start":40,"column_end":47},"kind":{"Impl":{"id":1104}},"from":{"krate":0,"index":12744},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481079,"byte_end":481086,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"kind":{"Impl":{"id":1105}},"from":{"krate":0,"index":12744},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481387,"byte_end":481395,"line_start":210,"line_end":210,"column_start":41,"column_end":49},"kind":{"Impl":{"id":1106}},"from":{"krate":0,"index":12759},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481618,"byte_end":481626,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"kind":{"Impl":{"id":1107}},"from":{"krate":0,"index":12759},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":481808,"byte_end":481816,"line_start":227,"line_end":227,"column_start":37,"column_end":45},"kind":{"Impl":{"id":1108}},"from":{"krate":0,"index":12759},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482126,"byte_end":482137,"line_start":242,"line_end":242,"column_start":49,"column_end":60},"kind":{"Impl":{"id":1109}},"from":{"krate":0,"index":12774},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482374,"byte_end":482385,"line_start":251,"line_end":251,"column_start":48,"column_end":59},"kind":{"Impl":{"id":1110}},"from":{"krate":0,"index":12774},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482600,"byte_end":482611,"line_start":259,"line_end":259,"column_start":45,"column_end":56},"kind":{"Impl":{"id":1111}},"from":{"krate":0,"index":12774},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":482956,"byte_end":482968,"line_start":274,"line_end":274,"column_start":49,"column_end":61},"kind":{"Impl":{"id":1112}},"from":{"krate":0,"index":12786},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":483206,"byte_end":483218,"line_start":283,"line_end":283,"column_start":48,"column_end":60},"kind":{"Impl":{"id":1113}},"from":{"krate":0,"index":12786},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":483434,"byte_end":483446,"line_start":291,"line_end":291,"column_start":45,"column_end":57},"kind":{"Impl":{"id":1114}},"from":{"krate":0,"index":12786},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484043,"byte_end":484057,"line_start":311,"line_end":311,"column_start":41,"column_end":55},"kind":{"Impl":{"id":1115}},"from":{"krate":0,"index":12798},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484278,"byte_end":484292,"line_start":320,"line_end":320,"column_start":40,"column_end":54},"kind":{"Impl":{"id":1116}},"from":{"krate":0,"index":12798},"to":{"krate":0,"index":4176}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484491,"byte_end":484505,"line_start":328,"line_end":328,"column_start":37,"column_end":51},"kind":{"Impl":{"id":1117}},"from":{"krate":0,"index":12798},"to":{"krate":0,"index":4184}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484809,"byte_end":484815,"line_start":342,"line_end":342,"column_start":21,"column_end":27},"kind":{"Impl":{"id":1118}},"from":{"krate":0,"index":4357},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":484910,"byte_end":484916,"line_start":347,"line_end":347,"column_start":27,"column_end":33},"kind":{"Impl":{"id":1119}},"from":{"krate":0,"index":4357},"to":{"krate":0,"index":4166}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8634954,"byte_end":8634959,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"kind":{"Impl":{"id":1125}},"from":{"krate":0,"index":12853},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8635292,"byte_end":8635297,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1126}},"from":{"krate":0,"index":12853},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8635390,"byte_end":8635395,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"kind":{"Impl":{"id":1127}},"from":{"krate":0,"index":12853},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8635533,"byte_end":8635539,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1128}},"from":{"krate":0,"index":12867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636083,"byte_end":8636088,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":1129}},"from":{"krate":0,"index":12853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8636664,"byte_end":8636669,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":1130}},"from":{"krate":0,"index":12853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8639818,"byte_end":8639833,"line_start":188,"line_end":188,"column_start":32,"column_end":47},"kind":{"Impl":{"id":1131}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8640343,"byte_end":8640358,"line_start":204,"line_end":204,"column_start":33,"column_end":48},"kind":{"Impl":{"id":1132}},"from":{"krate":0,"index":12890},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8640475,"byte_end":8640490,"line_start":210,"line_end":210,"column_start":32,"column_end":47},"kind":{"Impl":{"id":1133}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8641719,"byte_end":8641734,"line_start":246,"line_end":246,"column_start":26,"column_end":41},"kind":{"Impl":{"id":1134}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8642336,"byte_end":8642346,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"kind":{"Impl":{"id":1135}},"from":{"krate":0,"index":12909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643336,"byte_end":8643346,"line_start":295,"line_end":295,"column_start":45,"column_end":55},"kind":{"Impl":{"id":1136}},"from":{"krate":0,"index":12909},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643591,"byte_end":8643601,"line_start":304,"line_end":304,"column_start":26,"column_end":36},"kind":{"Impl":{"id":1137}},"from":{"krate":0,"index":12909},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643699,"byte_end":8643709,"line_start":310,"line_end":310,"column_start":27,"column_end":37},"kind":{"Impl":{"id":1138}},"from":{"krate":0,"index":12909},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8643850,"byte_end":8643860,"line_start":317,"line_end":317,"column_start":30,"column_end":40},"kind":{"Impl":{"id":1139}},"from":{"krate":0,"index":12909},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8644274,"byte_end":8644290,"line_start":330,"line_end":330,"column_start":32,"column_end":48},"kind":{"Impl":{"id":1140}},"from":{"krate":0,"index":12932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8645398,"byte_end":8645414,"line_start":361,"line_end":361,"column_start":56,"column_end":72},"kind":{"Impl":{"id":1141}},"from":{"krate":0,"index":12932},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8645679,"byte_end":8645695,"line_start":370,"line_end":370,"column_start":37,"column_end":53},"kind":{"Impl":{"id":1142}},"from":{"krate":0,"index":12932},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8645807,"byte_end":8645823,"line_start":376,"line_end":376,"column_start":38,"column_end":54},"kind":{"Impl":{"id":1143}},"from":{"krate":0,"index":12932},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8645966,"byte_end":8645982,"line_start":383,"line_end":383,"column_start":41,"column_end":57},"kind":{"Impl":{"id":1144}},"from":{"krate":0,"index":12932},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646259,"byte_end":8646264,"line_start":391,"line_end":391,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1145}},"from":{"krate":0,"index":12853},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646310,"byte_end":8646315,"line_start":392,"line_end":392,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1146}},"from":{"krate":0,"index":12853},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646482,"byte_end":8646497,"line_start":396,"line_end":396,"column_start":40,"column_end":55},"kind":{"Impl":{"id":1147}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646601,"byte_end":8646616,"line_start":398,"line_end":398,"column_start":33,"column_end":48},"kind":{"Impl":{"id":1148}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646820,"byte_end":8646830,"line_start":402,"line_end":402,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1149}},"from":{"krate":0,"index":12909},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646880,"byte_end":8646890,"line_start":403,"line_end":403,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1150}},"from":{"krate":0,"index":12909},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8646951,"byte_end":8646967,"line_start":404,"line_end":404,"column_start":51,"column_end":67},"kind":{"Impl":{"id":1151}},"from":{"krate":0,"index":12932},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8647031,"byte_end":8647047,"line_start":405,"line_end":405,"column_start":51,"column_end":67},"kind":{"Impl":{"id":1152}},"from":{"krate":0,"index":12932},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8649001,"byte_end":8649006,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1153}},"from":{"krate":0,"index":13050},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8649043,"byte_end":8649048,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1154}},"from":{"krate":0,"index":13050},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8649064,"byte_end":8649070,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"kind":{"Impl":{"id":1155}},"from":{"krate":0,"index":13044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8654701,"byte_end":8654706,"line_start":187,"line_end":187,"column_start":16,"column_end":21},"kind":{"Impl":{"id":1156}},"from":{"krate":0,"index":13050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8654828,"byte_end":8654833,"line_start":193,"line_end":193,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1157}},"from":{"krate":0,"index":13050},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8655111,"byte_end":8655123,"line_start":203,"line_end":203,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1158}},"from":{"krate":0,"index":13017},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8655313,"byte_end":8655325,"line_start":211,"line_end":211,"column_start":26,"column_end":38},"kind":{"Impl":{"id":1159}},"from":{"krate":0,"index":13017},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8655546,"byte_end":8655558,"line_start":218,"line_end":218,"column_start":47,"column_end":59},"kind":{"Impl":{"id":1160}},"from":{"krate":0,"index":13017},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8655890,"byte_end":8655901,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"kind":{"Impl":{"id":1161}},"from":{"krate":0,"index":13057},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8656064,"byte_end":8656075,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"kind":{"Impl":{"id":1162}},"from":{"krate":0,"index":13057},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8656213,"byte_end":8656224,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"kind":{"Impl":{"id":1163}},"from":{"krate":0,"index":13057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/web-developer/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8656576,"byte_end":8656587,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1164}},"from":{"krate":0,"index":13057},"to":{"krate":2,"index":2075}}]}